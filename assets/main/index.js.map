{"version":3,"sources":["assets/Script/cocos-eazax-kit-master/components/charts/ArcProgressBar.ts","assets/Script/cocos-eazax-kit-master/utils/ArrayUtil.ts","assets/Script/cocos-eazax-kit-master/core/AudioPlayer.ts","assets/Script/cocos-eazax-kit-master/components/BackgroundFitter.ts","assets/Script/cocos-eazax-kit-master/utils/Base64Util.ts","assets/Script/cocos-eazax-kit-master/core/renderer/BaseAssembler.ts","assets/Script/cocos-eazax-kit-master/components/renderers/BaseTextureRenderer.ts","assets/Script/cocos-eazax-kit-master/components/tweens/BounceMoveTween.ts","assets/Script/cocos-eazax-kit-master/components/tweens/BounceScaleTween.ts","assets/Script/cocos-eazax-kit-master/utils/BrowserUtil.ts","assets/Script/cocos-eazax-kit-master/components/effects/ColorBrush.ts","assets/Script/cocos-eazax-kit-master/utils/ColorUtil.ts","assets/Script/cocos-eazax-kit-master/components/popups/ConfirmPopup.ts","assets/Script/cocos-eazax-kit-master/components/Counter.ts","assets/Script/cocos-eazax-kit-master/utils/DebugUtil.ts","assets/Script/cocos-eazax-kit-master/utils/DeviceUtil.ts","assets/Script/cocos-eazax-kit-master/components/interaction/Draggable.ts","assets/Script/cocos-eazax-kit-master/misc/EditorAsset.ts","assets/Script/cocos-eazax-kit-master/core/EventManager.ts","assets/Script/cocos-eazax-kit-master/components/effects/GaussianBlur.ts","assets/Script/cocos-eazax-kit-master/utils/GeometryUtil.ts","assets/Script/cocos-eazax-kit-master/components/renderers/GradientColor.ts","assets/Tools/Help.js","assets/Script/cocos-eazax-kit-master/components/effects/HollowOut.ts","assets/Script/Core/Http.ts","assets/Script/cocos-eazax-kit-master/utils/ImageUtil.ts","assets/Script/cocos-eazax-kit-master/core/InstanceEvent.ts","assets/Script/cocos-eazax-kit-master/components/tweens/JellyTween.ts","assets/Script/cocos-eazax-kit-master/components/localization/LocalizationBase.ts","assets/Script/cocos-eazax-kit-master/components/localization/LocalizationLabelString.ts","assets/Script/cocos-eazax-kit-master/components/localization/LocalizationSpriteFrame.ts","assets/Script/cocos-eazax-kit-master/components/LongPress.ts","assets/Script/cocos-eazax-kit-master/components/Marquee.ts","assets/Script/cocos-eazax-kit-master/utils/MathUtil.ts","assets/Script/cocos-eazax-kit-master/components/effects/Mosaic.ts","assets/Script/cocos-eazax-kit-master/utils/NodeUtil.ts","assets/Script/cocos-eazax-kit-master/utils/ObjectUtil.ts","assets/Script/cocos-eazax-kit-master/components/PersistNode.ts","assets/Script/cocos-eazax-kit-master/components/popups/PopupBase.ts","assets/Script/cocos-eazax-kit-master/core/PopupManager.ts","assets/Script/cocos-eazax-kit-master/components/effects/PostProcessing.ts","assets/Script/cocos-eazax-kit-master/utils/PromiseUtil.ts","assets/Script/cocos-eazax-kit-master/components/charts/RadarChart.ts","assets/Script/cocos-eazax-kit-master/components/effects/RadialBlur.ts","assets/Script/cocos-eazax-kit-master/utils/RegexUtil.ts","assets/Script/cocos-eazax-kit-master/components/remote/RemoteAsset.ts","assets/Script/cocos-eazax-kit-master/utils/RenderUtil.ts","assets/Script/cocos-eazax-kit-master/components/RotateAround.ts","assets/Script/cocos-eazax-kit-master/components/RunInBackground.ts","assets/Script/cocos-eazax-kit-master/core/SceneNavigator.ts","assets/Script/cocos-eazax-kit-master/components/ScreenAdapter.ts","assets/Script/cocos-eazax-kit-master/components/effects/SineWave.ts","assets/Script/cocos-eazax-kit-master/utils/StorageUtil.ts","assets/Script/cocos-eazax-kit-master/components/Subtitle.ts","assets/Script/cocos-eazax-kit-master/components/renderers/TextureWithTilingOffset.ts","assets/Script/cocos-eazax-kit-master/utils/TimeUtil.ts","assets/Script/cocos-eazax-kit-master/components/TouchBlocker2.ts","assets/Script/cocos-eazax-kit-master/components/TouchBlocker.ts","assets/Script/cocos-eazax-kit-master/components/TouchEffect.ts","assets/Script/cocos-eazax-kit-master/utils/TweenUtil.ts","assets/Script/cocos-eazax-kit-master/extensions/eazax.ts","assets/Script/cocos-eazax-kit-master/extensions/extension.ts","assets/Script/View/gameViewlayer.js","assets/Script/Mod/httpDef.js","assets/Script/View/jiesuanLayer.ts","assets/Script/View/ruleLayer.ts"],"names":["_a","cc","_decorator","ccclass","property","requireComponent","executeInEditMode","help","menu","ArcProgressBar","_super","_this","apply","this","arguments","graphics","_radius","_clockwise","_startAngle","_range","_lineWidth","_progress","_lineCap","Graphics","LineCap","ROUND","_backgroundColor","Color","_progressColor","curStartAngle","curStartRadians","curEndRadians","curTween","curTweenRes","__extends","Object","defineProperty","prototype","get","set","value","updateProperties","updateProgress","onLoad","init","resetInEditor","getComponent","show","Promise","res","node","opacity","active","tween","to","call","start","hide","lineWidth","lineCap","angleToRadians","endAngle","clear","strokeColor","arc","stroke","offset","angle","radians","duration","progress","stop","Math","PI","__decorate","tooltip","CC_DEV","range","step","type","Component","exports","default","ArrayUtil","copy2DArray","array","newArray","i","length","push","concat","fisherYatesShuffle","count","index","floor","random","temp","confound","slice","sort","flattening","some","v","Array","isArray","combineArrays","array1","array2","__spreadArrays","getRandomValueInArray","AudioPlayer","_masterVolume","_musicVolume","_effectVolume","setMasterVolume","setMusicVolume","setEffectVolume","setVolume","realVolume","_music","forEach","id","audioEngine","_effect","clip","playMusic","has","stopMusic","play","delete","stopAllMusic","pauseMusic","pause","pauseAllMusic","resumeMusic","resume","resumeAllMusic","playEffect","loop","setFinishCallback","stopEffect","_clip","stopAllEffect","pauseEffect","pauseAllEffect","resumeEffect","resumeAllEffect","stopAll","pauseAll","resumeAll","mute","Map","EventManager_1","require","executionOrder","BackgroundFitter","registerEvent","onEnable","adapt","onDestroy","unregisterEvent","on","off","scale","winSize","screenRatio","height","width","designResolution","Canvas","instance","Base64Util","encodeString","string","chr1","chr2","chr3","enc1","enc2","enc3","enc4","keyString","base64","encodeUtf8","charCodeAt","isNaN","charAt","decodeString","replace","indexOf","String","fromCharCode","decodeUtf8","utf8","c","c1","c2","c3","base64ToBlob","window","atob","strings","split","exec","data","arrayBuffer","ArrayBuffer","uint8Array","Uint8Array","Blob","BaseAssembler","floatsPerVert","verticesCount","indicesCount","uvOffset","colorOffset","_local","_renderData","RenderData","initData","initLocal","renderComp","createQuadData","verticesFloats","updateRenderData","comp","_vertsDirty","updateUVs","updateVerts","updateColor","color","uintVerts","uintVDatas","_val","uv","vData","vDatas","srcOffset","dstOffset","appX","anchorX","appY","anchorY","left","bottom","right","top","local","updateWorldVerts","verts","matrixData","_worldMatrix","m","a","b","d","tx","ty","vl","vr","vb","vt","vertexOffset","al","ar","bl","br","cb","ct","db","dt","fillBuffers","renderer","worldMatDirty","renderData","iData","iDatas","buffer","getBuffer","offsetInfo","request","byteOffset","vertexBuffer","_vData","subarray","indicesBuffer","_iData","vertexId","indicesOffset","indiceOffset","l","_handle","_meshBuffer","Assembler","BaseAssembler_1","disallowMultiple","BaseTextureRenderer","_texture","_assembler","_activateMaterial","Node","EventType","SIZE_CHANGED","setVertsDirty","ANCHOR_CHANGED","onDisable","_resetAssembler","materials","_materials","_getDefaultMaterial","MaterialVariant","create","_updateMaterial","texture","material","getMaterial","undefined","getDefine","define","setProperty","markForRender","disableRender","_validateRender","Texture2D","RenderComponent","BounceMoveTween","frequency","decay","v2","targetPos","time","curPos","getPosition","direction","sub","normalize","amplitude","Vec2","distance","x","y","easing","position","v3","end","current","t","pos","mul","getDifference","angularVelocity","sin","exp","BounceScaleTween","targetScale","totalTime","interval","playOnLoad","originalScale","repeatTimes","times","scalingTime","bouncingTime","repeat","delay","setScale","BrowserUtil","clearUrlParam","history","replaceState","setUrlParam","param","map","key","join","getUrlParam","location","query","search","substrings","keyValue","decodeURIComponent","getUrlParams","params","copy","document","element","createElement","readOnly","style","body","appendChild","select","createRange","selectNodeContents","selection","getSelection","removeAllRanges","addRange","result","execCommand","remove","ColorBrush","addComponent","WHITE","lineJoin","LineJoin","getNodeSize","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","targetOff","event","parent","convertToNodeSpaceAR","getLocation","moveTo","circle","lineTo","ColorUtil","hexToRgba","hex","isHex","r","parseInt","substr","g","rgbaToHex","toString","toUpperCase","test","PopupBase_1","ConfirmPopup","titleLabel","contentLabel","confirmBtn","TOUCH_END","onConfirmBtnClick","updateDisplay","options","title","content","confirmCallback","Label","Counter","keepInteger","label","_value","lastTarget","setValue","setTime","target","callback","by","diff","DebugUtil","log","msg","console","showDynamicAtlas","status","dynamicAtlasManager","showDebug","showStats","debug","setDisplayStats","setStatsColor","font","background","profiler","find","warn","children","getChildByName","addChild","macro","MIN_ZINDEX","setContentSize","getBoundingBoxToWorld","setPosition","rect","fillColor","fill","getDrawCalls","drawCalls","DeviceUtil","getSafeAreaRect","sys","platform","os","ANDROID","isNative","isBrowser","isMobile","IPHONE","IPAD","MOBILE_BROWSER","DESKTOP_BROWSER","WECHAT_GAME","QQ_PLAY","BYTEDANCE_GAME","BAIDU_GAME","VIVO_GAME","OPPO_GAME","XIAOMI_GAME","HUAWEI_GAME","ALIPAY_GAME","Draggable","dragThreshold","touchStartPos","dragOffset","isDragging","TOUCH_CANCEL","onTouchCancel","onTouchEnd","touchPosInNode","getParent","touchPosInWorld","onDragMove","onDragStart","onDragEnd","EditorAsset","load","EventManager","name","events","once","onceEvents","compare","splice","onceEvent","emit","args","_i","_b","removeAll","subscription","inCallback","inTarget","GaussianBlur","sprite","sent","Sprite","spriteFrame","getTexture","packable","Material","setMaterial","radius","EffectAsset","readonly","GeometryUtil","pointOnLine","p","ab","ap","collinear","cross","mag","between","min","max","pointInTriangle","sameSide","_p","_c","ac","v1","dot","pointLineDistance","Vec3","GradientColor","_colors","RED","BLUE","colors","replaceFunction","restoreFunction","renderComponent","assembler","Assembler2D","nodeColor","_renderFlag","RenderFlow","FLAG_COLOR","Help","preserveDecimal","number","precision","pow","toFixed","HollowOutShape","HollowOut","_shape","Rect","_center","_width","_height","_round","_feather","tweenRes","Circle","center","round","feather","getCenter","getWidth","getHeight","getRound","getFeather","rectTo","Tween","stopAllByTarget","unscheduleAllCallbacks","scheduleOnce","circleTo","reset","setNodeSize","sqrt","Enum","visible","IHttpMethod","Http","url","method","GET","getRequest","POST","postRequest","https","s","getUrl","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","responseText","send","paramStr","statusText","ImageUtil","getTrim","minX","maxX","minY","j","maxY","getPixelsData","canvas","ctx","getContext","image","getHtmlElementObj","drawImage","imageData","getImageData","getPixelColor","pixelsData","imageToBase64","extname","includes","canvas_1","ctx_1","image_1","Image","src","onload","dataURL","toDataURL","base64ToCCTexture","initWithElement","InstanceEvent","promises","all","JellyTween","pressScale","pressTime","scaleBackTime","scaleX","scaleY","Lang","DefaultLang","LANG_CHANGED","LocalizationBase","defaultLang","cn","curLang","Cn","langChanged","lang","onLangChanged","LocalizationBase_1","LocalizationLabelString","brasil","columbia","Brasil","LocalizationSpriteFrame","eng","SpriteFrame","TriggerWay","LONG_PRESS","LongPress","trggerTime","trggerWay","Immediately","longPressEvents","hasAccomplished","registerNodeEvent","unregisterNodeEvent","onPressAccomplished","bind","trigger","AfterLoosing","EventHandler","emitEvents","Marquee","view","texts","speed","isPlaying","endCallback","update","updatePosition","setLabel","next","text","clean","RichText","MathUtil","getRandomInt","getPseudoRandomInt","seed","ceil","getAngle","p1","p2","atan","getDistance","angleToRadian","addSafely","aDigits","bDigits","multiplier","Mosaic","_size","Size","resolution","tileSize","size","NodeUtil","getRelativePosition","container","worldPos","convertToWorldSpaceAR","isPosOnNodeRect","contains","areNodesOverlap","node1","node2","rect1","rect2","containsRect","intersects","getNodeSelfBoundingBoxToWorld","getContentSize","anchorPoint","getAnchorPoint","transformMat4","ObjectUtil","isObject","deepCopy","hasOwnProperty","Date","getTime","JSON","parse","stringify","PersistNode","setParent","director","getScene","game","addPersistRootNode","PopupBase","main","animDuration","blocker","finishCallback","onShow","suspended","BlockInputEvents","onHide","CacheMode","ShowResult","PopupManager","_prefabCache","_nodeCache","_current","_queue","_suspended","path","__awaiter","parseParams","locked","immediately","suspend","Waiting","getNodeFromCache","isValid","loadStartCallback","prefab","loadFinishCallback","Failed","instantiate","popup","setSiblingIndex","MAX_ZINDEX","recycle","mode","Done","_res","nodeCache","prefabCache","addRef","shift","priority","Once","destroy","release","Normal","Frequent","removeFromParent","prefabMap","resources","error","refCount","decRef","PopupParamsType","PostProcessing","inputCamera","outputSprite","renderTexture","onCanvasSizeChanged","RenderTexture","screenSize","getVisibleSizeInPixel","initWithSize","targetTexture","abs","updateSize","Camera","PromiseUtil","sleep","RadarChart","_axisLength","_axes","_axisScales","_drawAxes","_gridLineWidth","_innerGridLineWidth","_gridLineColor","GRAY","_gridFillColor","_dataValuesStrings","_dataLineWidths","_dataLineColors","_dataFillColors","_dataJoinColors","_drawDataJoin","keepUpdating","angles","_curDatas","draw","curDatas","drawWithProperties","datas","valueStrings","dataValuesStrings","lineWidths","lineColors","fillColors","joinColors","values","processValuesString","defaultOptions","lineColor","joinColor","valuesString","parseFloat","drawBase","iAngle","axes","scalesSet","axisLength","axisScales","iLength","scales","radian","cos","out","close","resizeCurDatasValues","data_1","coords","coord","curData","data_2","Integer","RadialBlur","_strength","RegexUtil","isDWORD","RemoteAsset","loaded","interrupted","component","RenderUtil","getRenderTexture","cameraNode","camera","clearFlags","ClearFlags","COLOR","backgroundColor","zoomRatio","render","renderWithMaterial","srcRT","dstRT","tempNode","tempSprite","sizeMode","SizeMode","RAW","trim","flipY","DepthStencilFormat","RB_FMT_S8","readPixels","k","flipped","Axis","RotateAround","clockwise","timePerRound","faceToTarget","faceAxis","NegativeY","autoStart","isRotating","run","PositiveX","PositiveY","NegativeX","anglePerFrame","RunInBackground","worker","onVisibilityChange","addEventListener","removeEventListener","visibilityState","isPaused","Worker","onmessage","terminate","displayName","SceneNavigator","_home","_history","_curScene","_param","setHome","goHome","coverHistory","onLaunched","loadScene","go","back","pop","ScreenAdapter","setResizeCallback","onResize","designRatio","setFitWidth","setFitHeight","fitHeight","fitWidth","SineWaveDirection","SineWave","_amplitude","_angularVelocity","_frequency","_direction","Left","setSpriteFrame","effect","StorageUtil","localStorage","setItem","dataString","getItem","removeItem","Subtitle","queen","curIndex","Subtitle_1","print","TextureWithTilingOffset","_material","_tilingOffset","Vec4","z","w","override","TimeUtil","getTimestamp","getDate","toLocaleDateString","getTargetTimestamp","hour","minute","second","msToHMS","separator","keepHours","hours","minutes","seconds","padStart","TouchBlocker2","allowList","blocked","persist","TouchBlocker2_1","onEvent","setSwallowTouches","clickOnAnyTarget","stopPropagationImmediate","swallow","_touchListener","addTargets","nodes","setTarget","clearTargets","TouchBlocker","isBlockAll","isPassAll","onTouchEvent","blockAll","passAll","TouchEffect","effectPrefab","effectContainer","maxQuantity","triggerByMoving","useNodePool","nodePoolLimit","curCount","lastTriggerTime","nodePool","NodePool","now","recycleEffect","put","Prefab","TweenUtil","flip","onMiddle","onComplete","skewY","parallel","eazax","clamp","threshold","suffix","charCount","httpDef","_require","Language","Class","extends","properties","gamebtn","Button","btn_rule","odds_Node","btn_patternSelect","panel_patternSelect","node_close_panel_patternSelect","btn_Baixo","btn_Médio","btn_Alto","txt_patternSelect","txt_score","btn_play","txt_count","jiesuanLayer","txt_bet","btn_min","btn_max","btn_half","btn_double","btn_Escolha","btn_LimparTabela","manual_btn","auto_btn","autoOk_btn","auto_bg2","mask","editbox_number_of_bets","EditBox","editbox_stop_on_profit","editbox_stop_on_loss","editbox_max_bet_amount","editbox_on_win","editbox_on_loss","toggle_on_win","Toggle","toggle_on_loss","popupNode","ruleLayer","btn_music","audioSource","AudioSource","language","Columbia","min_bet","max_bet","token","parmStr","href","parm","ReqStartDefault","parsedData","gold","preloadDir","getDirWithPath","info","resList","loadDir","err","assets","_step","uuidDict","_iterator","_createForOfIteratorHelperLoose","done","item","uuid","_step2","_iterator2","asset","prefebList","_step3","_iterator3","_step4","_iterator4","fontSize","num","gameButtonClickEvent","ruleButtonClickEvent","openPatternSelectButtonClickEvent","closePatternSelectButtonClickEvent","patternSelectButtonClickEvent","playButtonClickEvent","betButtonClickEvent","EditboxEvent","resetIncreaseEvent","randomButtonClickEvent","clearSelectButton","switchAutoButtonClickEvent","musicButtonClickEvent","Multiplicador","MultiplicadorArr","bet","SelectedBtnArr","winBtnArr","rewardcount","totalwin","balancegold","cnfchoose","isAuto","numberofbet","stoponprofit","stoponloss","maxbetamount","onwinincrease","onlossincrease","iswinresetIncrease","islossresetIncrease","istop","play_btn_state","resetData","isChecked","interactable","e","selectButtonLogic","filter","getRes","checkBtnState","updateOdd","_this2","removeAllChildren","heng","getPrefeb","newNode","_newNode","childrenCount","startGame","ReqKenoGameBet","isauto","str","encodeURIComponent","choosenum","setTimeout","code","goldnumber","playDrawAni","jiesuanLayerOptions","dialog","BLACK","volume","Number","myUpdate","RandomNumbers","getRandomNumbers","doSomething","list","_step5","_iterator5","numbers","from","_","_ref","confirmOptions","module","winnumLabel","lossnumLabel","rule_sprite","rule_txt","hongdian","huidian","nextBtn","onNextBtnClick"],"mappings":"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","sourcesContent":["const { ccclass, property, requireComponent, executeInEditMode, help, menu } = cc._decorator;\n\n/**\n * 弧形进度条\n * @author 陈皮皮 (ifaswind)\n * @version 20210908\n * @see ArcProgressBar.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/charts/ArcProgressBar.ts\n */\n@ccclass\n@requireComponent(cc.Graphics)\n@executeInEditMode\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/charts/ArcProgressBar.ts')\n@menu('eazax/图表组件/ArcProgressBar')\nexport default class ArcProgressBar extends cc.Component {\n\n    @property(cc.Graphics)\n    protected graphics: cc.Graphics = null;\n\n    @property()\n    protected _radius: number = 100;\n    @property({ tooltip: CC_DEV && '半径' })\n    public get radius() {\n        return this._radius;\n    }\n    public set radius(value: number) {\n        this._radius = value;\n        this.updateProperties();\n    }\n\n    @property()\n    protected _clockwise: boolean = true;\n    @property({ tooltip: CC_DEV && '顺时针方向' })\n    public get clockwise() {\n        return this._clockwise;\n    }\n    public set clockwise(value: boolean) {\n        this._clockwise = value;\n        this.updateProperties();\n    }\n\n    @property()\n    protected _startAngle: number = 90;\n    @property({ tooltip: CC_DEV && '开始角度 (基于 y 轴)' })\n    public get startAngle() {\n        return this._startAngle;\n    }\n    public set startAngle(value: number) {\n        this._startAngle = value;\n        this.updateProperties();\n    }\n\n    @property()\n    protected _range: number = 180;\n    @property({ tooltip: CC_DEV && '范围 (角度)' })\n    public get range() {\n        return this._range;\n    }\n    public set range(value: number) {\n        this._range = value;\n        this.updateProperties();\n    }\n\n    @property()\n    protected _lineWidth: number = 20;\n    @property({ tooltip: CC_DEV && '线宽' })\n    public get lineWidth() {\n        return this._lineWidth;\n    }\n    public set lineWidth(value: number) {\n        this._lineWidth = value;\n        this.updateProperties();\n    }\n\n    @property()\n    protected _progress: number = 0.4;\n    @property({ range: [0, 1], step: 0.01, tooltip: CC_DEV && '进度 (0 ~ 1)' })\n    public get progress() {\n        return this._progress;\n    }\n    public set progress(value: number) {\n        this.updateProgress(value);\n    }\n\n    @property()\n    protected _lineCap: cc.Graphics.LineCap = cc.Graphics.LineCap.ROUND;\n    @property({ type: cc.Graphics.LineCap, tooltip: CC_DEV && '线帽' })\n    public get lineCap() {\n        return this._lineCap;\n    }\n    public set lineCap(value: number) {\n        this._lineCap = value;\n        this.updateProperties();\n    }\n\n    @property()\n    protected _backgroundColor: cc.Color = new cc.Color(255, 255, 255, 255);\n    @property({ type: cc.Color, tooltip: CC_DEV && '背景颜色' })\n    public get backgroundColor() {\n        return this._backgroundColor;\n    }\n    public set backgroundColor(value: cc.Color) {\n        this._backgroundColor = value;\n        this.updateProperties();\n    }\n\n    @property()\n    protected _progressColor: cc.Color = new cc.Color(50, 101, 246, 255);\n    @property({ type: cc.Color, tooltip: CC_DEV && '进度颜色' })\n    public get progressColor() {\n        return this._progressColor;\n    }\n    public set progressColor(value: cc.Color) {\n        this._progressColor = value;\n        this.updateProperties();\n    }\n\n    /**\n     * 预计算的开始角度\n     */\n    protected curStartAngle: number = 0;\n\n    /**\n     * 预计算的开始弧度\n     */\n    protected curStartRadians: number = 0;\n\n    /**\n     * 预计算的结束弧度\n     */\n    protected curEndRadians: number = 0;\n\n    /**\n     * 当前缓动对象\n     */\n    protected curTween: cc.Tween = null;\n\n    /**\n     * 当前缓动的 Promise resolve\n     */\n    protected curTweenRes: Function = null;\n\n    /**\n     * 生命周期：加载\n     */\n    protected onLoad() {\n        this.init();\n    }\n\n    /**\n     * 编辑器回调：重置\n     */\n    protected resetInEditor() {\n        this.init();\n    }\n\n    /**\n     * 初始化\n     */\n    protected init() {\n        if (!this.graphics) {\n            this.graphics = this.getComponent(cc.Graphics);\n        }\n        this.updateProperties();\n    }\n\n    /**\n     * 展示\n     */\n    public show() {\n        return new Promise<void>(res => {\n            const node = this.graphics.node;\n            node.opacity = 0;\n            node.active = true;\n            cc.tween(node)\n                .to(0.1, { opacity: 255 })\n                .call(res)\n                .start();\n        });\n    }\n\n    /**\n     * 隐藏\n     */\n    public hide() {\n        return new Promise<void>(res => {\n            const node = this.graphics.node;\n            cc.tween(node)\n                .to(0.1, { opacity: 0 })\n                .set({ active: false })\n                .call(res)\n                .start();\n        });\n    }\n\n    /**\n     * 更新属性\n     */\n    protected updateProperties() {\n        // 设置样式\n        const graphics = this.graphics;\n        graphics.lineWidth = this._lineWidth;\n        graphics.lineCap = this._lineCap;\n        // 预计算角度\n        this.curStartAngle = this._startAngle + 90;\n        this.curStartRadians = this.angleToRadians(this.curStartAngle);\n        const endAngle = this.curStartAngle + (this._clockwise ? -this._range : this._range);\n        this.curEndRadians = this.angleToRadians(endAngle);\n        // 重新绘制进度条\n        this.updateProgress(this._progress);\n    }\n\n    /**\n     * 更新进度\n     * @param value 进度值（0~1）\n     */\n    public updateProgress(value: number) {\n        // 处理并保存值\n        if (value < 0) {\n            value = 0;\n        } else if (value > 1) {\n            value = 1;\n        }\n        this._progress = value;\n\n        // 清空画布\n        const graphics = this.graphics;\n        graphics.clear();\n\n        // 画出背景\n        graphics.strokeColor = this._backgroundColor;\n        graphics.arc(0, 0, this._radius, this.curStartRadians, this.curEndRadians, !this._clockwise);\n        graphics.stroke();\n\n        // 计算并画出进度\n        const offset = this._clockwise ? -this._range : this._range,\n            angle = this.curStartAngle + (offset * value),\n            radians = this.angleToRadians(angle);\n        graphics.strokeColor = this._progressColor;\n        graphics.arc(0, 0, this._radius, this.curStartRadians, radians, !this._clockwise);\n        graphics.stroke();\n    }\n\n    /**\n     * 缓动进度\n     * @param duration 时长\n     * @param progress 目标进度\n     */\n    public to(duration: number, progress: number) {\n        return new Promise<void>(res => {\n            this.stop();\n            this.curTweenRes = res;\n            this.curTween = cc.tween<ArcProgressBar>(this)\n                .to(duration, { progress })\n                .call(() => {\n                    this.curTween = null;\n                    this.curTweenRes = null;\n                })\n                .call(res)\n                .start();\n        });\n    }\n\n    /**\n     * 停止当前缓动\n     */\n    public stop() {\n        if (this.curTween) {\n            this.curTween.stop();\n            this.curTween = null;\n        }\n        if (this.curTweenRes) {\n            this.curTweenRes();\n            this.curTweenRes = null;\n        }\n    }\n\n    /**\n     * 角度转弧度\n     * @param angle 角度\n     */\n    public angleToRadians(angle: number) {\n        return (Math.PI / 180) * angle;\n    }\n\n}\n","/**\r\n * 数组工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20200812\r\n * @see ArrayUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/ArrayUtil.ts\r\n */\r\nexport default class ArrayUtil {\r\n\r\n    /**\r\n     * 复制二维数组\r\n     * @param array 目标数组 \r\n     */\r\n    public static copy2DArray(array: any[][]): any[][] {\r\n        let newArray: any[][] = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            newArray.push(array[i].concat());\r\n        }\r\n        return newArray;\r\n    }\r\n\r\n    /**\r\n    * Fisher-Yates Shuffle 随机置乱算法\r\n    * @param array 目标数组\r\n    */\r\n    public static fisherYatesShuffle(array: any[]): any[] {\r\n        let count = array.length;\r\n        while (count) {\r\n            let index = Math.floor(Math.random() * count--);\r\n            let temp = array[count];\r\n            array[count] = array[index];\r\n            array[index] = temp;\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n    * 混淆数组\r\n    * @param array 目标数组\r\n    */\r\n    public static confound(array: []): any[] {\r\n        let result = array.slice().sort(() => Math.random() - .5);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 数组扁平化\r\n     * @param array 目标数组\r\n     */\r\n    public static flattening(array: any[]) {\r\n        for (; array.some(v => Array.isArray(v));) {    // 判断 array 中是否有数组\r\n            array = [].concat.apply([], array); // 压扁数组\r\n        }\r\n        return array;\r\n    }\r\n\r\n    // /**\r\n    // * 数组去重\r\n    // * @param array 目标数组\r\n    // */\r\n    // public static removeRepeated(array: []): any[] {\r\n    //     let newArray = [...new Set(array)];\r\n    //     return newArray;\r\n    // }\r\n\r\n    /**\r\n    * 合并数组\r\n    * @param array1 目标数组1\r\n    * @param array2 目标数组2\r\n    */\r\n    public static combineArrays(array1: any[], array2: any[]): any[] {\r\n        let newArray = [...array1, ...array2];\r\n        return newArray;\r\n    }\r\n\r\n    /**\r\n    * 获取随机数组成员\r\n    * @param array 目标数组\r\n    */\r\n    public static getRandomValueInArray(array: any[]): any {\r\n        let newArray = array[Math.floor(Math.random() * array.length)];\r\n        return newArray;\r\n    }\r\n    \r\n}\r\n","/**\r\n * 音频播放类\r\n */\r\nexport default class AudioPlayer {\r\n\r\n    private static _music: Map<cc.AudioClip, number> = new Map();\r\n\r\n    private static _effect: Map<number, cc.AudioClip> = new Map();\r\n\r\n    private static _masterVolume: number = 1.0;\r\n\r\n    /**\r\n     * 主音量\r\n     */\r\n    public static get masterVolume(): number { return this._masterVolume; }\r\n\r\n    private static _musicVolume: number = 1.0;\r\n\r\n    /**\r\n     * 音乐音量\r\n     */\r\n    public static get musicVolume(): number { return this._musicVolume; }\r\n\r\n    private static _effectVolume: number = 1.0;\r\n\r\n    /**\r\n     * 特效音量\r\n     */\r\n    public static get effectVolume(): number { return this._effectVolume; }\r\n\r\n    /**\r\n     * 设置主音量\r\n     * @param value 音量值（0.0 ~ 1.0）\r\n     */\r\n    public static setMasterVolume(value: number): void {\r\n        if (value < 0.0) value = 0.0;\r\n        else if (value > 1.0) value = 1.0;\r\n\r\n        this._masterVolume = value;\r\n        this.setMusicVolume(this._musicVolume);\r\n        this.setEffectVolume(this._effectVolume);\r\n    }\r\n\r\n    /**\r\n     * 设置音量（音乐与特效）\r\n     * @param value 音量值（0.0 ~ 1.0）\r\n     */\r\n    public static setVolume(value: number): void {\r\n        this.setMusicVolume(value);\r\n        this.setEffectVolume(value);\r\n    }\r\n\r\n    /**\r\n     * 设置音乐音量\r\n     * @param value 音量值（0.0 ~ 1.0）\r\n     */\r\n    public static setMusicVolume(value: number): void {\r\n        if (value < 0.0) value = 0.0;\r\n        else if (value > 1.0) value = 1.0;\r\n\r\n        this._musicVolume = value;\r\n        let realVolume = this._masterVolume * value;\r\n        this._music.forEach((id, clip) => cc.audioEngine.setVolume(id, realVolume));\r\n    }\r\n\r\n    /**\r\n     * 设置特效音量\r\n     * @param value 音量值（0.0 ~ 1.0）\r\n     */\r\n    public static setEffectVolume(value: number): void {\r\n        if (value < 0.0) value = 0.0;\r\n        else if (value > 1.0) value = 1.0;\r\n\r\n        this._effectVolume = value;\r\n        let realVolume = this._masterVolume * value;\r\n        this._effect.forEach((clip, id) => cc.audioEngine.setVolume(id, realVolume));\r\n    }\r\n\r\n    /**\r\n     * 播放音乐\r\n     * @param clip 音频\r\n     */\r\n    public static playMusic(clip: cc.AudioClip): void {\r\n        if (this._music.has(clip)) this.stopMusic(clip);\r\n        let id = cc.audioEngine.play(clip, true, this._masterVolume * this._musicVolume);\r\n        this._music.set(clip, id);\r\n    }\r\n\r\n    /**\r\n     * 停止音乐\r\n     * @param clip 音频\r\n     */\r\n    public static stopMusic(clip: cc.AudioClip): void {\r\n        if (!this._music.has(clip)) return;\r\n        cc.audioEngine.stop(this._music.get(clip));\r\n        this._music.delete(clip);\r\n    }\r\n\r\n    /**\r\n     * 停止所有音乐\r\n     */\r\n    public static stopAllMusic(): void {\r\n        this._music.forEach((id, clip) => this.stopMusic(clip));\r\n    }\r\n\r\n    /**\r\n     * 暂停音乐\r\n     * @param clip 音频\r\n     */\r\n    public static pauseMusic(clip: cc.AudioClip): void {\r\n        if (!this._music.has(clip)) return;\r\n        cc.audioEngine.pause(this._music.get(clip));\r\n    }\r\n\r\n    /**\r\n     * 暂停所有音乐\r\n     */\r\n    public static pauseAllMusic(): void {\r\n        this._music.forEach((id, clip) => this.pauseMusic(clip));\r\n    }\r\n\r\n    /**\r\n     * 恢复音乐\r\n     * @param clip 音频\r\n     */\r\n    public static resumeMusic(clip: cc.AudioClip): void {\r\n        if (!this._music.has(clip)) return;\r\n        cc.audioEngine.resume(this._music.get(clip));\r\n    }\r\n\r\n    /**\r\n     * 恢复所有音乐\r\n     */\r\n    public static resumeAllMusic(): void {\r\n        this._music.forEach((id, clip) => this.resumeMusic(clip));\r\n    }\r\n\r\n    /**\r\n     * 播放特效音频\r\n     * @param clip 音频\r\n     * @param loop 循环\r\n     */\r\n    public static playEffect(clip: cc.AudioClip, loop: boolean): void {\r\n        let id = cc.audioEngine.play(clip, loop, this._masterVolume * this._effectVolume);\r\n        this._effect.set(id, clip);\r\n        if (!loop) cc.audioEngine.setFinishCallback(id, () => this._effect.delete(id));\r\n    }\r\n\r\n    /**\r\n     * 停止特效音频\r\n     * @param clip 音频\r\n     */\r\n    public static stopEffect(clip: cc.AudioClip): void {\r\n        this._effect.forEach((_clip, id) => {\r\n            if (_clip === clip) {\r\n                cc.audioEngine.stop(id);\r\n                this._effect.delete(id);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 停止所有特效音频\r\n     */\r\n    public static stopAllEffect(): void {\r\n        this._effect.forEach((clip, id) => {\r\n            cc.audioEngine.stop(id);\r\n            this._effect.delete(id);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 暂停特效音频\r\n     * @param clip 音频\r\n     */\r\n    public static pauseEffect(clip: cc.AudioClip): void {\r\n        this._effect.forEach((_clip, id) => _clip === clip && cc.audioEngine.pause(id));\r\n    }\r\n\r\n    /**\r\n     * 暂停所有特效音频\r\n     */\r\n    public static pauseAllEffect(): void {\r\n        this._effect.forEach((clip, id) => cc.audioEngine.pause(id));\r\n    }\r\n\r\n    /**\r\n     * 恢复特效音频\r\n     * @param clip 音频\r\n     */\r\n    public static resumeEffect(clip: cc.AudioClip): void {\r\n        this._effect.forEach((_clip, id) => _clip === clip && cc.audioEngine.resume(id));\r\n    }\r\n\r\n    /**\r\n     * 恢复所有特效音频\r\n     */\r\n    public static resumeAllEffect(): void {\r\n        this._effect.forEach((clip, id) => cc.audioEngine.resume(id));\r\n    }\r\n\r\n    /**\r\n     * 停止所有音频\r\n     */\r\n    public static stopAll(): void {\r\n        this.stopAllMusic();\r\n        this.stopAllEffect();\r\n    }\r\n\r\n    /**\r\n     * 暂停所有音频\r\n     */\r\n    public static pauseAll(): void {\r\n        this.pauseAllMusic();\r\n        this.pauseAllEffect();\r\n    }\r\n\r\n    /**\r\n     * 恢复所有音频\r\n     */\r\n    public static resumeAll(): void {\r\n        this.resumeAllMusic();\r\n        this.resumeAllEffect();\r\n    }\r\n\r\n    /**\r\n     * 静音\r\n     */\r\n    public static mute(): void {\r\n        this.setMasterVolume(0.0);\r\n    }\r\n\r\n}\r\n","import EventManager from \"../core/EventManager\";\r\n\r\nconst { ccclass, executionOrder } = cc._decorator;\r\n\r\n/**\r\n * 背景适配组件\r\n * @see BackgroundFitter.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/BackgroundFitter.ts\r\n * @version 20210504\r\n */\r\n@ccclass\r\n@executionOrder(-99)\r\nexport default class BackgroundFitter extends cc.Component {\r\n\r\n    /**\r\n     * 生命周期：加载\r\n     */\r\n    protected onLoad() {\r\n        this.registerEvent();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：组件启用\r\n     */\r\n    protected onEnable() {\r\n        this.adapt();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：销毁\r\n     */\r\n    protected onDestroy() {\r\n        this.unregisterEvent();\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    protected registerEvent() {\r\n        EventManager.on('view-resize', this.adapt, this);\r\n    }\r\n\r\n    /**\r\n     * 反注册事件\r\n     */\r\n    protected unregisterEvent() {\r\n        EventManager.off('view-resize', this.adapt, this);\r\n    }\r\n\r\n    /**\r\n     * 适配\r\n     */\r\n    protected adapt() {\r\n        // 实际屏幕比例\r\n        const winSize = cc.winSize,\r\n            screenRatio = winSize.height / winSize.width;\r\n        // 设计比例\r\n        const designResolution = cc.Canvas.instance.designResolution,\r\n            designRatio = designResolution.height / designResolution.width;\r\n        // 缩放\r\n        let scale = 1;\r\n        if (screenRatio >= designRatio) {\r\n            scale = winSize.height / designResolution.height;\r\n        } else {\r\n            scale = winSize.width / designResolution.width;\r\n        }\r\n        this.node.scale = scale;\r\n    }\r\n\r\n}\r\n","/**\n * Base64 工具\n * @author 陈皮皮 (ifaswind)\n * @version 20220122\n * @see Base64Util.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/Base64Util.ts\n */\nexport default class Base64Util {\n\n    /**\n     * 将普通文本编码为 Base64 格式文本\n     * @param string \n     * @see\n     */\n    public static encodeString(string: string) {\n        // codes from http://www.webtoolkit.info/javascript-base64.html\n        const keyString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n        let base64 = '';\n        let i = 0;\n        let chr1: number, chr2: number, chr3: number,\n            enc1: number, enc2: number, enc3: number, enc4: number;\n\n        string = Base64Util.encodeUtf8(string);\n\n        while (i < string.length) {\n            chr1 = string.charCodeAt(i++);\n            chr2 = string.charCodeAt(i++);\n            chr3 = string.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n\n            base64 = base64 + keyString.charAt(enc1) + keyString.charAt(enc2) + keyString.charAt(enc3) + keyString.charAt(enc4);\n        }\n\n        return base64;\n    }\n\n    /**\n     * 将 Base64 格式文本解码为普通文本\n     * @param base64 \n     */\n    public static decodeString(base64: string) {\n        // codes from http://www.webtoolkit.info/javascript-base64.html\n        const keyString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n        let string = '';\n        let i = 0;\n        let chr1: number, chr2: number, chr3: number,\n            enc1: number, enc2: number, enc3: number, enc4: number;\n\n        base64 = base64.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < base64.length) {\n            enc1 = keyString.indexOf(base64.charAt(i++));\n            enc2 = keyString.indexOf(base64.charAt(i++));\n            enc3 = keyString.indexOf(base64.charAt(i++));\n            enc4 = keyString.indexOf(base64.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            string = string + String.fromCharCode(chr1);\n\n            if (enc3 != 64) {\n                string = string + String.fromCharCode(chr2);\n            }\n            if (enc4 != 64) {\n                string = string + String.fromCharCode(chr3);\n            }\n        }\n\n        string = Base64Util.decodeUtf8(string);\n\n        return string;\n    }\n\n    /**\n     * 将普通文本编码为 UTF-8 格式文本\n     * @param string \n     */\n    public static encodeUtf8(string: string) {\n        // codes from http://www.webtoolkit.info/javascript-base64.html\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utf8 = '';\n\n        for (let i = 0; i < string.length; i++) {\n            const c = string.charCodeAt(i);\n\n            if (c < 128) {\n                utf8 += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utf8 += String.fromCharCode((c >> 6) | 192);\n                utf8 += String.fromCharCode((c & 63) | 128);\n            } else {\n                utf8 += String.fromCharCode((c >> 12) | 224);\n                utf8 += String.fromCharCode(((c >> 6) & 63) | 128);\n                utf8 += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utf8;\n    }\n\n    /**\n     * 将为 UTF-8 格式文本解码为普通文本\n     * @param utf8 \n     */\n    public static decodeUtf8(utf8: string) {\n        // codes from http://www.webtoolkit.info/javascript-base64.html\n        let string = '';\n        let i = 0;\n        let c1 = 0, c2 = 0, c3 = 0;\n\n        while (i < utf8.length) {\n            c1 = utf8.charCodeAt(i);\n\n            if (c1 < 128) {\n                string += String.fromCharCode(c1);\n                i++;\n            } else if ((c1 > 191) && (c1 < 224)) {\n                c2 = utf8.charCodeAt(i + 1);\n                string += String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utf8.charCodeAt(i + 1);\n                c3 = utf8.charCodeAt(i + 2);\n                string += String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n\n    /**\n     * (仅 Web 平台下可用) 将 Base64 文本转为二进制数据\n     * @param base64 \n     */\n    public static base64ToBlob(base64: string) {\n        if (!window || !window.atob) {\n            return null;\n        }\n        const strings = base64.split(',');\n        const type = /image\\/\\w+|;/.exec(strings[0])[0];\n        const data = window.atob(strings[1]);\n        const arrayBuffer = new ArrayBuffer(data.length);\n        const uint8Array = new Uint8Array(arrayBuffer);\n        for (let i = 0; i < data.length; i++) {\n            uint8Array[i] = data.charCodeAt(i) & 0xff;\n        }\n        return new Blob([uint8Array], { type: type });\n    }\n\n}\n\nif (CC_PREVIEW) {\n    window['Base64Util'] = Base64Util;\n}\n","/**\n * 基础顶点装配器\n * @author 陈皮皮 (ifaswind)\n * @version 20210228\n * @see BaseAssembler.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/renderer/BaseAssembler.ts\n */\nexport default class BaseAssembler extends cc.Assembler {\n\n    /**\n     * 每个顶点的数据数量\n     */\n    public floatsPerVert: number = 5;\n\n    /**\n     * 顶点数量\n     */\n    public verticesCount: number = 4;\n\n    /**\n     * 索引数量\n     */\n    public indicesCount: number = 6;\n\n    /**\n     * UV 偏移\n     */\n    public uvOffset: number = 2;\n\n    /**\n     * 颜色偏移\n     */\n    public colorOffset: number = 4;\n\n    /**\n     * 本地坐标顶点数据\n     */\n    public _local: number[] = null;\n\n    /**\n     * 所有顶点的数据总数量\n     */\n    public get verticesFloats() {\n        return this.verticesCount * this.floatsPerVert;\n    }\n\n    constructor() {\n        super();\n        // 创建渲染数据\n        this._renderData = new cc.RenderData();\n        this._renderData.init(this);\n        // 初始化\n        this.initData();\n        this.initLocal();\n    }\n\n    /**\n     * 初始化\n     * @param renderComp \n     */\n    public init(renderComp: cc.RenderComponent) {\n        super.init(renderComp);\n    }\n\n    /**\n     * 初始化渲染数据\n     */\n    public initData() {\n        this._renderData.createQuadData(0, this.verticesFloats, this.indicesCount);\n    }\n\n    /**\n     * 初始化本地坐标数据\n     */\n    public initLocal() {\n        this._local = [];\n        this._local.length = this.verticesCount;\n    }\n\n    /**\n     * 更新渲染数据\n     * @param comp \n     */\n    public updateRenderData(comp: cc.RenderComponent) {\n        if (comp._vertsDirty) {\n            this.updateUVs(comp);\n            this.updateVerts(comp);\n            comp._vertsDirty = false;\n        }\n    }\n\n    /**\n     * 更新颜色数据\n     * @param comp \n     * @param color \n     */\n    public updateColor(comp: cc.RenderComponent, color: number) {\n        const uintVerts = this._renderData.uintVDatas[0];\n        if (!uintVerts) return;\n        color = color != null ? color : comp.node.color._val;\n        const verticesCount = this.verticesCount;\n        const colorOffset = this.colorOffset;\n        const floatsPerVert = this.floatsPerVert;\n        for (let i = 0; i < verticesCount; i++) {\n            uintVerts[colorOffset + (i * floatsPerVert)] = color;\n        }\n    }\n\n    // 更新 UV 数据\n    public updateUVs(comp: cc.RenderComponent) {\n        // 设置纹理 UV 起始值\n        const left = 0, right = 1, bottom = 1, top = 0;\n        const uv: number[] = [];\n        // 左下\n        uv[0] = left;\n        uv[1] = bottom;\n        // 右下\n        uv[2] = right;\n        uv[3] = bottom;\n        // 左上\n        uv[4] = left;\n        uv[5] = top;\n        // 右上\n        uv[6] = right;\n        uv[7] = top;\n\n        // 填充 UV 数据\n        const vData = this._renderData.vDatas[0];\n        const floatsPerVert = this.floatsPerVert;\n        const uvOffset = this.uvOffset;\n        for (let i = 0; i < 4; i++) {\n            const srcOffset = i * 2;\n            const dstOffset = floatsPerVert * i + uvOffset;\n            vData[dstOffset] = uv[srcOffset];\n            vData[dstOffset + 1] = uv[srcOffset + 1];\n        }\n    }\n\n    /**\n     * 更新本地坐标顶点数据\n     * @param comp \n     */\n    public updateVerts(comp: cc.RenderComponent) {\n        const node = comp.node,\n            width = node.width, height = node.height,\n            appX = node.anchorX * width, appY = node.anchorY * height;\n\n        // 依据宽高和锚点位置计算四个顶点的起始值\n        const left = -appX,\n            bottom = -appY,\n            right = width - appX,\n            top = height - appY;\n\n        // 储存本地坐标值\n        const local = this._local;\n        local[0] = left;\n        local[1] = bottom;\n        local[2] = right;\n        local[3] = top;\n\n        // 更新世界坐标下的顶点数据\n        this.updateWorldVerts(comp);\n    }\n\n    /**\n     * 更新世界坐标顶点数据\n     * @param comp \n     */\n    public updateWorldVerts(comp: cc.RenderComponent) {\n        const local = this._local;\n        const verts = this._renderData.vDatas[0];\n\n        // 节点世界矩阵\n        // @ts-ignore\n        const matrix = comp.node._worldMatrix;\n        const matrixData = matrix.m,\n            a = matrixData[0], b = matrixData[1], c = matrixData[4], d = matrixData[5],\n            tx = matrixData[12], ty = matrixData[13];\n\n        // 本地坐标值\n        const vl = local[0], vr = local[2],\n            vb = local[1], vt = local[3];\n\n        const floatsPerVert = this.floatsPerVert;  // 每个顶点的数据个数\n        let vertexOffset = 0;                      // 当前偏移量\n\n        // 是否只是位置变化\n        const justTranslate = a === 1 && b === 0 && c === 0 && d === 1;\n        if (justTranslate) {\n            // 左下\n            verts[vertexOffset] = vl + tx;\n            verts[vertexOffset + 1] = vb + ty;\n            vertexOffset += floatsPerVert;\n            // 右下\n            verts[vertexOffset] = vr + tx;\n            verts[vertexOffset + 1] = vb + ty;\n            vertexOffset += floatsPerVert;\n            // 左上\n            verts[vertexOffset] = vl + tx;\n            verts[vertexOffset + 1] = vt + ty;\n            vertexOffset += floatsPerVert;\n            // 右上\n            verts[vertexOffset] = vr + tx;\n            verts[vertexOffset + 1] = vt + ty;\n        } else {\n            const al = a * vl, ar = a * vr,\n                bl = b * vl, br = b * vr,\n                cb = c * vb, ct = c * vt,\n                db = d * vb, dt = d * vt;\n\n            // 左下\n            verts[vertexOffset] = al + cb + tx;\n            verts[vertexOffset + 1] = bl + db + ty;\n            vertexOffset += floatsPerVert;\n            // 右下\n            verts[vertexOffset] = ar + cb + tx;\n            verts[vertexOffset + 1] = br + db + ty;\n            vertexOffset += floatsPerVert;\n            // 左上\n            verts[vertexOffset] = al + ct + tx;\n            verts[vertexOffset + 1] = bl + dt + ty;\n            vertexOffset += floatsPerVert;\n            // 右上\n            verts[vertexOffset] = ar + ct + tx;\n            verts[vertexOffset + 1] = br + dt + ty;\n        }\n    }\n\n    /**\n     * 将渲染数据填充到全局缓冲区中\n     * @param comp 组件\n     * @param renderer \n     */\n    public fillBuffers(comp: cc.RenderComponent, renderer: ModelBatcher) {\n\n        // 更新顶点数据\n        // @ts-ignore\n        if (renderer.worldMatDirty) {\n            this.updateWorldVerts(comp);\n        }\n\n        const renderData = this._renderData,\n            vData = renderData.vDatas[0],\n            iData = renderData.iDatas[0];\n\n        // 获取缓冲区\n        const buffer = this.getBuffer(),\n            // 通过设定的顶点数量及顶点索引数量获取 buffer 的数据空间\n            offsetInfo = buffer.request(this.verticesCount, this.indicesCount);\n\n        // 填充顶点数据\n        const vertexOffset = offsetInfo.byteOffset >> 2,\n            vertexBuffer = buffer._vData;\n        if (vData.length + vertexOffset > vertexBuffer.length) {\n            vertexBuffer.set(vData.subarray(0, vertexBuffer.length - vertexOffset), vertexOffset);\n        } else {\n            vertexBuffer.set(vData, vertexOffset);\n        }\n\n        // 填充索引数据\n        const indicesBuffer = buffer._iData,\n            vertexId = offsetInfo.vertexOffset;\n        let indicesOffset = offsetInfo.indiceOffset;\n        for (let i = 0, l = iData.length; i < l; i++) {\n            indicesBuffer[indicesOffset++] = vertexId + iData[i];\n        }\n    }\n\n    /**\n     * 获取缓冲区\n     */\n    public getBuffer() {\n        return cc.renderer._handle._meshBuffer;\n    }\n\n    // /**\n    //  * 打包至动态图集\n    //  * @param comp \n    //  * @param frame \n    //  */\n    // public packToDynamicAtlas(comp, frame) {\n    //     if (CC_TEST) return;\n\n    //     if (!frame._original && cc.dynamicAtlasManager && frame._texture.packable) {\n    //         let packedFrame = cc.dynamicAtlasManager.insertSpriteFrame(frame) as unknown as cc.SpriteFrame;\n    //         if (packedFrame) {\n    //             frame._setDynamicAtlasFrame(packedFrame);\n    //         }\n    //     }\n    //     let material = comp._materials[0];\n    //     if (!material) return;\n\n    //     if (material.getProperty('texture') !== frame._texture) {\n    //         // texture was packed to dynamic atlas, should update uvs\n    //         comp._vertsDirty = true;\n    //         comp._updateMaterial();\n    //     }\n    // }\n\n}\n","import BaseAssembler from \"../../core/renderer/BaseAssembler\";\n\nconst { ccclass, property, executeInEditMode, disallowMultiple, help, menu } = cc._decorator;\n\n/**\n * 基础纹理渲染器\n * @author 陈皮皮 (ifaswind)\n * @version 20210228\n * @see BaseTextureRenderer.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/renderers/BaseTextureRenderer.ts\n * @see BaseAssembler.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/renderer/BaseAssembler.ts\n */\n@ccclass\n@executeInEditMode\n@disallowMultiple\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/renderers/BaseTextureRenderer.ts')\n@menu('eazax/渲染组件/BaseTextureRenderer')\nexport default class BaseTextureRenderer extends cc.RenderComponent {\n\n    @property()\n    protected _texture: cc.Texture2D = null;\n    @property({ type: cc.Texture2D, tooltip: CC_DEV && '纹理' })\n    public get texture() {\n        return this._texture;\n    }\n    public set texture(value) {\n        this._texture = value;\n        this._activateMaterial();\n    }\n\n    /**\n     * 顶点装配器\n     */\n    public _assembler: BaseAssembler = null;\n\n    /**\n     * 生命周期：启用\n     */\n    protected onEnable() {\n        super.onEnable();\n        // 节点\n        this.node.on(cc.Node.EventType.SIZE_CHANGED, this.setVertsDirty, this);\n        this.node.on(cc.Node.EventType.ANCHOR_CHANGED, this.setVertsDirty, this);\n    }\n\n    /**\n     * 生命周期：禁用\n     */\n    protected onDisable() {\n        super.onDisable();\n        // 节点\n        this.node.off(cc.Node.EventType.SIZE_CHANGED, this.setVertsDirty, this);\n        this.node.off(cc.Node.EventType.ANCHOR_CHANGED, this.setVertsDirty, this);\n    }\n\n    /**\n     * 重置顶点装配器\n     */\n    public _resetAssembler() {\n        // 装配器\n        this._assembler = new BaseAssembler();\n        this._assembler.init(this);\n        // 标记更新顶点数据\n        this.setVertsDirty();\n    }\n\n    /**\n     * 激活材质\n     */\n    public _activateMaterial() {\n        const materials = this._materials;\n        if (!materials[0]) {\n            materials[0] = this._getDefaultMaterial();\n        }\n        for (let i = 0; i < materials.length; i++) {\n            materials[i] = cc.MaterialVariant.create(materials[i], this);\n        }\n        this._updateMaterial();\n    }\n\n    /**\n     * 更新材质属性\n     */\n    public _updateMaterial() {\n        const texture = this._texture;\n        if (texture) {\n            const material = this.getMaterial(0);\n            if (material) {\n                if (material.getDefine('USE_TEXTURE') !== undefined) {\n                    material.define('USE_TEXTURE', true);\n                }\n                material.setProperty('texture', texture);\n                // 标记为可渲染状态\n                this.markForRender(true);\n                return;\n            }\n        }\n        // 禁用渲染\n        this.disableRender();\n    }\n\n    /**\n     * 验证渲染状态\n     */\n    public _validateRender() {\n        if (!this._texture) {\n            this.disableRender();\n        }\n    }\n\n}\n","const { ccclass, property } = cc._decorator;\n\n/**\n * 弹性移动效果\n * @author 陈皮皮 (ifaswind)\n * @version 20201014\n * @see BounceMoveTween.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/tweens/BounceMoveTween.ts\n */\n@ccclass\nexport default class BounceMoveTween extends cc.Component {\n\n    @property({ tooltip: CC_DEV && '频率（弹跳次数）' })\n    public frequency: number = 4;\n\n    @property({ tooltip: CC_DEV && '衰退指数' })\n    public decay: number = 2;\n\n    private tween: cc.Tween = null;\n\n    start() {\n        this.play(cc.v2(0, 0), 0.5)\n    }\n\n    /**\n     * 播放\n     * @param targetPos 目标位置\n     * @param time 移动时间\n     */\n    public play(targetPos: cc.Vec2, time: number) {\n        this.stop();\n        // 当前位置\n        const curPos = this.node.getPosition();\n        // 方向\n        const direction = targetPos.sub(curPos).normalize();\n        // 时长\n        const bouncingTime = 0.75;  // 弹跳时长\n        // 振幅\n        const amplitude = cc.Vec2.distance(curPos, targetPos) / time;\n        // 播放\n        this.tween = cc.tween(this.node)\n        cc.tween(this.node)\n            .to(time, { x: targetPos.x, y: targetPos.y }, { easing: 'quadIn' })\n            .to(bouncingTime, {\n                position: {\n                    value: cc.v3(targetPos.x, targetPos.y),\n                    progress: (start: cc.Vec3, end: cc.Vec3, current: cc.Vec3, t: number) => {\n                        const pos = direction.mul(-this.getDifference(amplitude, t));\n                        return cc.v3(pos.x, pos.y);\n                    }\n                }\n            })\n            .start();\n    }\n\n    /**\n     * 停止\n     */\n    public stop() {\n        this.tween && this.tween.stop();\n    }\n\n    /**\n     * 获取目标时刻弹性幅度\n     * @param amplitude 幅度\n     * @param time 时间\n     */\n    private getDifference(amplitude: number, time: number) {\n        // 角速度（ω=2nπ）\n        const angularVelocity = this.frequency * Math.PI * 2;\n        return amplitude * (Math.sin(time * angularVelocity) / Math.exp(this.decay * time) / angularVelocity);\n    }\n\n}\n","const { ccclass, property } = cc._decorator;\n\n/**\n * 弹性缩放效果\n * @author 陈皮皮 (ifaswind)\n * @version 20201014\n * @see BounceScaleTween.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/tweens/BounceScaleTween.ts\n */\n@ccclass\nexport default class BounceScaleTween extends cc.Component {\n\n    @property({ tooltip: CC_DEV && '频率（弹跳次数）' })\n    public frequency: number = 4;\n\n    @property({ tooltip: CC_DEV && '衰退指数' })\n    public decay: number = 2;\n\n    @property({ tooltip: CC_DEV && '目标值' })\n    public targetScale: number = 1;\n\n    @property({ tooltip: CC_DEV && '效果总时长' })\n    public totalTime: number = 1;\n\n    @property({ tooltip: CC_DEV && '播放间隔' })\n    public interval: number = 1;\n\n    @property({ tooltip: CC_DEV && '自动播放' })\n    public playOnLoad: boolean = false;\n\n    /** 原始缩放值 */\n    private originalScale: number = 1;\n\n    private tween: cc.Tween = null;\n\n    protected start() {\n        // 记录缩放值\n        this.originalScale = this.node.scale;\n        // 播放\n        if (this.playOnLoad) this.play(this.targetScale);\n    }\n\n    /**\n     * 播放\n     * @param targetScale 目标缩放\n     * @param repeatTimes 重复次数\n     */\n    public play(targetScale: number, repeatTimes?: number) {\n        // 重复次数\n        const times = (repeatTimes != undefined && repeatTimes > 0) ? repeatTimes : 1;\n        // 时长\n        const scalingTime = this.totalTime * 0.25;   // 缩放时长\n        const bouncingTime = this.totalTime * 0.75;  // 弹跳时长\n        // 振幅\n        const amplitude = (targetScale - this.originalScale) / scalingTime;\n        // 播放\n        this.tween = cc.tween(this.node)\n            .repeat(times,\n                cc.tween()\n                    .set({ scale: this.originalScale })\n                    .to(scalingTime, { scale: targetScale })\n                    .to(bouncingTime, {\n                        scale: {\n                            value: targetScale,\n                            progress: (start: number, end: number, current: number, t: number) => {\n                                return end + this.getDifference(amplitude, t);\n                            }\n                        }\n                    })\n                    .delay(this.interval)\n            )\n            .start();\n    }\n\n    /**\n     * 停止\n     */\n    public stop() {\n        this.tween && this.tween.stop();\n        this.node.setScale(this.originalScale);\n    }\n\n    /**\n     * 获取目标时刻弹性幅度\n     * @param amplitude 幅度\n     * @param time 时间\n     */\n    private getDifference(amplitude: number, time: number) {\n        // 角速度（ω=2nπ）\n        const angularVelocity = this.frequency * Math.PI * 2;\n        return amplitude * (Math.sin(time * angularVelocity) / Math.exp(this.decay * time) / angularVelocity);\n    }\n\n}\n","/**\r\n * 浏览器工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210925\r\n * @see BrowserUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/BrowserUtil.ts\r\n */\r\nexport default class BrowserUtil {\r\n\r\n    /**\r\n     * 清除当前 URL 的参数（修改历史记录，不会刷新当前网页）\r\n     */\r\n    public static clearUrlParam(): void {\r\n        if (!window || !window.history) {\r\n            return;\r\n        }\r\n        window.history.replaceState({}, null, '.');\r\n    }\r\n\r\n    /**\r\n     * 设置当前 URL 的参数（修改历史记录，不会刷新当前网页）\r\n     * @param param 参数\r\n     */\r\n    public static setUrlParam(param: string | { key: string, value: string }[]): void {\r\n        if (!window || !window.history) {\r\n            return;\r\n        }\r\n        if (Array.isArray(param)) {\r\n            param = param.map(v => `${v.key}=${v.value}`).join('&');\r\n        }\r\n        window.history.replaceState({}, null, `?${param}`);\r\n    }\r\n\r\n    /**\r\n     * 获取当前 URL 的参数\r\n     * @param key 键\r\n     */\r\n    public static getUrlParam(key: string): string {\r\n        if (!window || !window.location) {\r\n            return null;\r\n        }\r\n        const query = window.location.search.replace('?', '');\r\n        if (query === '') {\r\n            return null;\r\n        }\r\n        const substrings = query.split('&');\r\n        for (let i = 0; i < substrings.length; i++) {\r\n            const keyValue = substrings[i].split('=');\r\n            if (decodeURIComponent(keyValue[0]) === key) {\r\n                return decodeURIComponent(keyValue[1]);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 获取当前 URL 的所有参数\r\n     */\r\n    public static getUrlParams() {\r\n        if (!window || !window.location) {\r\n            return [];\r\n        }\r\n        const query = window.location.search.replace('?', '');\r\n        if (query === '') {\r\n            return [];\r\n        }\r\n        const substrings = query.split('&'),\r\n            params: { key: string, value: string }[] = [];\r\n        for (let i = 0; i < substrings.length; i++) {\r\n            const keyValue = substrings[i].split('=');\r\n            params.push({\r\n                key: keyValue[0],\r\n                value: keyValue[1],\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * 复制文本至设备剪贴板\r\n     * @param value 文本内容\r\n     */\r\n    public static copy(value: string): boolean {\r\n        if (!document) {\r\n            return false;\r\n        }\r\n        // 创建输入元素\r\n        const element = document.createElement('textarea');\r\n        element.readOnly = true;\r\n        element.style.opacity = '0';\r\n        element.value = value;\r\n        document.body.appendChild(element);\r\n        // 选择元素\r\n        element.select();\r\n        // 兼容低版本 iOS 的特殊处理\r\n        const range = document.createRange();\r\n        range.selectNodeContents(element);\r\n        const selection = getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        // 复制\r\n        const result = document.execCommand('copy');\r\n        element.remove();\r\n        return result;\r\n    }\r\n\r\n    // public static copyViaNavigator(value: string) {\r\n    //     return new Promise<boolean>(res => {\r\n    //         if (document.location.protocol === 'https:' || document.location.hostname === 'localhost' || document.location.hostname === '127.0.0.1') {\r\n    //             // navigator.clipboard API 只适用于安全连接\r\n    //             console.log('Copy via navigator.clipboard');\r\n    //             navigator.clipboard.writeText(value)\r\n    //                 .then(() => {\r\n    //                     console.log('Clipboard write success!');\r\n    //                     res(true);\r\n    //                 })\r\n    //                 .catch(err => {\r\n    //                     console.error('Clipboard write failed:', err);\r\n    //                     res(false);\r\n    //                 });\r\n    //         } else {\r\n    //             console.log('Copy via document.execCommand');\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n/**\r\n * 彩色画笔（多彩 Graphics，需搭配 eazax-color-brush.effect 使用）\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210317\r\n * @see ColorBrush.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/ColorBrush.ts\r\n * @see eazax-color-brush.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-color-brush.effect\r\n */\r\n@ccclass\r\nexport default class ColorBrush extends cc.Component {\r\n\r\n    /**\r\n     * 绘图组件\r\n     */\r\n    protected graphics: cc.Graphics = null;\r\n\r\n    /**\r\n     * 材质\r\n     */\r\n    protected material: cc.Material = null;\r\n\r\n    /**\r\n     * 生命周期：加载\r\n     */\r\n    protected onLoad() {\r\n        this.init();\r\n        this.registerEvent();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：销毁\r\n     */\r\n    protected onDestroy() {\r\n        this.unregisterEvent();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    protected init() {\r\n        const graphics = this.graphics = this.node.getComponent(cc.Graphics) || this.node.addComponent(cc.Graphics);\r\n        // 设置画笔\r\n        graphics.strokeColor = cc.Color.WHITE;\r\n        graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n        graphics.lineCap = cc.Graphics.LineCap.ROUND;\r\n        graphics.lineWidth = 20;\r\n        // 设置材质上的节点尺寸参数\r\n        // 需搭配 eazax-color-brush.effect 使用\r\n        this.material = graphics.getMaterial(0);\r\n        this.material.setProperty('size', this.getNodeSize());\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    protected registerEvent() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n    }\r\n\r\n    /**\r\n     * 反注册事件\r\n     */\r\n    protected unregisterEvent() {\r\n        this.node.targetOff(this);\r\n    }\r\n\r\n    /**\r\n     * 点击开始\r\n     * @param event \r\n     */\r\n    protected onTouchStart(event: cc.Event.EventTouch) {\r\n        const pos = this.node.parent.convertToNodeSpaceAR(event.getLocation()),\r\n            graphics = this.graphics;\r\n        graphics.moveTo(pos.x - 5, pos.y);\r\n        graphics.circle(pos.x - 5, pos.y, 1);\r\n        graphics.stroke();\r\n        graphics.moveTo(pos.x - 5, pos.y);\r\n    }\r\n\r\n    /**\r\n     * 点击移动\r\n     * @param event \r\n     */\r\n    protected onTouchMove(event: cc.Event.EventTouch) {\r\n        const pos = this.node.parent.convertToNodeSpaceAR(event.getLocation()),\r\n            graphics = this.graphics;\r\n        graphics.lineTo(pos.x - 5, pos.y);\r\n        graphics.stroke();\r\n        graphics.moveTo(pos.x - 5, pos.y);\r\n    }\r\n\r\n    /**\r\n     * 获取节点尺寸\r\n     */\r\n    protected getNodeSize() {\r\n        return cc.v2(this.node.width, this.node.height);\r\n    }\r\n\r\n}\r\n","/**\n * 颜色工具\n * @author 陈皮皮 (ifaswind)\n * @version 20211116\n * @see ColorUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/ColorUtil.ts\n */\nexport default class ColorUtil {\n\n    /**\n     * 将 16 进制（hex）颜色字符串转为 RGBA 格式\n     * @param {string} hex \n     * @example\n     * ColorUtil.hexToRgba('#FFFFFF'); // { r: 255, g: 255, b: 255, a: 255 }\n     */\n    public static hexToRgba(hex: string) {\n        if (!ColorUtil.isHex(hex)) {\n            return null;\n        }\n        const r = parseInt(hex.substr(1, 2), 16) || 0,\n            g = parseInt(hex.substr(3, 2), 16) || 0,\n            b = parseInt(hex.substr(5, 2), 16) || 0,\n            a = parseInt(hex.substr(7, 2), 16) || 255;\n        return { r, g, b, a };\n    }\n\n    /**\n     * 将 RGB 或 RGBA 颜色值转为 16 进制（hex）颜色字符串\n     * @param color \n     * @example\n     * const color = {\n     *   r: 255,\n     *   g: 255,\n     *   b: 255,\n     * };\n     * ColorUtil.rgbaToHex(color);  // '#FFFFFF'\n     */\n    public static rgbaToHex(color: { r: number, g: number, b: number, a?: number }) {\n        const r = (color.r | 1 << 8).toString(16).slice(1),\n            g = (color.g | 1 << 8).toString(16).slice(1),\n            b = (color.b | 1 << 8).toString(16).slice(1);\n        if (color.a == undefined) {\n            return `#${r}${g}${b}`.toUpperCase();\n        }\n        const a = (color.a | 1 << 8).toString(16).slice(1);\n        return `#${r}${g}${b}${a}`.toUpperCase();\n    }\n\n    /**\n     * 测试字符串是否为 16 进制（hex）颜色值\n     * @param hex \n     */\n    public static isHex(hex: string) {\n        return /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6}|[0-9a-fA-f]{8})$/.test(hex);\n    }\n\n    // /**\n    //  * 将 16 进制（hex）颜色字符串转为 RGB 格式\n    //  * @param {string} hex \n    //  */\n    // public static hexToRGB(hex: string) {\n    //     // 是否为 HEX 格式\n    //     if (!ColorUtil.isHex(hex)) {\n    //         return null;\n    //     }\n    //     // 四位\n    //     if (hex.length === 4) {\n    //         const r = hex.substr(1, 1),\n    //             g = hex.substr(2, 1),\n    //             b = hex.substr(3, 1);\n    //         hex = `#${r}${r}${g}${g}${b}${b}`;\n    //     }\n    //     // 转换进制\n    //     const rgb = {\n    //         r: parseInt(`0x${hex.substr(1, 2)}`),\n    //         g: parseInt(`0x${hex.substr(3, 2)}`),\n    //         b: parseInt(`0x${hex.substr(5, 2)}`),\n    //     };\n    //     return rgb;\n    // }\n\n}\n","import PopupBase from \"./PopupBase\";\n\nconst { ccclass, property } = cc._decorator;\n\n/**\n * 确认弹窗（PopupBase 使用示例）\n */\n@ccclass\nexport default class ConfirmPopup extends PopupBase<ConfirmPopupOptions> {\n\n    @property(cc.Label)\n    private titleLabel: cc.Label = null;\n\n    @property(cc.Label)\n    private contentLabel: cc.Label = null;\n\n    @property(cc.Node)\n    private confirmBtn: cc.Node = null;\n\n    protected onLoad() {\n        this.registerEvent();\n    }\n\n    protected onDestroy() {\n        this.unregisterEvent();\n    }\n\n    private registerEvent() {\n        this.confirmBtn.on(cc.Node.EventType.TOUCH_END, this.onConfirmBtnClick, this);\n    }\n\n    private unregisterEvent() {\n        this.confirmBtn.targetOff(this);\n    }\n\n    protected init() {\n\n    }\n\n    protected updateDisplay(options: ConfirmPopupOptions): void {\n        this.titleLabel.string = options.title;\n        this.contentLabel.string = options.content;\n    }\n\n    protected onConfirmBtnClick() {\n        this.options.confirmCallback && this.options.confirmCallback();\n        this.hide();\n    }\n\n}\n\n/** 确认弹窗选项 */\nexport interface ConfirmPopupOptions {\n    title: string;\n    content: string;\n    confirmCallback: Function;\n}\n","const { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Label)\r\nexport default class Counter extends cc.Component {\r\n\r\n    @property({ tooltip: CC_DEV && '动作时间' })\r\n    public time: number = 1;\r\n\r\n    @property({ tooltip: CC_DEV && '保持数值为整数' })\r\n    public keepInteger: boolean = true;\r\n\r\n    private label: cc.Label = null;\r\n\r\n    private _value: number = 0;\r\n    /**\r\n     * 数值\r\n     */\r\n    public get value() { return this._value; }\r\n    public set value(value) {\r\n        if (this.keepInteger) value = Math.floor(value);\r\n        this._value = value;\r\n        this.label.string = value.toString();\r\n    }\r\n\r\n    private tween: cc.Tween<Counter> = null;\r\n\r\n    private lastTarget: number = 0;\r\n\r\n    protected onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化组件\r\n     */\r\n    private init() {\r\n        this.label = this.getComponent(cc.Label);\r\n        this.value = 0;\r\n    }\r\n\r\n    /**\r\n     * 设置数值\r\n     * @param value 数值\r\n     */\r\n    public setValue(value: number) {\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * 设置时间\r\n     * @param time 时间\r\n     */\r\n    public setTime(time: number) {\r\n        this.time = time;\r\n    }\r\n\r\n    /**\r\n     * 滚动数值\r\n     * @param target 目标值\r\n     * @param time 时间\r\n     * @param callback 完成回调\r\n     */\r\n    public to(target: number, time: number = null, callback?: () => void): Promise<void> {\r\n        return new Promise<void>(res => {\r\n            if (this.tween) {\r\n                this.tween.stop();\r\n                this.tween = null;\r\n            }\r\n            if (time !== null) {\r\n                this.time = time;\r\n            }\r\n            this.lastTarget = target;\r\n            this.tween = cc.tween<Counter>(this)\r\n                .to(this.time, { value: target })\r\n                .call(() => {\r\n                    callback && callback();\r\n                    this.tween = null;\r\n                    res();\r\n                })\r\n                .start();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 相对滚动数值\r\n     * @param diff 差值\r\n     * @param time 时间\r\n     * @param callback 完成回调\r\n     */\r\n    public by(diff: number, time: number = null, callback?: () => void): Promise<void> {\r\n        return new Promise<void>(res => {\r\n            if (this.tween) {\r\n                this.tween.stop();\r\n                this.tween = null;\r\n                this.value = this.lastTarget;\r\n            }\r\n            if (time !== null) {\r\n                this.time = time;\r\n            }\r\n            this.lastTarget = this.value + diff;\r\n            this.tween = cc.tween<Counter>(this)\r\n                .to(this.time, { value: this.lastTarget })\r\n                .call(() => {\r\n                    callback && callback();\r\n                    this.tween = null;\r\n                    res();\r\n                })\r\n                .start();\r\n        });\r\n    }\r\n\r\n}\r\n","/**\n * 调试工具\n * @author 陈皮皮 (ifaswind)\n * @version 20200928\n * @see DebugUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/TimeUtil.ts\n */\nexport default class DebugUtil {\n\n    /**\n     * 打出光彩夺目的日志（黑蓝白配色）\n     * @param title 标题\n     * @param msg 信息\n     */\n    public static log(title: any, msg?: any): void {\n        if (msg) {\n            console.log(\n                `%c ${title} %c ${msg} `,\n                'background: #35495E;padding: 1px;border-radius: 2px 0 0 2px;color: #fff;',\n                'background: #409EFF;padding: 1px;border-radius: 0 2px 2px 0;color: #fff;'\n            );\n        } else {\n            console.log(\n                `%c ${title} `,\n                'background: #409EFF;padding: 1px;border-radius: 0 2px 2px 0;color: #fff;',\n            );\n        }\n    }\n\n    /**\n     * 展示动态图集\n     * @param status 状态\n     */\n    public static showDynamicAtlas(status: boolean = true): cc.Node {\n        return cc.dynamicAtlasManager.showDebug(status);\n    }\n\n    /**\n     * 展示左下角的统计面板\n     * @param status 状态\n     */\n    public static showStats(status: boolean = true): void {\n        cc.debug.setDisplayStats(status);\n    }\n\n    /**\n     * 更改统计面板的文本颜色\n     * @param font 文本颜色\n     */\n    public static setStatsColor(font: cc.Color = cc.Color.WHITE, background: cc.Color = cc.color(0, 0, 0, 150)) {\n        const profiler = cc.find('PROFILER-NODE');\n        if (!profiler) return cc.warn('未找到统计面板节点！');\n\n        // 文字\n        profiler.children.forEach(node => node.color = font);\n\n        // 背景\n        let node = profiler.getChildByName('BACKGROUND');\n        if (!node) {\n            node = new cc.Node('BACKGROUND');\n            profiler.addChild(node, cc.macro.MIN_ZINDEX);\n            node.setContentSize(profiler.getBoundingBoxToWorld());\n            node.setPosition(0, 0);\n        }\n        const graphics = node.getComponent(cc.Graphics) || node.addComponent(cc.Graphics);\n        graphics.clear();\n        graphics.rect(-5, 12.5, node.width + 10, node.height - 10);\n        graphics.fillColor = background;\n        graphics.fill();\n    }\n\n    /**\n     * 上一次渲染帧所提交的渲染批次总数\n     */\n    public static getDrawCalls(): number {\n        return cc.renderer.drawCalls;\n    }\n\n}\n\nif (CC_PREVIEW) {\n    window['DebugUtil'] = DebugUtil;\n}\n","/**\n * 设备工具\n * @author 陈皮皮 (ifaswind)\n * @version 20210120\n * @see DeviceUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/DeviceUtil.ts\n */\nexport default class DeviceUtil {\n\n    /**\n     * 返回手机屏幕安全区域，如果不是异形屏将默认返回设计分辨率尺寸。目前只支持安卓、iOS 原生平台和微信小游戏平台。 \n     */\n    public static getSafeAreaRect() {\n        return cc.sys.getSafeAreaRect();\n    }\n\n    /** 当前平台 */\n    public static get platform() { return cc.sys.platform; }\n\n    /** 当前操作系统 */\n    public static get os() { return cc.sys.os; }\n\n    /** 是否为安卓手机 */\n    public static get isAndroid() { return cc.sys.platform === cc.sys.ANDROID; }\n\n    /** 是否为原生环境 */\n    public static get isNative() { return cc.sys.isNative; }\n\n    /** 是否为浏览器环境 */\n    public static get isBrowser() { return cc.sys.isBrowser; }\n\n    /** 是否为手机 */\n    public static get isMobile() { return cc.sys.isMobile; }\n\n    /** 是否为苹果手机 */\n    public static get isIPhone() { return cc.sys.platform === cc.sys.IPHONE; }\n\n    /** 是否为苹果平板 */\n    public static get isIPad() { return cc.sys.platform === cc.sys.IPAD; }\n\n    /** 是否为手机浏览器 */\n    public static get isMobileBrowser() { return cc.sys.platform === cc.sys.MOBILE_BROWSER; }\n\n    /** 是否为桌面浏览器 */\n    public static get isDesktopBrowser() { return cc.sys.platform === cc.sys.DESKTOP_BROWSER; }\n\n    /** 是否为微信小游戏 */\n    public static get isWeChat() { return cc.sys.platform === cc.sys.WECHAT_GAME; }\n\n    /** 是否为 QQ 小游戏 */\n    public static get isQQPlay() { return cc.sys.platform === cc.sys.QQ_PLAY; }\n\n    /** 是否为字节小游戏 */\n    public static get isByteDance() { return cc.sys.platform === cc.sys.BYTEDANCE_GAME; }\n\n    /** 是否为百度小游戏 */\n    public static get isBaidu() { return cc.sys.platform === cc.sys.BAIDU_GAME; }\n\n    /** 是否为 vivo 小游戏 */\n    public static get isVivo() { return cc.sys.platform === cc.sys.VIVO_GAME; }\n\n    /** 是否为 OPPO 小游戏 */\n    public static get isOPPO() { return cc.sys.platform === cc.sys.OPPO_GAME; }\n\n    /** 是否为小米小游戏 */\n    public static get isXiaomi() { return cc.sys.platform === cc.sys.XIAOMI_GAME; }\n\n    /** 是否为华为小游戏 */\n    public static get isHuawei() { return cc.sys.platform === cc.sys.HUAWEI_GAME; }\n\n    /** 是否为支付宝小游戏 */\n    public static get isAlipay() { return cc.sys.platform === cc.sys.ALIPAY_GAME; }\n\n}\n","const { ccclass, property, help, menu } = cc._decorator;\n\n/**\n * 可拖拽组件\n * @author 陈皮皮 (ifaswind)\n * @version 20220113\n * @see Draggable.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/interaction/Draggable.ts\n */\n@ccclass\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/interaction/Draggable.ts')\n@menu('eazax/交互组件/Draggable')\nexport default class Draggable extends cc.Component {\n\n    @property({ tooltip: CC_DEV && '拖拽触发阈值' })\n    protected dragThreshold: number = 1;\n\n    /**\n     * 触摸开始位置\n     */\n    protected touchStartPos: cc.Vec2 = null;\n\n    /**\n     * 拖拽位置偏移\n     */\n    protected dragOffset: cc.Vec2 = null;\n\n    /**\n     * 拖拽位置偏移\n     */\n    protected isDragging: boolean = false;\n\n    /**\n     * 拖拽事件\n     */\n    public static get EventType() {\n        return EventType;\n    }\n\n    /**\n     * 生命周期：加载\n     */\n    protected onLoad() {\n        this.registerEvent();\n    }\n\n    /**\n     * 生命周期：销毁\n     */\n    protected onDestroy() {\n        this.unregisterEvent();\n    }\n\n    /**\n     * 注册事件\n     */\n    protected registerEvent() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n    }\n\n    /**\n     * 反注册事件\n     */\n    protected unregisterEvent() {\n        this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n        this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n    }\n\n    /**\n     * 触摸开始回调\n     * @param event \n     */\n    protected onTouchStart(event: cc.Event.EventTouch) {\n        // 记录开始位置\n        this.touchStartPos = event.getLocation();\n        // 记录中心偏移\n        const touchPosInNode = this.node.getParent().convertToNodeSpaceAR(event.getLocation());\n        this.dragOffset = touchPosInNode.sub(this.node.getPosition());\n    }\n\n    /**\n     * 触摸移动回调\n     * @param event \n     */\n    protected onTouchMove(event: cc.Event.EventTouch) {\n        if (!this.dragOffset) {\n            return;\n        }\n        // 触摸位置\n        const touchPosInWorld = event.getLocation();\n        const touchPosInNode = this.node.getParent().convertToNodeSpaceAR(touchPosInWorld);\n        // 触摸移动距离（判断是否触发拖拽）\n        if (!this.isDragging && this.dragThreshold !== 0) {\n            const distance = cc.Vec2.distance(this.touchStartPos, touchPosInWorld);\n            if (distance < this.dragThreshold) {\n                return;\n            }\n            // 重新计算中心偏移\n            this.dragOffset = touchPosInNode.sub(this.node.getPosition());\n        }\n        // 移动节点\n        this.node.setPosition(touchPosInNode.sub(this.dragOffset));\n        // 触发回调\n        if (!this.isDragging) {\n            this.isDragging = true;\n            this.onDragStart();\n        } else {\n            this.onDragMove();\n        }\n    }\n\n    /**\n     * 触摸取消回调\n     * @param event \n     */\n    protected onTouchCancel(event: cc.Event.EventTouch) {\n        this.onTouchEnd(event);\n    }\n\n    /**\n     * 触摸结束回调\n     * @param event \n     */\n    protected onTouchEnd(event: cc.Event.EventTouch) {\n        if (!this.dragOffset) {\n            return;\n        }\n        // 重置标志\n        this.touchStartPos = null;\n        this.dragOffset = null;\n        // 触发回调\n        if (this.isDragging) {\n            this.isDragging = false;\n            this.onDragEnd();\n        }\n    }\n\n    /**\n     * 拖拽开始回调\n     */\n    protected onDragStart() {\n\n    }\n\n    /**\n     * 拖拽移动回调\n     */\n    protected onDragMove() {\n\n    }\n\n    /**\n     * 拖拽结束回调\n     */\n    protected onDragEnd() {\n\n    }\n\n}\n\n/**\n * 拖拽事件\n */\nenum EventType {\n    /** 拖拽开始 */\n    DRAG_START = 'drag-start',\n    /** 拖拽移动 */\n    DRAG_MOVE = 'drag-move',\n    /** 拖拽结束 */\n    DRAG_END = 'drag-end',\n}\n","/**\r\n * 编辑器内资源加载类\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20211205\r\n * @see EditorAsset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/misc/EditorAsset.ts\r\n */\r\nexport default class EditorAsset {\r\n\r\n    /**\r\n     * 在编辑器环境中加载 assets 目录下的资源\r\n     * @param path 相对路径，根目录为 assets/，注意带上文件后缀，如：eazax-sine-wave.effect\r\n     * @param assetType 资源类型，如：effect\r\n     * @param callback 加载完成回调\r\n     * @example \r\n     *  const path = 'eazax-ccc/resources/effects/eazax-sine-wave.effect';\r\n     *  EditorAsset.load(path, 'effect', (err: Error, result: cc.EffectAsset) => {\r\n     *      this.effect = result;\r\n     *  });\r\n     */\r\n    public static load<T>(path: string, assetType: string, callback?: (err: Error, result: T) => void): Promise<T> {\r\n        return new Promise(res => {\r\n            if (!CC_EDITOR) {\r\n                res(null);\r\n                cc.warn('[EditorAsset]', '该函数只在编辑器环境内有效！');\r\n                return;\r\n            }\r\n            Editor.assetdb.queryAssets(`db://assets/${path}`, assetType, (err: Error, results: AssetInfo[]) => {\r\n                if (err) {\r\n                    res(null);\r\n                    callback && callback(new Error('[EditorAsset] 未知错误!'), null);\r\n                    return;\r\n                }\r\n                if (results.length === 0) {\r\n                    res(null);\r\n                    callback && callback(new Error('[EditorAsset] 未找到指定资源!'), null);\r\n                    return;\r\n                }\r\n                if (cc.assetManager && cc.assetManager.loadAny) {\r\n                    cc.assetManager.loadAny({ uuid: results[0].uuid, type: assetType }, (_err: Error, _result: T) => {\r\n                        res(_result);\r\n                        callback && callback(_err, _result);\r\n                    });\r\n                } else {\r\n                    cc.loader.load({ uuid: results[0].uuid, type: assetType }, (_err: Error, _result: T) => {\r\n                        res(_result);\r\n                        callback && callback(_err, _result);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n\r\n/** 资源信息 */\r\ninterface AssetInfo {\r\n    destPath: string;\r\n    hidden: boolean;\r\n    isSubAsset: boolean;\r\n    path: string;\r\n    readonly: boolean;\r\n    type: string;\r\n    url: string;\r\n    uuid: string;\r\n}\r\n","/**\n * 事件管理器\n * @see EventManager.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/EventManager.ts\n * @version 20210421\n * @example\n * // 注册事件\n * EventManager.on('game-start', this.onGameStart, this);\n * // 发射事件\n * EventManager.emit('game-start', 666);\n */\nexport default class EventManager {\n\n    /**\n     * 普通事件容器\n     */\n    private static events: Map<string, Subscription[]> = new Map<string, Subscription[]>();\n\n    /**\n     * 一次性事件容器\n     */\n    private static onceEvents: Map<string, Subscription[]> = new Map<string, Subscription[]>();\n\n    /**\n     * 注册事件\n     * @param name 事件名\n     * @param callback 回调\n     * @param target 目标\n     */\n    public static on(name: string, callback: Function, target?: any) {\n        const events = this.events;\n        if (!events.has(name)) {\n            events.set(name, [{ callback, target }]);\n            return;\n        }\n        events.get(name).push({ callback, target });\n    }\n\n    /**\n     * 注册事件（一次性）\n     * @param name 事件名\n     * @param callback 回调\n     * @param target 目标\n     */\n    public static once(name: string, callback: Function, target?: any) {\n        const events = this.onceEvents;\n        if (!events.has(name)) {\n            events.set(name, [{ callback, target }]);\n            return;\n        }\n        events.get(name).push({ callback, target });\n    }\n\n    /**\n     * 取消注册事件\n     * @param name 事件名\n     * @param callback 回调\n     * @param target 目标\n     */\n    public static off(name: string, callback: Function, target?: any) {\n        // 普通事件\n        const event = this.events.get(name);\n        if (event) {\n            for (let i = 0, l = event.length; i < l; i++) {\n                if (this.compare(event[i], callback, target)) {\n                    event.splice(i, 1);\n                    if (event.length === 0) {\n                        this.events.delete(name);\n                    }\n                    break;\n                }\n            }\n        }\n        // 一次性事件\n        const onceEvent = this.onceEvents.get(name);\n        if (onceEvent) {\n            for (let i = 0, l = onceEvent.length; i < l; i++) {\n                if (this.compare(onceEvent[i], callback, target)) {\n                    onceEvent.splice(i, 1);\n                    if (onceEvent.length === 0) {\n                        this.onceEvents.delete(name);\n                    }\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * 通过事件名发送事件\n     * @param name 事件名\n     * @param args 参数\n     */\n    public static emit(name: string, ...args: any[]) {\n        // 普通事件\n        const event = this.events.get(name);\n        if (event) {\n            for (let i = 0; i < event.length; i++) {\n                const { callback, target } = event[i];\n                callback.apply(target, args);\n            }\n        }\n        // 一次性事件\n        const onceEvent = this.onceEvents.get(name);\n        if (onceEvent) {\n            for (let i = 0; i < onceEvent.length; i++) {\n                const { callback, target } = onceEvent[i];\n                callback.apply(target, args);\n            }\n            this.onceEvents.delete(name);\n        }\n    }\n\n    /**\n     * 移除指定事件\n     * @param name 事件名\n     */\n    public static remove(name: string) {\n        // 普通事件\n        if (this.events.has(name)) {\n            this.events.delete(name);\n        }\n        // 一次性事件\n        if (this.onceEvents.has(name)) {\n            this.onceEvents.delete(name);\n        }\n    }\n\n    /**\n     * 移除所有事件\n     */\n    public static removeAll() {\n        // 普通事件\n        this.events.clear();\n        // 一次性事件\n        this.onceEvents.clear();\n    }\n\n    /**\n     * 对比\n     * @param subscription 订阅\n     * @param inCallback 回调\n     * @param inTarget 目标\n     */\n    private static compare(subscription: Subscription, inCallback: Function, inTarget: any) {\n        const { callback, target } = subscription;\n        return target === inTarget && (callback === inCallback || callback.toString() === inCallback.toString());\n    }\n\n}\n\n/** 订阅 */\ninterface Subscription {\n    /** 回调 */\n    callback: Function;\n    /** 目标 */\n    target: any;\n}\n","import EditorAsset from \"../../misc/EditorAsset\";\r\n\r\nconst { ccclass, property, requireComponent, executeInEditMode, disallowMultiple, executionOrder } = cc._decorator;\r\n\r\n/**\r\n * 高斯模糊 Shader 组件，该组件需要对应的 Effect 才能正常使用！\r\n * @see GaussianBlur.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/GaussianBlur.ts\r\n * @see eazax-gaussian-blur-adjustable.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-gaussian-blur-adjustable.effect\r\n */\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\n@executeInEditMode\r\n@disallowMultiple\r\n@executionOrder(-100)\r\nexport default class GaussianBlur extends cc.Component {\r\n\r\n    @property private _effect: cc.EffectAsset = null;\r\n    @property({ type: cc.EffectAsset, tooltip: CC_DEV && 'Effect 资源', readonly: true })\r\n    public get effect() { return this._effect; }\r\n    public set effect(value: cc.EffectAsset) { this._effect = value; this.init(); }\r\n\r\n    @property private _radius: number = 10;\r\n    @property({ tooltip: CC_DEV && '模糊半径' })\r\n    public get radius() { return this._radius; }\r\n    public set radius(value: number) { this._radius = value > 50 ? 50 : value; this.updateProperties(); }\r\n\r\n    private sprite: cc.Sprite = null;\r\n\r\n    private material: cc.Material = null;\r\n\r\n    protected onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    protected resetInEditor() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    public async init() {\r\n        /**\r\n         * 编辑器环境下自动绑定 Effect 资源\r\n         * 依赖于 EditorAsset 模块，没有该模块请将此代码块以及顶部导入语句去除\r\n         * @see EditorAsset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/misc/EditorAsset.ts\r\n         */\r\n        if (CC_EDITOR && !this._effect) {\r\n            await new Promise<void>(res => {\r\n                const path = 'eazax-ccc/resources/effects/eazax-gaussian-blur-adjustable.effect';\r\n                EditorAsset.load(path, 'effect', (err: Error, result: cc.EffectAsset) => {\r\n                    if (err) cc.warn(`[${this['__proto__']['__classname__']}]`, '请手动指定组件的 Effect 资源！');\r\n                    else this._effect = result;\r\n                    res();\r\n                });\r\n            });\r\n        }\r\n        if (!this._effect) return;\r\n\r\n        // 使用自定义 Effect 需禁用纹理的 packable 属性（因为动态合图之后无法正确获取纹理 UV 坐标）\r\n        // 详情请看：https://docs.cocos.com/creator/manual/zh/asset-workflow/sprite.html#packable\r\n        this.sprite = this.node.getComponent(cc.Sprite);\r\n        if (this.sprite.spriteFrame) this.sprite.spriteFrame.getTexture().packable = false;\r\n        // 生成并应用材质\r\n        this.material = cc.Material.create(this._effect);\r\n        this.sprite.setMaterial(0, this.material);\r\n        // 更新材质属性\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 更新材质属性\r\n     */\r\n    private updateProperties() {\r\n        this.material.setProperty('size', this.getNodeSize());\r\n        this.material.setProperty('radius', this.radius);\r\n    }\r\n\r\n    /**\r\n     * 获取节点尺寸\r\n     */\r\n    private getNodeSize() {\r\n        return cc.v2(this.node.width, this.node.height);\r\n    }\r\n\r\n}\r\n","/**\n * 几何工具（无优化）\n * @author 陈皮皮 (ifaswind)\n * @version 20220107\n * @see GeometryUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/GeometryUtil.ts\n */\nexport default class GeometryUtil {\n\n    /**\n     * 判断点是否在线段上\n     * @param p 目标点\n     * @param a 线段端点 a\n     * @param b 线段端点 b\n     */\n    public static pointOnLine(p: cc.Vec3, a: cc.Vec3, b: cc.Vec3) {\n        // 使用叉乘判断三点共线\n        const ab = b.sub(a);\n        const ap = p.sub(a);\n        const collinear = (ab.cross(ap).mag() === 0);\n        // 根据斜率判断三点共线\n        // const collinear = ((p.x - a.x) * (b.y - a.y) === (b.x - a.x) * (p.y - a.y));\n        // 确认点不在线段的延长线上\n        const between = (p.x >= Math.min(a.x, b.x) && p.x <= Math.max(a.x, b.x)) &&\n            (p.y >= Math.min(a.y, b.y) && p.y <= Math.max(a.y, b.y));\n        // 满足两个条件则点在线段上\n        return collinear && between;\n    }\n\n    /**\n     * 判断点是否在三角形内（同向法）\n     * @param p 目标点\n     * @param a 三角形顶点 a\n     * @param b 三角形顶点 b\n     * @param c 三角形顶点 c\n     */\n    public static pointInTriangle(p: cc.Vec3, a: cc.Vec3, b: cc.Vec3, c: cc.Vec3) {\n        function sameSide(_p: cc.Vec3, _a: cc.Vec3, _b: cc.Vec3, _c: cc.Vec3) {\n            const ab = _b.sub(_a);\n            const ac = _c.sub(_a);\n            const ap = _p.sub(_a);\n            const v1 = ab.cross(ac);\n            const v2 = ab.cross(ap);\n            return v1.dot(v2) >= 0;\n        }\n        return sameSide(p, a, b, c) && sameSide(p, b, c, a) && sameSide(p, c, a, b);\n        // return (a.x - p.x) * (b.y - p.y) - (b.x - p.x) * (a.y - p.y) >= 0 &&\n        //     (b.x - p.x) * (c.y - p.y) - (c.x - p.x) * (b.y - p.y) >= 0 &&\n        //     (c.x - p.x) * (a.y - p.y) - (a.x - p.x) * (c.y - p.y) >= 0;\n    }\n\n    /**\n     * 获取点到线段的最短距离\n     * @param p 目标点\n     * @param a 线段端点 a\n     * @param b 线段端点 b\n     */\n    public static pointLineDistance(p: cc.Vec3, a: cc.Vec3, b: cc.Vec3) {\n        // 线段向量\n        const ab = b.sub(a);\n        // 斜边向量（由目标点和线段某端点组成）\n        const ap = p.sub(a);\n        // 两线段夹角（弧度制）\n        const radians = cc.Vec3.angle(ab, ap);\n        // 斜边长度\n        const length = ap.mag();\n        // 计算距离\n        const distance = Math.sin(radians) * length;\n        // DONE\n        return distance;\n    }\n\n}\n\nif (CC_PREVIEW) {\n    window['GeometryUtil'] = GeometryUtil;\n}\n","const { ccclass, property, requireComponent, disallowMultiple, executeInEditMode, help, menu } = cc._decorator;\n\n/**\n * 渐变颜色，支持 Sprite（SIMPLE 和 FILLED）和 Label，注意这会覆盖默认的节点颜色设置\n * @author 陈皮皮 (ifaswind)\n * @version 20210125\n * @see GradientColor.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/renderers/GradientColor.ts\n */\n@ccclass\n@requireComponent(cc.RenderComponent)\n@disallowMultiple\n@executeInEditMode\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/renderers/GradientColor.ts')\n@menu('eazax/渲染组件/GradientColor')\nexport default class GradientColor extends cc.Component {\n\n    @property()\n    protected _colors: cc.Color[] = [cc.Color.RED, cc.Color.BLUE, cc.Color.RED, cc.Color.BLUE];\n    @property({ type: [cc.Color], tooltip: CC_DEV && '支持最多 4 种颜色（左下、右下、左上、右上）' })\n    public get colors() {\n        return this._colors;\n    }\n    public set colors(colors) {\n        if (colors.length > 4) {\n            colors.length = 4;\n        }\n        this._colors = colors;\n        this.markForRender();\n    }\n\n    /**\n     * 生命周期：组件启用\n     */\n    protected onEnable() {\n        this.replaceFunction();\n    }\n\n    /**\n     * 生命周期：组件禁用\n     */\n    protected onDisable() {\n        this.restoreFunction();\n    }\n\n    /**\n     * 编辑器回调：重置\n     */\n    protected resetInEditor() {\n        this.markForRender();\n    }\n\n    /**\n     * 替换颜色填充函数\n     */\n    protected replaceFunction() {\n        // 获取渲染组件\n        const renderComponent = this.getComponent(cc.RenderComponent);\n        if (!renderComponent) return;\n        // 获取装配器\n        const assembler = renderComponent._assembler;\n        if (!(assembler instanceof cc.Assembler2D)) return;\n        // 替换颜色填充函数\n        assembler.updateColor = () => {\n            // 获取颜色数据缓存\n            const uintVDatas = assembler._renderData.uintVDatas[0];\n            if (!uintVDatas) return;\n            // 顶点数据\n            const floatsPerVert = assembler.floatsPerVert;  // 每个顶点的数据数量\n            const colorOffset = assembler.colorOffset;      // 颜色偏移\n            const nodeColor = this.node.color;              // 节点颜色\n            let offset = 0;\n            for (let i = colorOffset, l = uintVDatas.length; i < l; i += floatsPerVert) {\n                uintVDatas[i] = (this.colors[offset++] || nodeColor)._val;\n            }\n        }\n        // 标记\n        this.markForRender();\n    }\n\n    /**\n     * 还原颜色填充函数\n     */\n    protected restoreFunction() {\n        // 获取渲染组件\n        const renderComponent = this.getComponent(cc.RenderComponent);\n        if (!renderComponent) return;\n        // 获取装配器\n        const assembler = renderComponent._assembler;\n        if (!(assembler instanceof cc.Assembler2D)) return;\n        // 恢复颜色填充函数\n        assembler.updateColor = cc.Assembler2D.prototype.updateColor;\n        // 标记\n        this.markForRender();\n    }\n\n    /**\n     * 标记\n     */\n    protected markForRender() {\n        this.node._renderFlag |= cc.RenderFlow.FLAG_COLOR;\n    }\n\n}\n","(function(scope){\r\n    scope.Help =  {};\r\n\r\n    //保留小数（不四舍五入）\r\n    Help.preserveDecimal = function(number, precision) {\r\n        const scale = Math.pow(10, precision);\r\n        return (Math.floor(number * scale) / scale).toFixed(precision);\r\n    }\r\n\r\n\r\n})(window);","import EditorAsset from \"../../misc/EditorAsset\";\r\n\r\nconst { ccclass, property, requireComponent, executeInEditMode, disallowMultiple, executionOrder } = cc._decorator;\r\n\r\n/** 镂空形状 */\r\nexport enum HollowOutShape {\r\n    /** 矩形 */\r\n    Rect = 1,\r\n    /** 圆形 */\r\n    Circle\r\n}\r\n\r\n/**\r\n * [Shader] 挖孔组件，该组件需要对应的 Effect 才能正常使用！\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210429\r\n * @see HollowOut.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/HollowOut.ts\r\n * @see eazax-hollowout.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-hollowout.effect\r\n */\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\n@executeInEditMode\r\n@disallowMultiple\r\n@executionOrder(-10)\r\nexport default class HollowOut extends cc.Component {\r\n\r\n    @property\r\n    protected _effect: cc.EffectAsset = null;\r\n    @property({ type: cc.EffectAsset, tooltip: CC_DEV && 'Effect 资源', readonly: true })\r\n    public get effect() { return this._effect; }\r\n    public set effect(value: cc.EffectAsset) {\r\n        this._effect = value; this.init();\r\n    }\r\n\r\n    @property\r\n    protected _shape: HollowOutShape = HollowOutShape.Rect;\r\n    @property({ type: cc.Enum(HollowOutShape), tooltip: CC_DEV && '镂空形状' })\r\n    public get shape() { return this._shape; }\r\n    public set shape(value: HollowOutShape) {\r\n        this._shape = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    @property\r\n    protected _center: cc.Vec2 = cc.v2();\r\n    @property({ tooltip: CC_DEV && '中心坐标' })\r\n    public get center() { return this._center; }\r\n    public set center(value: cc.Vec2) {\r\n        this._center = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    @property\r\n    protected _width: number = 300;\r\n    @property({ tooltip: CC_DEV && '宽', visible() { return this._shape === HollowOutShape.Rect; } })\r\n    public get width() { return this._width; }\r\n    public set width(value: number) {\r\n        this._width = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    @property\r\n    protected _height: number = 300;\r\n    @property({ tooltip: CC_DEV && '高', visible() { return this._shape === HollowOutShape.Rect; } })\r\n    public get height() { return this._height; }\r\n    public set height(value: number) {\r\n        this._height = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    @property\r\n    protected _round: number = 1;\r\n    @property({ tooltip: CC_DEV && '圆角半径', visible() { return this._shape === HollowOutShape.Rect; } })\r\n    public get round() { return this._round; }\r\n    public set round(value: number) {\r\n        this._round = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    @property\r\n    protected _radius: number = 200;\r\n    @property({ tooltip: CC_DEV && '半径', visible() { return this._shape === HollowOutShape.Circle; } })\r\n    public get radius() { return this._radius; }\r\n    public set radius(value: number) {\r\n        this._radius = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    @property\r\n    protected _feather: number = 0.5;\r\n    @property({ tooltip: CC_DEV && '边缘虚化宽度', visible() { return this._shape === HollowOutShape.Circle || this.round > 0; } })\r\n    public get feather() { return this._feather; }\r\n    public set feather(value: number) {\r\n        this._feather = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    protected sprite: cc.Sprite = null;\r\n\r\n    protected material: cc.Material = null;\r\n\r\n    protected tweenRes: () => void = null;\r\n\r\n    protected onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    protected resetInEditor() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化组件\r\n     */\r\n    protected async init() {\r\n        /**\r\n         * 编辑器环境下自动绑定 Effect 资源\r\n         * 依赖于 EditorAsset 模块，没有该模块请将此代码块以及顶部导入语句去除\r\n         * @see EditorAsset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/misc/EditorAsset.ts\r\n         */\r\n        if (CC_EDITOR && !this._effect) {\r\n            await new Promise<void>(res => {\r\n                const path = 'eazax-ccc/resources/effects/eazax-hollowout.effect';\r\n                EditorAsset.load(path, 'effect', (err: Error, result: cc.EffectAsset) => {\r\n                    if (err) {\r\n                        cc.warn(`[${this['__proto__']['__classname__']}]`, '请手动指定组件的 Effect 资源！');\r\n                        res();\r\n                        return;\r\n                    }\r\n                    this._effect = result;\r\n                    res();\r\n                });\r\n            });\r\n        }\r\n        if (!this._effect) return;\r\n\r\n        // 使用自定义 Effect 需禁用纹理的 packable 属性（因为动态合图之后无法正确获取纹理 UV 坐标）\r\n        // 详情请看：https://docs.cocos.com/creator/manual/zh/asset-workflow/sprite.html#packable\r\n        const sprite = this.sprite = this.node.getComponent(cc.Sprite);\r\n        sprite.spriteFrame && (sprite.spriteFrame.getTexture().packable = false);\r\n        // 生成并应用材质\r\n        this.material = cc.Material.create(this._effect);\r\n        sprite.setMaterial(0, this.material);\r\n        // 更新材质属性\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 更新材质属性\r\n     */\r\n    protected updateProperties() {\r\n        switch (this._shape) {\r\n            case HollowOutShape.Rect:\r\n                this.rect(this._center, this._width, this._height, this._round, this._feather);\r\n                break;\r\n            case HollowOutShape.Circle:\r\n                this.circle(this._center, this._radius, this._feather);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 矩形镂空\r\n     * @param center 中心坐标\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @param round 圆角半径\r\n     * @param feather 边缘虚化宽度\r\n     */\r\n    public rect(center?: cc.Vec2, width?: number, height?: number, round?: number, feather?: number) {\r\n        // 保存类型\r\n        this._shape = HollowOutShape.Rect;\r\n        // 确认参数\r\n        if (center != null) {\r\n            this._center = center;\r\n        }\r\n        if (width != null) {\r\n            this._width = width;\r\n        }\r\n        if (height != null) {\r\n            this._height = height;\r\n        }\r\n        if (round != null) {\r\n            this._round = (round >= 0) ? round : 0;\r\n            const min = Math.min(this._width / 2, this._height / 2);\r\n            this._round = (this._round <= min) ? this._round : min;\r\n        }\r\n        if (feather != null) {\r\n            this._feather = (feather >= 0) ? feather : 0;\r\n            this._feather = (this._feather <= this._round) ? this._feather : this._round;\r\n        }\r\n        // 更新材质\r\n        const material = this.material;\r\n        material.setProperty('size', this.getNodeSize());\r\n        material.setProperty('center', this.getCenter(this._center));\r\n        material.setProperty('width', this.getWidth(this._width));\r\n        material.setProperty('height', this.getHeight(this._height));\r\n        material.setProperty('round', this.getRound(this._round));\r\n        material.setProperty('feather', this.getFeather(this._feather));\r\n    }\r\n\r\n    /**\r\n     * 圆形镂空\r\n     * @param center 中心坐标\r\n     * @param radius 半径\r\n     * @param feather 边缘虚化宽度\r\n     */\r\n    public circle(center?: cc.Vec2, radius?: number, feather?: number) {\r\n        // 保存类型\r\n        this._shape = HollowOutShape.Circle;\r\n        // 确认参数\r\n        if (center != null) {\r\n            this._center = center;\r\n        }\r\n        if (radius != null) {\r\n            this._radius = radius;\r\n        }\r\n        if (feather != null) {\r\n            this._feather = (feather >= 0) ? feather : 0;\r\n        }\r\n        // 更新材质\r\n        const material = this.material;\r\n        material.setProperty('size', this.getNodeSize());\r\n        material.setProperty('center', this.getCenter(this._center));\r\n        material.setProperty('width', this.getWidth(this._radius * 2));\r\n        material.setProperty('height', this.getHeight(this._radius * 2));\r\n        material.setProperty('round', this.getRound(this._radius));\r\n        material.setProperty('feather', this.getFeather(this._feather));\r\n    }\r\n\r\n    /**\r\n     * 缓动镂空（矩形）\r\n     * @param time 时间\r\n     * @param center 中心坐标\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @param round 圆角半径\r\n     * @param feather 边缘虚化宽度\r\n     */\r\n    public rectTo(time: number, center: cc.Vec2, width: number, height: number, round: number = 0, feather: number = 0): Promise<void> {\r\n        return new Promise(res => {\r\n            // 保存类型\r\n            this._shape = HollowOutShape.Rect;\r\n            // 停止进行中的缓动\r\n            cc.Tween.stopAllByTarget(this);\r\n            this.unscheduleAllCallbacks();\r\n            // 完成上一个期约\r\n            this.tweenRes && this.tweenRes();\r\n            this.tweenRes = res;\r\n            // 确认参数\r\n            round = Math.min(round, width / 2, height / 2);\r\n            feather = Math.min(feather, round);\r\n            // 缓动\r\n            cc.tween<HollowOut>(this)\r\n                .to(time, {\r\n                    center: center,\r\n                    width: width,\r\n                    height: height,\r\n                    round: round,\r\n                    feather: feather\r\n                })\r\n                .call(() => {\r\n                    this.scheduleOnce(() => {\r\n                        if (this.tweenRes) {\r\n                            this.tweenRes();\r\n                            this.tweenRes = null;\r\n                        }\r\n                    });\r\n                })\r\n                .start();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 缓动镂空（圆形）\r\n     * @param time 时间\r\n     * @param center 中心坐标\r\n     * @param radius 半径\r\n     * @param feather 边缘虚化宽度\r\n     */\r\n    public circleTo(time: number, center: cc.Vec2, radius: number, feather: number = 0): Promise<void> {\r\n        return new Promise(res => {\r\n            // 保存类型\r\n            this._shape = HollowOutShape.Circle;\r\n            // 停止进行中的缓动\r\n            cc.Tween.stopAllByTarget(this);\r\n            this.unscheduleAllCallbacks();\r\n            // 完成上一个期约\r\n            this.tweenRes && this.tweenRes();\r\n            this.tweenRes = res;\r\n            // 缓动\r\n            cc.tween<HollowOut>(this)\r\n                .to(time, {\r\n                    center: center,\r\n                    radius: radius,\r\n                    feather: feather\r\n                })\r\n                .call(() => {\r\n                    this.scheduleOnce(() => {\r\n                        if (this.tweenRes) {\r\n                            this.tweenRes();\r\n                            this.tweenRes = null;\r\n                        }\r\n                    });\r\n                })\r\n                .start();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 取消所有挖孔\r\n     */\r\n    public reset() {\r\n        this.rect(cc.v2(), 0, 0, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * 挖孔设为节点大小（就整个都挖没了）\r\n     */\r\n    public setNodeSize() {\r\n        const node = this.node,\r\n            width = node.width,\r\n            height = node.height;\r\n        this._radius = Math.sqrt(width ** 2 + height ** 2) / 2;\r\n        this.rect(node.getPosition(), width, height, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * 获取中心点\r\n     * @param center \r\n     */\r\n    protected getCenter(center: cc.Vec2) {\r\n        const node = this.node,\r\n            width = node.width,\r\n            height = node.height;\r\n        const x = (center.x + (width / 2)) / width,\r\n            y = (-center.y + (height / 2)) / height;\r\n        return cc.v2(x, y);\r\n    }\r\n\r\n    /**\r\n     * 获取节点尺寸\r\n     */\r\n    protected getNodeSize() {\r\n        return cc.v2(this.node.width, this.node.height);\r\n    }\r\n\r\n    /**\r\n     * 获取挖孔宽度\r\n     * @param width \r\n     */\r\n    protected getWidth(width: number) {\r\n        return width / this.node.width;\r\n    }\r\n\r\n    /**\r\n     * 获取挖孔高度\r\n     * @param height \r\n     */\r\n    protected getHeight(height: number) {\r\n        return height / this.node.width;\r\n    }\r\n\r\n    /**\r\n     * 获取圆角半径\r\n     * @param round \r\n     */\r\n    protected getRound(round: number) {\r\n        return round / this.node.width;\r\n    }\r\n\r\n    /**\r\n     * 获取边缘虚化宽度\r\n     * @param feather \r\n     */\r\n    protected getFeather(feather: number) {\r\n        return feather / this.node.width;\r\n    }\r\n\r\n}\r\n","export const enum IHttpMethod {\n    GET = \"get\",\n    POST = \"post\"\n}\n\n\nexport  class Http {\n\n    //public static Header: Map<any, any> = new Map<any, any>();\n\n    /**\n     * 请求\n     * @param url 链接\n     * @param param 参数\n     * @param callback 回调\n     * @param method 方案\n     * @param https 是否使用 https协议\n     */\n    public static request(url: string, param: Object, callback: (data: any) => void, method: IHttpMethod = IHttpMethod.GET, https?: boolean): void {\n        //this.Header.set(\"Content-Type\", \"text/plain;charset=UTF-8;application/x-www-form-urlencoded;application/json;charset=UTF-8\")\n        switch (method) {\n            case IHttpMethod.GET:\n                \n                this.getRequest(url, param, callback);\n                break;\n            case IHttpMethod.POST:\n                this.postRequest(url, param, callback);\n                break;\n        }\n    }\n\n    /**\n     * GET\n     * @param url 链接\n     * @param param 参数\n     * @param callback 回调\n     * @param https 是否使用 https协议\n     */\n    private static getRequest(url: string, param: Object, callback: (data: any) => void, https?: boolean): void {\n        if (param) {\n            let s = \"?\";\n            for (let key in param) {\n                url += `${s}${key}=${param[key]}`;\n                s = '&';\n            }\n        }\n        url = this.getUrl(url, https);\n        cc.log(`http send:${url}`);\n        let request = new XMLHttpRequest();\n        request.open(IHttpMethod.GET, url, true);\n        this.setRequestHeader(request);\n        request.onreadystatechange = () => {\n            if (request.readyState == 4) {\n                if (request.status >= 200 && request.status < 400) {\n                    callback(request.responseText);\n                } else {\n                    cc.log(`url:(${url}) request error. status:(${request.status})`);\n                    callback(null);\n                }\n            }\n        };\n        request.send();\n    }\n\n    /**\n     * POST\n     * @param url 链接\n     * @param param 参数\n     * @param callback 回调\n     * @param https 是否使用 https协议\n     */\n    private static postRequest(url: string, param: Object, callback: (data: any) => void, https?: boolean): void {\n        let paramStr = \"\";\n        if (param) {\n            let s = \"\";\n            for (let key in param) {\n                paramStr += `${s}${key}=${param[key]}`;\n                s = '&';\n            }\n        }\n        url = this.getUrl(url, https);\n        cc.log(`http send:${url}`+\"?\"+paramStr);\n        let request = new XMLHttpRequest();\n        request.open(IHttpMethod.POST, url);\n        this.setRequestHeader(request);\n        request.onreadystatechange = () => {\n            if (request.readyState == 4) {\n                if (request.status >= 200 && request.status < 400) {\n                    callback(request.responseText);\n                } else {\n                    cc.log(`${url}msg:${request.status}`);\n                    callback(null);\n                }\n            }else\n            {\n                cc.log(`${url}msg:${request.statusText}`);\n            }\n        };\n        request.send(paramStr);\n    }\n\n    /**\n     * 设置http头\n     * @param request XMLHttpRequest\n     */\n    private static setRequestHeader(request: XMLHttpRequest): void {\n        // request.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8;application/x-www-form-urlencoded;application/json;charset=UTF-8\");\n        request.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        //request.setRequestHeader(\"Cache-Control\", \"no-store\");\n        // this.Header.forEach((value, key) => {\n        //     request.setRequestHeader(key, value);\n        //     cc.log(key)\n        //   });\n    }\n\n    /**\n     * 获取请求链接\n     * @param url 链接\n     * @param https 是否使用 https协议\n     * @returns {string} \n     */\n    private static getUrl(url: string, https: boolean): string {\n        if (https) {\n            if (url.indexOf(\"https\") == -1) {\n                url = url.replace(\"http\", \"https\");\n            }\n        }\n        return url;\n    }\n}","/**\n * 图像工具\n * @author 陈皮皮 (ifaswind)\n * @version 20220122\n * @see ImageUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/ImageUtil.ts\n */\nexport default class ImageUtil {\n\n    /**\n     * 获取图像的透明剪裁尺寸数据（结果基于左上角）\n     * @param data 图像数据\n     * @param width 图像宽度\n     * @param height 图像高度\n     */\n    public static getTrim(data: Uint8Array, width: number, height: number) {\n        let minX = 0, maxX = 0, minY = 0, maxY = 0;\n        let i = 0, j = 0;\n        const lineWidth = width * 4;\n        // 左 -> 右\n        left: {\n            for (i = 0; i < width; i++) {\n                for (j = 0; j < height; j++) {\n                    const index = (lineWidth * j) + (4 * i) + 3;\n                    if (data[index] !== 0) {\n                        break left;\n                    }\n                }\n            }\n        }\n        minX = i;\n        // 右 -> 左\n        right: {\n            for (i = width - 1; i >= 0; i--) {\n                for (j = 0; j < height; j++) {\n                    const index = (lineWidth * j) + (4 * i) + 3;\n                    if (data[index] !== 0) {\n                        break right;\n                    }\n                }\n            }\n        }\n        maxX = i + 1;\n        // 上 -> 下\n        top: {\n            for (i = 0; i < height; i++) {\n                for (j = 0; j < width; j++) {\n                    const index = (lineWidth * i) + (4 * j) + 3;\n                    if (data[index] !== 0) {\n                        break top;\n                    }\n                }\n            }\n        }\n        minY = i;\n        // 下 -> 上\n        bottom: {\n            for (i = height - 1; i >= 0; i--) {\n                for (j = 0; j < width; j++) {\n                    const index = (lineWidth * i) + (4 * j) + 3;\n                    if (data[index] !== 0) {\n                        break bottom;\n                    }\n                }\n            }\n        }\n        maxY = i + 1;\n        // 完成\n        return { minX, maxX, minY, maxY };\n    }\n\n    // ------------------------------ 以下 API 仅 Web 平台下可用 ------------------------------\n\n    /**\n     * (仅 Web 平台下可用) 获取纹理的颜色数据。\n     * @param texture 纹理\n     */\n    public static getPixelsData(texture: cc.Texture2D) {\n        if (!window || !window.document) {\n            return null;\n        }\n        // 获取画布\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        // 调整画布尺寸\n        const { width, height } = texture;\n        canvas.width = width;\n        canvas.height = height;\n        // 将纹理画到画布上\n        const image = texture.getHtmlElementObj();\n        ctx.drawImage(image, 0, 0, width, height);\n        // 获取像素数据\n        const imageData = ctx.getImageData(0, 0, width, height);\n        // 销毁临时对象\n        image.remove();\n        canvas.remove();\n        // 返回 Unit8Array 格式的数据\n        return new Uint8Array(imageData.data);\n    }\n\n    /**\n     * (仅 Web 平台下可用) 获取纹理中指定像素的颜色。原点为左上角，从像素 (0, 0) 开始。\n     * @param texture 纹理\n     * @param x x 坐标\n     * @param y y 坐标\n     * @example\n     * // 获取纹理左上角第一个像素的颜色\n     * const color = ImageUtil.getPixelColor(texture, 0, 0);\n     * // cc.color(50, 100, 123, 255);\n     */\n    public static getPixelColor(texture: cc.Texture2D, x: number, y: number) {\n        if (!window || !window.document) {\n            return null;\n        }\n        const pixelsData = ImageUtil.getPixelsData(texture),\n            width = texture.width;\n        const index = (width * 4 * Math.floor(y)) + (4 * Math.floor(x)),\n            data = pixelsData.slice(index, index + 4),\n            color = cc.color(data[0], data[1], data[2], data[3]);\n        return color;\n    }\n\n    /**\n     * (仅 Web 平台下可用) 将图像转为 Base64 字符（仅 png、jpg 或 jpeg 格式资源）\n     * @param url 图像地址\n     * @param callback 完成回调\n     */\n    public static imageToBase64(url: string, callback?: (dataURL: string) => void) {\n        return new Promise(res => {\n            let extname = /\\.png|\\.jpg|\\.jpeg/.exec(url)?.[0];\n            if (['.png', '.jpg', '.jpeg'].includes(extname)) {\n                const canvas = document.createElement('canvas');\n                const ctx = canvas.getContext('2d');\n                const image = new Image();\n                image.src = url;\n                image.onload = () => {\n                    canvas.height = image.height;\n                    canvas.width = image.width;\n                    ctx.drawImage(image, 0, 0);\n                    extname = extname === '.jpg' ? 'jpeg' : extname.replace('.', '');\n                    const dataURL = canvas.toDataURL(`image/${extname}`);\n                    callback && callback(dataURL);\n                    res(dataURL);\n                    image.remove();\n                    canvas.remove();\n                }\n            } else {\n                console.warn('Not a jpg/jpeg or png resource!');\n                callback && callback(null);\n                res(null);\n            }\n        });\n    }\n\n    /**\n     * (仅 Web 平台下可用) 将 Base64 字符转为 cc.Texture2D 资源\n     * @param base64 Base64 字符\n     */\n    public static base64ToCCTexture(base64: string) {\n        if (!window || !window.document) {\n            return null;\n        }\n        const image = new Image();\n        image.src = base64;\n        const texture = new cc.Texture2D();\n        texture.initWithElement(image);\n        image.remove();\n        return texture;\n    }\n\n}\n","/**\n * 实例事件\n * @see InstanceEvent.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/InstanceEvent.ts\n * @example \n * const startEvent = new InstanceEvent();\n * startEvent.on(this.onStart, this);\n * startEvent.emit();\n * startEvent.off(this.onStart, this);\n */\nexport class InstanceEvent {\n\n    private events: Array<Subscription> = null;\n\n    private onceEvents: Array<Subscription> = null;\n\n    constructor() {\n        this.events = new Array<Subscription>();\n        this.onceEvents = new Array<Subscription>();\n    }\n\n    /**\n     * 监听事件\n     * @param callback 回调\n     * @param target 订阅对象\n     */\n    public on(callback: Function, target?: any) {\n        this.events.push({ callback, target });\n    }\n\n    /**\n     * 监听事件（一次性）\n     * @param callback 回调\n     * @param target 订阅对象\n     */\n    public once(callback: Function, target?: any) {\n        this.onceEvents.push({ callback, target });\n    }\n\n    /**\n     * 取消监听事件\n     * @param callback 回调\n     * @param target 订阅对象\n     */\n    public off(callback: Function, target?: any) {\n        for (let i = 0; i < this.events.length; i++) {\n            if (this.events[i].callback === callback && (!target || this.events[i].target === target)) {\n                this.events.splice(i, 1);\n            }\n        }\n        // 一次性事件\n        for (let i = 0; i < this.onceEvents.length; i++) {\n            if (this.onceEvents[i].callback === callback && (!target || this.onceEvents[i].target === target)) {\n                this.onceEvents.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * 发射事件\n     * @param args 参数\n     */\n    public emit(...args: any[]) {\n        let promises = [];\n        for (let i = 0; i < this.events.length; i++) {\n            promises.push(this.events[i].callback.apply(this.events[i].target, args));\n        }\n        // 一次性事件\n        for (let i = 0; i < this.onceEvents.length; i++) {\n            promises.push(this.onceEvents[i].callback.apply(this.onceEvents[i].target, args));\n        }\n        this.onceEvents.length = 0;\n        return Promise.all(promises);\n    }\n\n    /**\n     * 取消所有监听\n     */\n    public removeAll() {\n        this.events.length = 0;\n        this.onceEvents.length = 0;\n    }\n\n}\n\n/** 订阅 */\ninterface Subscription {\n    callback: Function;\n    target: any;\n}\n","const { ccclass, property } = cc._decorator;\n\n/**\n * 果冻缓动效果\n * @author 陈皮皮 (ifaswind)\n * @version 20201014\n * @see JellyTween.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/tweens/JellyTween.ts\n */\n@ccclass\nexport default class JellyTween extends cc.Component {\n\n    @property({ tooltip: CC_DEV && '频率（弹跳次数）' })\n    public frequency: number = 4;\n\n    @property({ tooltip: CC_DEV && '衰退指数' })\n    public decay: number = 2;\n\n    @property({ tooltip: CC_DEV && '下压缩放' })\n    public pressScale: number = 0.2;\n\n    @property({ tooltip: CC_DEV && '效果总时长' })\n    public totalTime: number = 1;\n\n    @property({ tooltip: CC_DEV && '播放间隔' })\n    public interval: number = 1;\n\n    @property({ tooltip: CC_DEV && '自动播放' })\n    public playOnLoad: boolean = false;\n\n    /** 原始缩放值 */\n    private originalScale: number = 1;\n\n    private tween: cc.Tween = null;\n\n    protected start() {\n        // 记录缩放值\n        this.originalScale = this.node.scale;\n        // 播放\n        if (this.playOnLoad) this.play();\n    }\n\n    /**\n     * 播放\n     * @param repeatTimes 重复次数\n     */\n    public play(repeatTimes?: number) {\n        // 重复次数\n        const times = (repeatTimes != undefined && repeatTimes > 0) ? repeatTimes : 10e8;\n        // 时长\n        const pressTime = this.totalTime * 0.2;         // 收缩时长\n        const scaleBackTime = this.totalTime * 0.15;    // 缩放至原始大小时长\n        const bouncingTime = this.totalTime * 0.65;     // 弹动时长\n        // 振幅\n        const amplitude = this.pressScale / scaleBackTime;\n        // 播放\n        this.tween = cc.tween(this.node)\n            .repeat(times,\n                cc.tween()\n                    .to(pressTime, { scaleX: this.originalScale + this.pressScale, scaleY: this.originalScale - this.pressScale }, { easing: 'sineOut' })\n                    .to(scaleBackTime, { scaleX: this.originalScale, scaleY: this.originalScale })\n                    .to(bouncingTime, {\n                        scaleX: {\n                            value: this.originalScale,\n                            progress: (start: number, end: number, current: number, t: number) => {\n                                return end - this.getDifference(amplitude, t);\n                            }\n                        },\n                        scaleY: {\n                            value: this.originalScale,\n                            progress: (start: number, end: number, current: number, t: number) => {\n                                return end + this.getDifference(amplitude, t);\n                            }\n                        }\n                    })\n                    .delay(this.interval)\n            )\n            .start();\n    }\n\n    /**\n     * 停止\n     */\n    public stop() {\n        this.tween && this.tween.stop();\n        this.node.setScale(this.originalScale);\n    }\n\n    /**\n     * 获取目标时刻弹性幅度\n     * @param amplitude 幅度\n     * @param time 时间\n     */\n    private getDifference(amplitude: number, time: number) {\n        // 角速度（ω=2nπ）\n        const angularVelocity = this.frequency * Math.PI * 2;\n        return amplitude * (Math.sin(time * angularVelocity) / Math.exp(this.decay * time) / angularVelocity);\n    }\n\n}\n","import EventManager from \"../../core/EventManager\";\r\n\r\n/** 语言更改事件 */\r\nexport const LANG_CHANGED = 'lang-change';\r\n\r\n\r\n/** 语言 */\r\nexport enum Lang {\r\n    /** 中文 */\r\n    Cn = 'cn',\r\n    /** 英语 */\r\n    Eng = 'eng',\r\n    /** 巴西 */\r\n    Brasil = 'brasil',\r\n    /** 哥伦比亚 */\r\n    Columbia = 'columbia',    \r\n}\r\n\r\n/** 默认语言 */\r\nexport enum DefaultLang {\r\n    /** 中文 */\r\n    cn = 1,\r\n    /** 英语 */\r\n    eng,    \r\n    /** 巴西 */\r\n    brasil,\r\n    /** 哥伦比亚 */\r\n    columbia,      \r\n}\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n/**\r\n * 多语言组件基类\r\n * @see LocalizationBase.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/localization/LocalizationBase.ts\r\n */\r\n@ccclass\r\nexport default class LocalizationBase<T> extends cc.Component {\r\n\r\n    @property({ type: cc.Enum(DefaultLang), tooltip: CC_DEV && '无当前语言资源时使用的默认语言' })\r\n    protected defaultLang: DefaultLang = DefaultLang.cn;\r\n\r\n    protected curLang: Lang = Lang.Cn;\r\n\r\n    private langChanged: Function = (lang: Lang) => {\r\n        this.curLang = lang;\r\n        this.onLangChanged(lang);\r\n    }\r\n\r\n    protected onLoad() {\r\n        EventManager.on(LANG_CHANGED, this.langChanged, this);\r\n    }\r\n\r\n    protected onDestroy() {\r\n        EventManager.off(LANG_CHANGED, this.langChanged, this);\r\n    }\r\n\r\n    /**\r\n     * 语言更改回调（子类重写该函数以具体实现）\r\n     */\r\n    protected onLangChanged(lang: Lang) {\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取当前语言资源\r\n     */\r\n    protected get(): T {\r\n        if (this[this.curLang]) {\r\n            if (Array.isArray(this[this.curLang]) && this[this.curLang].length === 0) {\r\n                return this[DefaultLang[this.defaultLang]];\r\n            } else {\r\n                return this[this.curLang];\r\n            }\r\n        } else {\r\n            return this[DefaultLang[this.defaultLang]];\r\n        }\r\n    }\r\n\r\n}\r\n","import LocalizationBase,{Lang, DefaultLang } from \"./LocalizationBase\";\r\n\r\n\r\n\r\nconst { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Label)\r\nexport default class LocalizationLabelString extends LocalizationBase<string> {\r\n    \r\n\r\n    @property()\r\n    private brasil: string = '';\r\n\r\n    @property()\r\n    private columbia: string = '';\r\n\r\n    private label: cc.Label = null;\r\n\r\n    protected onLoad() {\r\n        super.onLoad();\r\n        this.defaultLang = DefaultLang.brasil;\r\n        this.curLang = Lang.Brasil;\r\n        this.label = this.node.getComponent(cc.Label);\r\n    }\r\n\r\n    protected onLangChanged() {\r\n        if (this.label) this.label.string = this.get();\r\n    }\r\n\r\n}\r\n","import LocalizationBase from \"./LocalizationBase\";\r\n\r\nconst { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\nexport default class LocalizationSpriteFrame extends LocalizationBase<cc.SpriteFrame> {\r\n\r\n    @property(cc.SpriteFrame)\r\n    private cn: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    private eng: cc.SpriteFrame = null;\r\n\r\n    private sprite: cc.Sprite = null;\r\n\r\n    protected onLoad() {\r\n        super.onLoad();\r\n\r\n        this.sprite = this.node.getComponent(cc.Sprite);\r\n    }\r\n\r\n    protected onLangChanged() {\r\n        if (this.sprite) this.sprite.spriteFrame = this.get();\r\n    }\r\n\r\n}\r\n","/**\r\n * 节点长按事件（由 LongPress 组件触发）\r\n */\r\nexport const LONG_PRESS: string = 'longpress';\r\n\r\n/**\r\n * 长按触发方式\r\n */\r\nexport enum TriggerWay {\r\n\r\n    /**\r\n     * 到达设定时间后立即触发\r\n     */\r\n    Immediately = 1,\r\n\r\n    /**\r\n     * 触摸结束后触发\r\n     */\r\n    AfterLoosing\r\n\r\n}\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LongPress extends cc.Component {\r\n\r\n    @property({ tooltip: CC_DEV && '长按触发时间（单位：秒）' })\r\n    public trggerTime: number = 2;\r\n\r\n    @property({ type: cc.Enum(TriggerWay), tooltip: CC_DEV && '长按触发方式' })\r\n    public trggerWay: TriggerWay = TriggerWay.Immediately;\r\n\r\n    @property({ type: cc.Component.EventHandler, tooltip: CC_DEV && '长按事件列表' })\r\n    public longPressEvents: cc.Component.EventHandler[] = [];\r\n\r\n    /**\r\n     * 长按是否达成\r\n     */\r\n    private hasAccomplished: boolean = false;\r\n\r\n    protected onEnable() {\r\n        this.registerNodeEvent();\r\n    }\r\n\r\n    protected onDisable() {\r\n        this.unregisterNodeEvent();\r\n    }\r\n\r\n    private registerNodeEvent() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\r\n    }\r\n\r\n    private unregisterNodeEvent() {\r\n        this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\r\n    }\r\n\r\n    private onTouchStart() {\r\n        this.hasAccomplished = false;\r\n        this.scheduleOnce(this.onPressAccomplished.bind(this), this.trggerTime);\r\n    }\r\n\r\n    private onTouchEnd() {\r\n        if (this.hasAccomplished) {\r\n            this.hasAccomplished = false;\r\n            this.trigger();\r\n        }\r\n        this.unscheduleAllCallbacks();\r\n    }\r\n\r\n    private onTouchCancel() {\r\n        if (this.hasAccomplished) {\r\n            this.hasAccomplished = false;\r\n            this.trigger();\r\n        }\r\n        this.unscheduleAllCallbacks();\r\n    }\r\n\r\n    /**\r\n     * 长按达成回调\r\n     */\r\n    private onPressAccomplished() {\r\n        if (this.trggerWay === TriggerWay.Immediately) this.trigger();\r\n        else if (this.trggerWay === TriggerWay.AfterLoosing) this.hasAccomplished = true;\r\n    }\r\n\r\n    /**\r\n     * 触发已注册长按事件\r\n     */\r\n    private trigger() {\r\n        cc.Component.EventHandler.emitEvents(this.longPressEvents, this);\r\n        this.node.emit(LONG_PRESS, this);\r\n    }\r\n\r\n}","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Marquee extends cc.Component {\r\n\r\n    @property({ type: cc.Node, tooltip: CC_DEV && '容器节点' })\r\n    private view: cc.Node = null;\r\n\r\n    @property({ type: cc.RichText, tooltip: CC_DEV && '文本组件' })\r\n    private label: cc.RichText = null;\r\n\r\n    @property({ tooltip: '文本队列' })\r\n    private texts: string[] = [];\r\n\r\n    @property({ tooltip: CC_DEV && '每帧移动的像素' })\r\n    private speed: number = 1;\r\n\r\n    @property({ tooltip: CC_DEV && '循环播放' })\r\n    private loop: boolean = false;\r\n\r\n    @property({ tooltip: CC_DEV && '自动播放' })\r\n    private playOnLoad: boolean = false;\r\n\r\n    private index: number = 0;\r\n\r\n    private isPlaying: boolean = false;\r\n\r\n    private endCallback: Function = null;\r\n\r\n    protected onLoad() {\r\n        this.init();\r\n        this.playOnLoad && this.play(0, this.loop);\r\n    }\r\n\r\n    protected update(dt: number) {\r\n        if (!this.isPlaying || this.texts.length === 0) return;\r\n        this.updatePosition();\r\n    }\r\n\r\n    private init() {\r\n        this.label.node.anchorX = 0;\r\n        this.setLabel('');\r\n    }\r\n\r\n    private updatePosition() {\r\n        this.label.node.x -= this.speed;\r\n        if (this.label.node.x <= -(this.view.width / 2 + this.label.node.width)) this.next();\r\n    }\r\n\r\n    private setLabel(text: string) {\r\n        this.label.string = text;\r\n        this.label.node.x = this.view.width / 2;\r\n    }\r\n\r\n    private next() {\r\n        this.index++;\r\n        if (this.index >= this.texts.length) {\r\n            if (this.loop) {\r\n                this.index = 0;\r\n                this.setLabel(this.texts[0]);\r\n            } else {\r\n                if (this.endCallback) {\r\n                    this.endCallback();\r\n                    this.endCallback = null;\r\n                }\r\n                this.clean();\r\n            }\r\n        } else {\r\n            this.setLabel(this.texts[this.index]);\r\n        }\r\n    }\r\n\r\n    public push(texts: string[]) {\r\n        if (Array.isArray(texts)) this.texts.push(...texts);\r\n        else this.texts.push(texts);\r\n    }\r\n\r\n    public play(index: number = 0, loop: boolean = false, callback: Function = null) {\r\n        if (this.texts.length === 0) return;\r\n\r\n        this.index = index < this.texts.length ? index : 0;\r\n        this.setLabel(this.texts[this.index]);\r\n\r\n        this.loop = loop;\r\n        this.endCallback = callback;\r\n\r\n        this.isPlaying = true;\r\n    }\r\n\r\n    public stop() {\r\n        this.isPlaying = false;\r\n        this.index = 0;\r\n    }\r\n\r\n    public pause() {\r\n        this.isPlaying = false;\r\n    }\r\n\r\n    public resume() {\r\n        this.isPlaying = true;\r\n    }\r\n\r\n    public clean() {\r\n        this.stop();\r\n        this.index = 0;\r\n        this.texts = [];\r\n        this.endCallback = null;\r\n    }\r\n}\r\n","/**\r\n * 数学工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20201019\r\n * @see MathUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/MathUtil.ts\r\n */\r\nexport default class MathUtil {\r\n\r\n    /**\r\n    * 获取一个 min 到 max 范围内的随机整数\r\n    * @param min 最小值\r\n    * @param max 最大值\r\n    */\r\n    public static getRandomInt(min: number = 0, max: number = 1): number {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    /**\r\n     * 获取一个伪随机整数\r\n     * @param seed 随机种子\r\n     * @param key key\r\n     */\r\n    public static getPseudoRandomInt(seed: number, key: number): number {\r\n        return Math.ceil((((seed * 9301 + 49297) % 233280) / 233280) * key);\r\n    }\r\n\r\n    /**\r\n     * 获取两点间的角度\r\n     * @param p1 点1\r\n     * @param p2 点2\r\n     */\r\n    public static getAngle(p1: cc.Vec2, p2: cc.Vec2): number {\r\n        return Math.atan((p2.y - p1.y) / (p2.x - p1.x));\r\n    }\r\n\r\n    /**\r\n     * 获取两点间的距离\r\n     * @param p1 点1\r\n     * @param p2 点2\r\n     */\r\n    public static getDistance(p1: cc.Vec2, p2: cc.Vec2): number {\r\n        return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\r\n    }\r\n\r\n    /**\r\n     * 将角度转为弧度\r\n     * @param angle 角度\r\n     */\r\n    public static angleToRadian(angle: number): number {\r\n        return angle * Math.PI / 180;\r\n    }\r\n\r\n    /**\r\n     * 浮点数加法运算（避免浮点数加法精度问题）\r\n     * @param a 数\r\n     * @param b 数\r\n     */\r\n    public static addSafely(a: number, b: number): number {\r\n        const aDigits = (a.toString().split('.')[1] || '').length;\r\n        const bDigits = (b.toString().split('.')[1] || '').length;\r\n        const multiplier = Math.pow(10, Math.max(aDigits, bDigits));\r\n        return (a * multiplier + b * multiplier) / multiplier;\r\n    }\r\n\r\n}\r\n","import EditorAsset from \"../../misc/EditorAsset\";\r\n\r\nconst { ccclass, property, requireComponent, executeInEditMode, disallowMultiple } = cc._decorator;\r\n\r\n/**\r\n * 马赛克 Shader 组件，该组件需要对应的 Effect 才能正常使用！\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20211205\r\n * @see Mosaic.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/Mosaic.ts\r\n * @see eazax-mosaic.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-mosaic.effect\r\n */\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\n@executeInEditMode\r\n@disallowMultiple\r\nexport default class Mosaic extends cc.Component {\r\n\r\n    @property()\r\n    protected _effect: cc.EffectAsset = null;\r\n    @property({ type: cc.EffectAsset, tooltip: CC_DEV && 'Effect 资源' })\r\n    public get effect() {\r\n        return this._effect;\r\n    }\r\n    public set effect(value: cc.EffectAsset) {\r\n        this._effect = value;\r\n        this.init();\r\n    }\r\n\r\n    @property()\r\n    protected _size: cc.Size = new cc.Size(20, 20);\r\n    @property({ tooltip: CC_DEV && '马赛克尺寸' })\r\n    public get size() {\r\n        return this._size;\r\n    }\r\n    public set size(value) {\r\n        this._size = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 输出精灵\r\n     */\r\n    protected sprite: cc.Sprite = null;\r\n\r\n    /**\r\n     * 材质\r\n     */\r\n    protected material: cc.Material = null;\r\n\r\n    /**\r\n     * 生命周期：组件启用\r\n     */\r\n    protected onEnable() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 编辑器回调：重置\r\n     */\r\n    protected resetInEditor() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    protected async init() {\r\n        /**\r\n         * 编辑器环境下自动绑定 Effect 资源\r\n         * 依赖于 EditorAsset 模块，没有该模块请将此代码块以及顶部导入语句去除\r\n         * @see EditorAsset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/misc/EditorAsset.ts\r\n         */\r\n        if (CC_EDITOR && !this._effect) {\r\n            const path = 'eazax-ccc/resources/effects/eazax-mosaic.effect';\r\n            this._effect = await EditorAsset.load(path, 'effect');\r\n        }\r\n        if (!this._effect) {\r\n            cc.warn(`[${this['__proto__']['__classname__']}]`, '请手动指定组件的 Effect 资源！');\r\n            return;\r\n        }\r\n\r\n        // 使用自定义 Effect 需禁用纹理的 packable 属性（因为动态合图之后无法正确获取纹理 UV 坐标）\r\n        // 详情请看：https://docs.cocos.com/creator/manual/zh/asset-workflow/sprite.html#packable\r\n        this.sprite = this.node.getComponent(cc.Sprite);\r\n        if (this.sprite.spriteFrame) {\r\n            this.sprite.spriteFrame.getTexture().packable = false;\r\n        }\r\n        // 生成并应用材质\r\n        if (!this.material) {\r\n            this.material = cc.Material.create(this._effect);\r\n        }\r\n        this.sprite.setMaterial(0, this.material);\r\n        // 更新材质属性\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 更新材质属性\r\n     */\r\n    public updateProperties() {\r\n        if (!this.material) return\r\n        this.material.setProperty('resolution', this.resolution);\r\n        this.material.setProperty('tileSize', this.tileSize);\r\n    }\r\n\r\n    /**\r\n     * 设置马赛克尺寸\r\n     * @param width 宽\r\n     * @param height 高\r\n     */\r\n    public set(width: number, height?: number) {\r\n        this.size.width = width;\r\n        this.size.height = height ?? width;\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 缓动至目标尺寸\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @param duration 时长\r\n     */\r\n    public to(width: number, height: number, duration?: number) {\r\n        return new Promise<void>(res => {\r\n            if (duration == undefined) {\r\n                duration = height;\r\n                height = width;\r\n            }\r\n            cc.tween<Mosaic>(this)\r\n                .to(duration, { size: cc.size(width, height) })\r\n                .call(res)\r\n                .start();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 分辨率\r\n     */\r\n    public get resolution() {\r\n        return cc.v2(this.node.width, this.node.height);\r\n    }\r\n\r\n    /**\r\n     * 马赛克尺寸\r\n     */\r\n    public get tileSize() {\r\n        return cc.v2(this._size.width, this._size.height);\r\n    }\r\n\r\n}\r\n","/**\r\n * 节点工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20211208\r\n * @see NodeUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/NodeUtil.ts\r\n */\r\n export default class NodeUtil {\r\n\r\n    /**\r\n     * 获取节点在目标节点（容器）下的相对位置\r\n     * @param node 节点\r\n     * @param container 目标节点（容器）\r\n     */\r\n    public static getRelativePosition(node: cc.Node, container: cc.Node): cc.Vec2 {\r\n        const worldPos = (node.getParent() || node).convertToWorldSpaceAR(node.getPosition());\r\n        return container.convertToNodeSpaceAR(worldPos);\r\n    }\r\n\r\n    /**\r\n     * 坐标是否在目标节点范围内\r\n     * @param pos 坐标\r\n     * @param target 目标节点\r\n     */\r\n    public static isPosOnNodeRect(pos: cc.Vec2, target: cc.Node): boolean {\r\n        const rect = target.getBoundingBoxToWorld();\r\n        return rect.contains(pos);\r\n    }\r\n\r\n    /**\r\n     * 两个节点是否重叠\r\n     * @param node1 节点 1\r\n     * @param node2 节点 2\r\n     * @param contains 是否完全包含\r\n     */\r\n    public static areNodesOverlap(node1: cc.Node, node2: cc.Node, contains: boolean = false): boolean {\r\n        const rect1 = node1.getBoundingBoxToWorld(),\r\n            rect2 = node2.getBoundingBoxToWorld();\r\n        return contains ? rect1.containsRect(rect2) : rect1.intersects(rect2);\r\n    }\r\n\r\n    /**\r\n     * 获取节点本身在世界坐标系下的对齐轴向的包围盒（不包含子节点）\r\n     * @param node 节点\r\n     */\r\n    public static getNodeSelfBoundingBoxToWorld(node: cc.Node) {\r\n        node.parent['_updateWorldMatrix']();\r\n        const { width, height } = node.getContentSize(),\r\n            anchorPoint = node.getAnchorPoint(),\r\n            rect = cc.rect(\r\n                -anchorPoint.x * width,\r\n                -anchorPoint.y * height,\r\n                width,\r\n                height\r\n            );\r\n        node['_calculWorldMatrix']();\r\n        rect.transformMat4(rect, node['_worldMatrix']);\r\n        return rect;\r\n    }\r\n\r\n}\r\n","/**\r\n * 对象工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20211125\r\n * @see ObjectUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/ObjectUtil.ts\r\n */\r\n export default class ObjectUtil {\r\n\r\n    /**\r\n     * 判断指定的值是否为对象\r\n     * @param value 值\r\n     */\r\n    public static isObject(value: any): boolean {\r\n        return Object.prototype.toString.call(value) === '[object Object]';\r\n    }\r\n\r\n    /**\r\n     * 深拷贝\r\n     * @param target 目标\r\n     */\r\n    public static deepCopy(target: any): any {\r\n        if (target == null || typeof target !== 'object') {\r\n            return target;\r\n        }\r\n\r\n        if (target instanceof Array) {\r\n            const result = [];\r\n            for (let i = 0, length = target.length; i < length; i++) {\r\n                result[i] = ObjectUtil.deepCopy(target[i]);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        if (target instanceof Object) {\r\n            const result = {};\r\n            for (const key in target) {\r\n                if (target.hasOwnProperty(key)) {\r\n                    result[key] = ObjectUtil.deepCopy(target[key]);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        if (target instanceof Date) {\r\n            return (new Date()).setTime(target.getTime());\r\n        }\r\n\r\n        console.warn(`不支持的类型：${target}`);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 拷贝对象\r\n     * @param target 目标\r\n     */\r\n    public static copy(target: object): object {\r\n        return JSON.parse(JSON.stringify(target));\r\n    }\r\n\r\n}\r\n","const { ccclass, executionOrder, menu } = cc._decorator;\n\n@ccclass\n@executionOrder(-1)\n@menu('eazax/其他组件/PersistNode')\nexport default class PersistNode extends cc.Component {\n\n    /**\n     * 生命周期：加载\n     */\n    protected onLoad() {\n        this.node.setParent(cc.director.getScene());\n        cc.game.addPersistRootNode(this.node);\n    }\n\n}\n","const { ccclass, property } = cc._decorator;\n\n/**\n * 弹窗基类\n * @see PopupBase.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/popups/PopupBase.ts\n * @see PopupManager.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/PopupManager.ts\n * @version 20210409\n */\n@ccclass\nexport default class PopupBase<Options = any> extends cc.Component {\n\n    @property({ type: cc.Node, tooltip: CC_DEV && '背景遮罩' })\n    public background: cc.Node = null;\n\n    @property({ type: cc.Node, tooltip: CC_DEV && '弹窗主体' })\n    public main: cc.Node = null;\n\n    /** 展示/隐藏动画的时长 */\n    public animDuration: number = 0.3;\n\n    /** 用于拦截点击的节点 */\n    protected blocker: cc.Node = null;\n\n    /** 弹窗选项 */\n    protected options: Options = null;\n\n    /**\n     * 展示弹窗\n     * @param options 弹窗选项\n     * @param duration 动画时长\n     */\n    public show(options?: Options, duration: number = this.animDuration) {\n        return new Promise<void>(res => {\n            // 储存选项\n            this.options = options;\n            // 初始化节点\n            const background = this.background,\n                main = this.main;\n            this.node.active = true;\n            background.active = true;\n            background.opacity = 0;\n            main.active = true;\n            main.scale = 0.5;\n            main.opacity = 0;\n            // 初始化\n            this.init(this.options);\n            // 更新样式\n            this.updateDisplay(this.options);\n            // 播放背景遮罩动画\n            cc.tween(background)\n                .to(duration * 0.8, { opacity: 200 })\n                .start();\n            // 播放弹窗主体动画\n            cc.tween(main)\n                .to(duration, { scale: 1, opacity: 255 }, { easing: 'backOut' })\n                .call(() => {\n                    // 弹窗已完全展示\n                    this.onShow && this.onShow();\n                    // Done\n                    res();\n                })\n                .start();\n        });\n    }\n\n    /**\n     * 隐藏弹窗\n     * @param suspended 是否被挂起\n     * @param duration 动画时长\n     */\n    public hide(suspended: boolean = false, duration: number = this.animDuration) {\n        return new Promise<void>(res => {\n            const node = this.node;\n            // 动画时长不为 0 时拦截点击事件（避免误操作）\n            if (duration !== 0) {\n                let blocker = this.blocker;\n                if (!blocker) {\n                    blocker = this.blocker = new cc.Node('blocker');\n                    blocker.addComponent(cc.BlockInputEvents);\n                    blocker.setParent(node);\n                    blocker.setContentSize(node.getContentSize());\n                }\n                blocker.active = true;\n            }\n            // 播放背景遮罩动画\n            cc.tween(this.background)\n                .delay(duration * 0.2)\n                .to(duration * 0.8, { opacity: 0 })\n                .start();\n            // 播放弹窗主体动画\n            cc.tween(this.main)\n                .to(duration, { scale: 0.5, opacity: 0 }, { easing: 'backIn' })\n                .call(() => {\n                    // 关闭拦截\n                    this.blocker && (this.blocker.active = false);\n                    // 关闭节点\n                    node.active = false;\n                    // 弹窗已完全隐藏（动画完毕）\n                    this.onHide && this.onHide(suspended);\n                    // Done\n                    res();\n                    // 弹窗完成回调\n                    this.finishCallback && this.finishCallback(suspended);\n                })\n                .start();\n        });\n    }\n\n    /**\n     * 初始化（派生类请重写此函数以实现自定义逻辑）\n     */\n    protected init(options: Options) { }\n\n    /**\n     * 更新样式（派生类请重写此函数以实现自定义样式）\n     * @param options 弹窗选项\n     */\n    protected updateDisplay(options: Options) { }\n\n    /**\n     * 弹窗已完全展示（派生类请重写此函数以实现自定义逻辑）\n     */\n    protected onShow() { }\n\n    /**\n     * 弹窗已完全隐藏（派生类请重写此函数以实现自定义逻辑）\n     * @param suspended 是否被挂起\n     */\n    protected onHide(suspended: boolean) { }\n\n    /**\n     * 弹窗流程结束回调（注意：该回调为 PopupManager 专用，重写 hide 函数时记得调用该回调）\n     */\n    protected finishCallback: (suspended: boolean) => void = null;\n\n    /**\n     * 设置弹窗完成回调（该回调为 PopupManager 专用）\n     * @param callback 回调\n     */\n    public setFinishCallback(callback: (suspended: boolean) => void) {\n        this.finishCallback = callback;\n    }\n\n}\n","import PopupBase from \"../components/popups/PopupBase\";\n\n/** 弹窗缓存模式 */\nenum CacheMode {\n    /** 一次性的（立即销毁节点，预制体资源随即释放） */\n    Once = 1,\n    /** 正常的（立即销毁节点，但是缓存预制体资源） */\n    Normal,\n    /** 频繁的（只关闭节点，且缓存预制体资源） */\n    Frequent\n}\n\n/** 弹窗请求结果 */\nenum ShowResult {\n    /** 展示成功（已关闭） */\n    Done = 1,\n    /** 展示失败（加载失败） */\n    Failed,\n    /** 等待中（已加入等待队列） */\n    Waiting\n}\n\n/**\n * 弹窗管理器\n * @author 陈皮皮 (ifaswind)\n * @version 20210918\n * @see PopupManager.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/PopupManager.ts\n * @see PopupBase.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/popups/PopupBase.ts\n */\nexport default class PopupManager {\n\n    /** 预制体缓存 */\n    public static get prefabCache() { return this._prefabCache; }\n    private static _prefabCache: Map<string, cc.Prefab> = new Map<string, cc.Prefab>();\n\n    /** 节点缓存 */\n    public static get nodeCache() { return this._nodeCache; }\n    private static _nodeCache: Map<string, cc.Node> = new Map<string, cc.Node>();\n\n    /** 当前弹窗请求 */\n    public static get current() { return this._current; }\n    private static _current: PopupRequestType = null;\n\n    /** 等待队列 */\n    public static get queue() { return this._queue; }\n    private static _queue: PopupRequestType[] = [];\n\n    /** 被挂起的弹窗队列 */\n    public static get suspended() { return this._suspended; }\n    private static _suspended: PopupRequestType[] = [];\n\n    /** 锁定状态 */\n    private static locked: boolean = false;\n\n    /** 用于存放弹窗节点的容器节点（不设置则默认为当前 Canvas） */\n    public static container: cc.Node = null;\n\n    /** 连续展示弹窗的时间间隔（秒） */\n    public static interval: number = 0.05;\n\n    /** 弹窗缓存模式 */\n    public static get CacheMode() {\n        return CacheMode;\n    }\n\n    /** 弹窗请求结果类型 */\n    public static get ShowResult() {\n        return ShowResult;\n    }\n\n    /**\n     * 弹窗动态加载开始回调\n     * @example\n     * PopupManager.loadStartCallback = () => {\n     *     LoadingTip.show();\n     * };\n     */\n    public static loadStartCallback: () => void = null;\n\n    /**\n     * 弹窗动态加载结束回调\n     * @example\n     * PopupManager.loadFinishCallback = () => {\n     *     LoadingTip.hide();\n     * };\n     */\n    public static loadFinishCallback: () => void = null;\n\n    /**\n     * 展示弹窗，如果当前已有弹窗在展示中则加入等待队列\n     * @param path 弹窗预制体相对路径（如：prefabs/MyPopup）\n     * @param options 弹窗选项（将传递给弹窗的组件）\n     * @param params 弹窗展示参数\n     * @example\n     * const options = {\n     *     title: 'Hello',\n     *     content: 'This is a popup!'\n     * };\n     * const params = {\n     *     mode: PopupCacheMode.Normal\n     * };\n     * PopupManager.show('prefabs/MyPopup', options, params);\n     */\n    public static show<Options>(path: string, options?: Options, params?: PopupParamsType): Promise<ShowResult> {\n        return new Promise(async res => {\n            // 解析处理参数\n            params = this.parseParams(params);\n            // 当前已有弹窗在展示中则加入等待队列\n            if (this._current || this.locked) {\n                // 是否立即强制展示\n                if (params && params.immediately) {\n                    this.locked = false;\n                    // 挂起当前弹窗\n                    await this.suspend();\n                } else {\n                    // 将请求推入等待队列\n                    this.push(path, options, params);\n                    res(ShowResult.Waiting);\n                    return;\n                }\n            }\n            // 保存为当前弹窗，阻止新的弹窗请求\n            this._current = {\n                path,\n                options,\n                params\n            };\n            // 先在缓存中获取弹窗节点\n            let node = this.getNodeFromCache(path);\n            // 缓存中没有，动态加载预制体资源\n            if (!cc.isValid(node)) {\n                // 开始回调\n                this.loadStartCallback && this.loadStartCallback();\n                // 等待加载\n                const prefab = await this.load(path);\n                // 完成回调\n                this.loadFinishCallback && this.loadFinishCallback();\n                // 加载失败（一般是路径错误导致的）\n                if (!cc.isValid(prefab)) {\n                    cc.warn('[PopupManager]', '弹窗加载失败', path);\n                    this._current = null;\n                    res(ShowResult.Failed);\n                    return;\n                }\n                // 实例化节点\n                node = cc.instantiate(prefab);\n            }\n            // 获取继承自 PopupBase 的弹窗组件\n            const popup = node.getComponent(PopupBase);\n            if (!popup) {\n                cc.warn('[PopupManager]', '未找到弹窗组件', path);\n                this._current = null;\n                res(ShowResult.Failed);\n                return;\n            }\n            // 保存组件引用\n            this._current.popup = popup;\n            // 保存节点引用\n            this._current.node = node;\n            // 添加到场景中\n            node.setParent(this.container || cc.Canvas.instance.node);\n            // 显示在最上层\n            node.setSiblingIndex(cc.macro.MAX_ZINDEX);\n            // 设置完成回调\n            const finishCallback = async (suspended: boolean) => {\n                if (suspended) {\n                    return;\n                }\n                // 是否需要锁定\n                this.locked = (this._suspended.length > 0 || this._queue.length > 0);\n                // 回收\n                this.recycle(path, node, params.mode);\n                this._current = null;\n                res(ShowResult.Done);\n                // 延迟一会儿\n                await new Promise(_res => {\n                    cc.Canvas.instance.scheduleOnce(_res, this.interval);\n                });\n                // 下一个弹窗\n                this.next();\n            }\n            popup.setFinishCallback(finishCallback);\n            // 展示\n            popup.show(options);\n        });\n    }\n\n    /**\n     * 隐藏当前弹窗\n     */\n    public static hide() {\n        if (this._current.popup) {\n            this._current.popup.hide();\n        }\n    }\n\n    /**\n     * 从缓存中获取节点\n     * @param path 弹窗路径\n     */\n    private static getNodeFromCache(path: string): cc.Node {\n        // 从节点缓存中获取\n        const nodeCache = this._nodeCache;\n        if (nodeCache.has(path)) {\n            const node = nodeCache.get(path);\n            if (cc.isValid(node)) {\n                return node;\n            }\n            // 删除无效引用\n            nodeCache.delete(path);\n        }\n        // 从预制体缓存中获取\n        const prefabCache = this._prefabCache;\n        if (prefabCache.has(path)) {\n            const prefab = prefabCache.get(path);\n            if (cc.isValid(prefab)) {\n                // 增加引用计数\n                prefab.addRef();\n                // 实例化并返回\n                return cc.instantiate(prefab);\n            }\n            // 删除无效引用\n            prefabCache.delete(path);\n        }\n        // 无\n        return null;\n    }\n\n    /**\n     * 展示挂起或等待队列中的下一个弹窗\n     */\n    private static next() {\n        if (this._current || (this._suspended.length === 0 && this._queue.length === 0)) {\n            return;\n        }\n        // 取出一个请求\n        let request: PopupRequestType = null;\n        if (this._suspended.length > 0) {\n            // 挂起队列\n            request = this._suspended.shift();\n        } else {\n            // 等待队列\n            request = this._queue.shift();\n        }\n        // 解除锁定\n        this.locked = false;\n        // 已有实例\n        if (cc.isValid(request.popup)) {\n            // 设为当前弹窗\n            this._current = request;\n            // 直接展示\n            request.node.setParent(this.container);\n            request.popup.show(request.options);\n            return;\n        }\n        // 加载并展示\n        this.show(request.path, request.options, request.params);\n    }\n\n    /**\n     * 添加一个弹窗请求到等待队列中，如果当前没有展示中的弹窗则直接展示该弹窗。\n     * @param path 弹窗预制体相对路径（如：prefabs/MyPopup）\n     * @param options 弹窗选项\n     * @param params 弹窗展示参数\n     */\n    private static push<Options>(path: string, options?: Options, params?: PopupParamsType) {\n        // 直接展示\n        if (!this._current && !this.locked) {\n            this.show(path, options, params);\n            return;\n        }\n        // 加入队列\n        this._queue.push({ path, options, params });\n        // 按照优先级从小到大排序\n        this._queue.sort((a, b) => (a.params.priority - b.params.priority));\n    }\n\n    /**\n     * 挂起当前展示中的弹窗\n     */\n    private static async suspend() {\n        if (!this._current) {\n            return;\n        }\n        const request = this._current;\n        // 将当前弹窗推入挂起队列\n        this._suspended.push(request);\n        // 关闭当前弹窗（挂起）\n        await request.popup.hide(true);\n        // 置空当前\n        this._current = null;\n    }\n\n    /**\n     * 回收弹窗\n     * @param path 弹窗路径\n     * @param node 弹窗节点\n     * @param mode 缓存模式\n     */\n    private static recycle(path: string, node: cc.Node, mode: CacheMode) {\n        switch (mode) {\n            // 一次性\n            case CacheMode.Once: {\n                this._nodeCache.delete(path);\n                node.destroy();\n                // 释放\n                this.release(path);\n                break;\n            }\n            // 正常\n            case CacheMode.Normal: {\n                this._nodeCache.delete(path);\n                node.destroy();\n                break;\n            }\n            // 频繁\n            case CacheMode.Frequent: {\n                node.removeFromParent(false);\n                this._nodeCache.set(path, node);\n                break;\n            }\n        }\n    }\n\n    /**\n     * 加载并缓存弹窗预制体资源\n     * @param path 弹窗路径\n     */\n    public static load(path: string): Promise<cc.Prefab> {\n        return new Promise(res => {\n            const prefabMap = this._prefabCache;\n            // 先看下缓存里有没有，避免重复加载\n            if (prefabMap.has(path)) {\n                const prefab = prefabMap.get(path);\n                // 缓存是否有效\n                if (cc.isValid(prefab)) {\n                    res(prefab);\n                    return;\n                } else {\n                    // 删除无效引用\n                    prefabMap.delete(path);\n                }\n            }\n            // 动态加载\n            cc.resources.load(path, (error: Error, prefab: cc.Prefab) => {\n                if (error) {\n                    res(null);\n                    return;\n                }\n                // 缓存预制体\n                prefabMap.set(path, prefab);\n                // 返回\n                res(prefab);\n            });\n        });\n    }\n\n    /**\n     * 尝试释放弹窗资源（注意：弹窗内部动态加载的资源请自行释放）\n     * @param path 弹窗路径\n     */\n    public static release(path: string) {\n        // 移除节点\n        const nodeCache = this._nodeCache;\n        let node = nodeCache.get(path);\n        if (node) {\n            nodeCache.delete(path);\n            if (cc.isValid(node)) {\n                node.destroy();\n            }\n            node = null;\n        }\n        // 移除预制体\n        const prefabCache = this._prefabCache;\n        let prefab = prefabCache.get(path);\n        if (prefab) {\n            // 删除缓存\n            if (prefab.refCount <= 1) {\n                prefabCache.delete(path);\n            }\n            // 减少引用\n            prefab.decRef();\n            prefab = null;\n        }\n    }\n\n    /**\n     * 解析参数\n     * @param params 参数\n     */\n    private static parseParams(params: PopupParamsType) {\n        if (params == undefined) {\n            return new PopupParamsType();\n        }\n        // 是否为对象\n        if (Object.prototype.toString.call(params) !== '[object Object]') {\n            cc.warn('[PopupManager]', '弹窗参数无效，使用默认参数');\n            return new PopupParamsType();\n        }\n        // 缓存模式\n        if (params.mode == undefined) {\n            params.mode = CacheMode.Normal;\n        }\n        // 优先级\n        if (params.priority == undefined) {\n            params.priority = 0;\n        }\n        // 立刻展示\n        if (params.immediately == undefined) {\n            params.immediately = false;\n        }\n        return params;\n    }\n\n}\n\n/** 弹窗展示参数 */\nclass PopupParamsType {\n    /** 缓存模式 */\n    mode?: CacheMode = CacheMode.Normal;\n    /** 优先级（优先级大的优先展示） */\n    priority?: number = 0;\n    /** 立刻展示（将会挂起当前展示中的弹窗） */\n    immediately?: boolean = false;\n}\n\n/** 弹窗展示请求 */\nclass PopupRequestType {\n    /** 弹窗预制体相对路径 */\n    path: string;\n    /** 弹窗选项 */\n    options: any;\n    /** 缓存模式 */\n    params: PopupParamsType;\n    /** 弹窗组件 */\n    popup?: PopupBase;\n    /** 弹窗节点 */\n    node?: cc.Node;\n}\n","const { ccclass, property, executionOrder, help, menu } = cc._decorator;\n\n/**\n * 后期处理\n * @author 陈皮皮 (ifaswind)\n * @version 20211224\n * @see PostProcessing.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/PostProcessing.ts\n */\n@ccclass\n@executionOrder(-1)\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/PostProcessing.ts')\n@menu('eazax/效果组件/PostProcessing')\nexport default class PostProcessing extends cc.Component {\n\n    @property({ type: cc.Camera, tooltip: CC_DEV && '输入摄像机' })\n    protected inputCamera: cc.Camera = null;\n\n    @property({ type: cc.Sprite, tooltip: CC_DEV && '输出精灵' })\n    protected outputSprite: cc.Sprite = null;\n\n    /**\n     * 输出纹理\n     */\n    protected renderTexture: cc.RenderTexture = null;\n\n    /**\n     * 生命周期：加载\n     */\n    protected onLoad() {\n        this.init();\n        this.registerEvent();\n    }\n\n    /**\n     * 生命周期：销毁\n     */\n    protected onDestroy() {\n        this.unregisterEvent();\n        this.release();\n    }\n\n    /**\n     * 注册事件\n     */\n    protected registerEvent() {\n        cc.Canvas.instance.node.on(cc.Node.EventType.SIZE_CHANGED, this.onCanvasSizeChanged, this);\n    }\n\n    /**\n     * 反注册事件\n     */\n    protected unregisterEvent() {\n        cc.Canvas.instance.node.off(cc.Node.EventType.SIZE_CHANGED, this.onCanvasSizeChanged, this);\n    }\n\n    /**\n     * 初始化\n     */\n    protected init() {\n        // 创建并初始化 RenderTexture\n        const renderTexture = this.renderTexture = new cc.RenderTexture(),\n            screenSize = cc.view.getVisibleSizeInPixel();\n        renderTexture.initWithSize(screenSize.width, screenSize.height);\n\n        // 将摄像机的内容渲染到目标纹理上\n        this.inputCamera.targetTexture = renderTexture;\n\n        // 使用目标纹理生成精灵帧并设置到精灵上\n        this.outputSprite.spriteFrame = new cc.SpriteFrame(renderTexture);\n\n        // 设置 Y 轴翻转\n        // renderTexture.setFlipY(true);  // not working\n        this.outputSprite.node.scaleY = -Math.abs(this.outputSprite.node.scaleY);\n    }\n\n    /**\n     * 释放\n     */\n    protected release() {\n        this.renderTexture.destroy();\n    }\n\n    /**\n     * 画布尺寸变化回调\n     */\n    protected onCanvasSizeChanged() {\n        const screenSize = cc.view.getVisibleSizeInPixel();\n        this.renderTexture.updateSize(screenSize.width, screenSize.height);\n    }\n\n}\n","/**\r\n * Promise 工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210925\r\n * @see PromiseUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/PromiseUtil.ts\r\n */\r\nexport default class PromiseUtil {\r\n\r\n    /**\r\n     * 等待\r\n     * @param time 时长（秒）\r\n     * @example\r\n     * await PromiseUtil.sleep(1);\r\n     */\r\n    public static sleep(time: number): Promise<void> {\r\n        return new Promise(res => cc.Canvas.instance.scheduleOnce(res, time));\r\n    }\r\n\r\n}\r\n","const { ccclass, property, executeInEditMode, executionOrder, help, menu } = cc._decorator;\r\n\r\n/**\r\n * 雷达图组件（cc.Graphics）\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210521\r\n * @see RadarChart.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/chart/RadarChart.ts\r\n * @see Example https://ifaswind.gitee.io/eazax-cases/?case=radarChart\r\n */\r\n@ccclass\r\n@executeInEditMode\r\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/chart/RadarChart.ts')\r\n@menu('eazax/图表组件/RadarChart')\r\nexport default class RadarChart extends cc.Component {\r\n\r\n    @property({ type: cc.Node, tooltip: CC_DEV && '绘制节点（不指定则默认为当前节点）' })\r\n    protected target: cc.Node = null;\r\n\r\n    @property()\r\n    protected _axisLength: number = 200;\r\n    @property({ tooltip: CC_DEV && '轴线长度' })\r\n    public get axisLength() {\r\n        return this._axisLength;\r\n    }\r\n    public set axisLength(value: number) {\r\n        this._axisLength = value;\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _axes: number = 6;\r\n    @property({ tooltip: CC_DEV && '轴线数量（至少 3 条）' })\r\n    public get axes() {\r\n        return this._axes;\r\n    }\r\n    public set axes(value: number) {\r\n        this._axes = Math.floor(value >= 3 ? value : 3);\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _axisScales: number = 3;\r\n    @property({ tooltip: CC_DEV && '轴线上的刻度数（至少 1 个）' })\r\n    public get axisScales() {\r\n        return this._axisScales;\r\n    }\r\n    public set axisScales(value: number) {\r\n        this._axisScales = Math.floor(value >= 1 ? value : 1);\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _drawAxes: boolean = true;\r\n    @property({ tooltip: CC_DEV && '是否绘制轴线' })\r\n    public get drawAxes() {\r\n        return this._drawAxes;\r\n    }\r\n    public set drawAxes(value: boolean) {\r\n        this._drawAxes = value;\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _gridLineWidth: number = 4;\r\n    @property({ tooltip: CC_DEV && '轴线和外网格线的宽度' })\r\n    public get gridLineWidth() {\r\n        return this._gridLineWidth;\r\n    }\r\n    public set gridLineWidth(value: number) {\r\n        this._gridLineWidth = value;\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _innerGridLineWidth: number = 4;\r\n    @property({ tooltip: CC_DEV && '内网格线宽度' })\r\n    public get innerGridLineWidth() {\r\n        return this._innerGridLineWidth;\r\n    }\r\n    public set innerGridLineWidth(value: number) {\r\n        this._innerGridLineWidth = value;\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _gridLineColor: cc.Color = cc.Color.GRAY;\r\n    @property({ tooltip: CC_DEV && '轴线和网格线的颜色' })\r\n    public get gridLineColor() {\r\n        return this._gridLineColor;\r\n    }\r\n    public set gridLineColor(value: cc.Color) {\r\n        this._gridLineColor = value;\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _gridFillColor: cc.Color = cc.color(100, 100, 100, 100);\r\n    @property({ tooltip: CC_DEV && '网格内部填充的颜色' })\r\n    public get gridFillColor() {\r\n        return this._gridFillColor;\r\n    }\r\n    public set gridFillColor(value: cc.Color) {\r\n        this._gridFillColor = value;\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _dataValuesStrings: string[] = ['0.8,0.5,0.6,0.5,0.8,0.6', '0.5,0.9,0.5,0.8,0.5,0.9'];\r\n    @property({ type: [cc.String], tooltip: CC_DEV && '数据数值（字符串形式，使用英文逗号分隔）' })\r\n    public get dataValuesStrings() {\r\n        return this._dataValuesStrings;\r\n    }\r\n    public set dataValuesStrings(value: string[]) {\r\n        this._dataValuesStrings = value;\r\n        this.drawWithProperties();\r\n    }\r\n\r\n    @property()\r\n    protected _dataLineWidths: number[] = [5, 5];\r\n    @property({ type: [cc.Integer], tooltip: CC_DEV && '数据线宽度' })\r\n    public get dataLineWidths() {\r\n        return this._dataLineWidths;\r\n    }\r\n    public set dataLineWidths(value: number[]) {\r\n        this._dataLineWidths = value;\r\n        this.drawWithProperties();\r\n    }\r\n\r\n    @property()\r\n    protected _dataLineColors: cc.Color[] = [cc.Color.BLUE, cc.Color.RED];\r\n    @property({ type: [cc.Color], tooltip: CC_DEV && '数据线颜色' })\r\n    public get dataLineColors() {\r\n        return this._dataLineColors;\r\n    }\r\n    public set dataLineColors(value: cc.Color[]) {\r\n        this._dataLineColors = value;\r\n        this.drawWithProperties();\r\n    }\r\n\r\n    @property()\r\n    protected _dataFillColors: cc.Color[] = [cc.color(120, 120, 180, 100), cc.color(180, 120, 120, 100)];\r\n    @property({ type: [cc.Color], tooltip: CC_DEV && '数据填充颜色' })\r\n    public get dataFillColors() {\r\n        return this._dataFillColors;\r\n    }\r\n    public set dataFillColors(value: cc.Color[]) {\r\n        this._dataFillColors = value;\r\n        this.drawWithProperties();\r\n    }\r\n\r\n    @property()\r\n    protected _dataJoinColors: cc.Color[] = [];\r\n    @property({ type: [cc.Color], tooltip: CC_DEV && '数据节点颜色' })\r\n    public get dataJoinColors() {\r\n        return this._dataJoinColors;\r\n    }\r\n    public set dataJoinColors(value: cc.Color[]) {\r\n        this._dataJoinColors = value;\r\n        this.drawWithProperties();\r\n    }\r\n\r\n    @property()\r\n    protected _drawDataJoin: boolean = true;\r\n    @property({ tooltip: CC_DEV && '是否绘制数据节点' })\r\n    public get drawDataJoin() {\r\n        return this._drawDataJoin;\r\n    }\r\n    public set drawDataJoin(value: boolean) {\r\n        this._drawDataJoin = value;\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    /**\r\n     * 绘图组件\r\n     */\r\n    protected graphics: cc.Graphics = null;\r\n\r\n    /**\r\n     * 保持更新\r\n     */\r\n    protected keepUpdating: boolean = false;\r\n\r\n    /**\r\n     * 轴夹角\r\n     */\r\n    protected angles: number[] = null;\r\n\r\n    /**\r\n     * 当前数据\r\n     */\r\n    public get curDatas() {\r\n        return this._curDatas;\r\n    }\r\n    protected _curDatas: RadarChartData[] = [];\r\n\r\n    /**\r\n     * 当前缓动的 Promise Resolve\r\n     */\r\n    protected curTweenRes: Function = null;\r\n\r\n    /**\r\n     * 生命周期：加载\r\n     */\r\n    protected onLoad() {\r\n        this.init();\r\n        this.drawWithProperties();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：每帧更新\r\n     */\r\n    protected update() {\r\n        if (!this.keepUpdating || this._curDatas.length === 0) {\r\n            return;\r\n        }\r\n        this.draw(this._curDatas);\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    protected init() {\r\n        // 获取组件\r\n        if (!this.target) {\r\n            this.target = this.node;\r\n        }\r\n        this.graphics = this.target.getComponent(cc.Graphics) || this.target.addComponent(cc.Graphics);\r\n        // 设置端点和拐角样式\r\n        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n        this.graphics.lineCap = cc.Graphics.LineCap.ROUND;\r\n    }\r\n\r\n    /**\r\n     * 使用当前属性绘制\r\n     */\r\n    protected drawWithProperties() {\r\n        // 获取属性面板配置\r\n        const datas: RadarChartData[] = [],\r\n            valueStrings = this.dataValuesStrings,\r\n            lineWidths = this._dataLineWidths,\r\n            lineColors = this._dataLineColors,\r\n            fillColors = this._dataFillColors,\r\n            joinColors = this._dataJoinColors;\r\n        for (let i = 0; i < valueStrings.length; i++) {\r\n            datas.push({\r\n                values: this.processValuesString(valueStrings[i]),\r\n                lineWidth: lineWidths[i] || defaultOptions.lineWidth,\r\n                lineColor: lineColors[i] || defaultOptions.lineColor,\r\n                fillColor: fillColors[i] || defaultOptions.fillColor,\r\n                joinColor: joinColors[i] || defaultOptions.joinColor\r\n            });\r\n        }\r\n        // 绘制\r\n        this.draw(datas);\r\n    }\r\n\r\n    /**\r\n     * 将数值字符串转为数值数组\r\n     * @param valuesString 数值字符串\r\n     */\r\n    protected processValuesString(valuesString: string): number[] {\r\n        const strings = valuesString.split(','),\r\n            values: number[] = [];\r\n        for (let j = 0; j < strings.length; j++) {\r\n            const value = parseFloat(strings[j]);\r\n            values.push(isNaN(value) ? 0 : value);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    /**\r\n     * 画基本线框\r\n     */\r\n    protected drawBase() {\r\n        // 填充染料\r\n        const graphics = this.graphics;\r\n        graphics.lineWidth = this._gridLineWidth;\r\n        graphics.strokeColor = this._gridLineColor;\r\n        graphics.fillColor = this._gridFillColor;\r\n\r\n        // 计算轴线角度\r\n        const angles = this.angles = [],\r\n            // 轴间夹角\r\n            iAngle = 360 / this.axes;\r\n        for (let i = 0; i < this.axes; i++) {\r\n            angles.push(iAngle * i);\r\n        }\r\n\r\n        // 计算刻度坐标\r\n        const scalesSet: cc.Vec2[][] = [],\r\n            axisLength = this._axisLength,\r\n            axisScales = this._axisScales,\r\n            iLength = axisLength / axisScales;\r\n        for (let i = 0; i < axisScales; i++) {\r\n            const scales = [];\r\n            // 计算刻度在轴上的位置\r\n            const length = axisLength - (iLength * i);\r\n            for (let j = 0, l = this.angles.length; j < l; j++) {\r\n                // 将角度转为弧度\r\n                const radian = (Math.PI / 180) * this.angles[j];\r\n                // 根据三角公式计算刻度相对于中心点（0, 0）的坐标\r\n                scales.push(cc.v2(length * Math.cos(radian), length * Math.sin(radian)));\r\n            }\r\n            scalesSet.push(scales);\r\n        }\r\n\r\n        // 创建轴线\r\n        const out = scalesSet[0];\r\n        if (this._drawAxes) {\r\n            for (let i = 0; i < out.length; i++) {\r\n                graphics.moveTo(0, 0);\r\n                graphics.lineTo(out[i].x, out[i].y);\r\n            }\r\n        }\r\n\r\n        // 创建外网格线\r\n        graphics.moveTo(out[0].x, out[0].y);\r\n        for (let i = 1; i < out.length; i++) {\r\n            graphics.lineTo(out[i].x, out[i].y);\r\n        }\r\n        // 闭合当前线条（外网格线）\r\n        graphics.close();\r\n\r\n        // 填充线条包围的空白区域\r\n        graphics.fill();\r\n        // 绘制已创建的线条（轴线和外网格线）\r\n        graphics.stroke();\r\n\r\n        // 画内网格线\r\n        if (scalesSet.length > 1) {\r\n            graphics.lineWidth = this._innerGridLineWidth;\r\n            // 创建内网格线\r\n            for (let i = 1; i < scalesSet.length; i++) {\r\n                const set = scalesSet[i];\r\n                graphics.moveTo(set[0].x, set[0].y);\r\n                for (let j = 1; j < set.length; j++) {\r\n                    graphics.lineTo(set[j].x, set[j].y);\r\n                }\r\n                // 闭合当前线条（内网格线）\r\n                graphics.close();\r\n            }\r\n            // 绘制已创建的线条（内网格线）\r\n            graphics.stroke();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 绘制数据\r\n     * @param data 数据\r\n     */\r\n    public draw(data: RadarChartData | RadarChartData[]) {\r\n        // 擦除旧图像\r\n        const graphics = this.graphics;\r\n        graphics.clear();\r\n\r\n        // 画轴线和网格线\r\n        this.drawBase();\r\n\r\n        // 包装单条数据\r\n        const datas = Array.isArray(data) ? data : [data];\r\n        this._curDatas = datas;\r\n\r\n        // 数值不足需补 0\r\n        this.resizeCurDatasValues(0);\r\n\r\n        // 开始绘制数据\r\n        const axes = this.axes,\r\n            axisLength = this.axisLength,\r\n            angles = this.angles;\r\n        for (let i = 0; i < datas.length; i++) {\r\n            const data = datas[i];\r\n            // 装填染料\r\n            graphics.strokeColor = data.lineColor || defaultOptions.lineColor;\r\n            graphics.fillColor = data.fillColor || defaultOptions.fillColor;\r\n            graphics.lineWidth = data.lineWidth || defaultOptions.lineWidth;\r\n\r\n            // 计算节点坐标\r\n            const coords = [];\r\n            for (let j = 0; j < axes; j++) {\r\n                const length = (data.values[j] > 1 ? 1 : data.values[j]) * axisLength,\r\n                    radian = (Math.PI / 180) * angles[j];\r\n                coords.push(cc.v2(length * Math.cos(radian), length * Math.sin(radian)));\r\n            }\r\n\r\n            // 创建线条\r\n            graphics.moveTo(coords[0].x, coords[0].y);\r\n            for (let j = 1; j < coords.length; j++) {\r\n                graphics.lineTo(coords[j].x, coords[j].y);\r\n            }\r\n            // 闭合线条\r\n            graphics.close();\r\n\r\n            // 填充包围区域\r\n            graphics.fill();\r\n            // 绘制线条\r\n            graphics.stroke();\r\n\r\n            // 绘制数据节点\r\n            if (this._drawDataJoin) {\r\n                for (let j = 0; j < coords.length; j++) {\r\n                    const coord = coords[j];\r\n                    // 大圆\r\n                    graphics.strokeColor = data.lineColor || defaultOptions.lineColor;\r\n                    graphics.circle(coord.x, coord.y, 2);\r\n                    graphics.stroke();\r\n                    // 小圆\r\n                    graphics.strokeColor = data.joinColor || defaultOptions.joinColor;\r\n                    graphics.circle(coord.x, coord.y, .65);\r\n                    graphics.stroke();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 缓动绘制\r\n     * @param data 目标数据\r\n     * @param duration 动画时长\r\n     */\r\n    public to(data: RadarChartData | RadarChartData[], duration: number): Promise<void> {\r\n        return new Promise(res => {\r\n            // 处理上一个 Promise\r\n            this.unscheduleAllCallbacks();\r\n            this.curTweenRes && this.curTweenRes();\r\n            this.curTweenRes = res;\r\n\r\n            // 包装单条数据\r\n            const datas = Array.isArray(data) ? data : [data];\r\n\r\n            // 打开每帧更新\r\n            this.keepUpdating = true;\r\n\r\n            // 动起来！\r\n            for (let i = 0; i < datas.length; i++) {\r\n                const curData = this._curDatas[i];\r\n                if (!curData) {\r\n                    continue;\r\n                }\r\n                // 数值动起来！\r\n                const data = datas[i];\r\n                for (let j = 0; j < curData.values.length; j++) {\r\n                    cc.tween(curData.values)\r\n                        .to(duration, { [j]: (data.values[j] > 1) ? 1 : data.values[j] })\r\n                        .start();\r\n                }\r\n                // 样式动起来！\r\n                cc.tween(curData)\r\n                    .to(duration, {\r\n                        lineWidth: data.lineWidth || curData.lineWidth,\r\n                        lineColor: data.lineColor || curData.lineColor,\r\n                        fillColor: data.fillColor || curData.fillColor,\r\n                        joinColor: data.joinColor || curData.joinColor\r\n                    })\r\n                    .start();\r\n            }\r\n\r\n            this.scheduleOnce(() => {\r\n                // 关闭每帧更新\r\n                this.keepUpdating = false;\r\n                // resolve Promise\r\n                this.curTweenRes();\r\n                this.curTweenRes = null;\r\n            }, duration);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 检查并调整数据中的数值数量\r\n     * @param fill 填充数值\r\n     */\r\n    protected resizeCurDatasValues(fill: number = 0) {\r\n        const curDatas = this._curDatas;\r\n        for (let i = 0; i < curDatas.length; i++) {\r\n            const curData = curDatas[i];\r\n            // 数值数量少于轴数时才进行调整\r\n            if (curData.values.length < this._axes) {\r\n                const diff = this._axes - curData.values.length;\r\n                for (let j = 0; j < diff; j++) {\r\n                    curData.values.push(fill);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * 雷达图数据\r\n */\r\nexport interface RadarChartData {\r\n    /** 数值 */\r\n    values: number[];\r\n    /** 线的宽度 */\r\n    lineWidth?: number;\r\n    /** 线的颜色 */\r\n    lineColor?: cc.Color;\r\n    /** 填充的颜色 */\r\n    fillColor?: cc.Color;\r\n    /** 节点的颜色 */\r\n    joinColor?: cc.Color;\r\n}\r\n\r\n/**\r\n * 不指定时使用的样式配置\r\n */\r\nconst defaultOptions = {\r\n    lineWidth: 5,\r\n    lineColor: cc.Color.BLUE,\r\n    fillColor: cc.color(120, 120, 180, 100),\r\n    joinColor: cc.Color.WHITE,\r\n};\r\n","import EditorAsset from \"../../misc/EditorAsset\";\r\n\r\nconst { ccclass, property, requireComponent, executeInEditMode, disallowMultiple } = cc._decorator;\r\n\r\n/**\r\n * 径向模糊 Shader 组件（该组件需要对应的 Effect 文件才能正常使用）\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20211205\r\n * @see RadialBlur.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/RadialBlur.ts\r\n * @see eazax-radial-blur.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-radial-blur.effect\r\n */\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\n@executeInEditMode\r\n@disallowMultiple\r\nexport default class RadialBlur extends cc.Component {\r\n\r\n    @property\r\n    protected _effect: cc.EffectAsset = null;\r\n    @property({ type: cc.EffectAsset, tooltip: CC_DEV && 'Effect 资源', readonly: true })\r\n    public get effect() {\r\n        return this._effect;\r\n    }\r\n    public set effect(value) {\r\n        this._effect = value;\r\n        this.init();\r\n    }\r\n\r\n    @property\r\n    protected _center: cc.Vec2 = new cc.Vec2(0.5, 0.5);\r\n    @property({ tooltip: CC_DEV && '模糊中心点' })\r\n    public get center() {\r\n        return this._center;\r\n    }\r\n    public set center(value) {\r\n        this._center = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    @property\r\n    protected _strength: number = 0.5;\r\n    @property({ tooltip: CC_DEV && '模糊强度' })\r\n    public get strength() {\r\n        return this._strength;\r\n    }\r\n    public set strength(value) {\r\n        this._strength = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 精灵\r\n     */\r\n    protected sprite: cc.Sprite = null;\r\n\r\n    /**\r\n     * 材质\r\n     */\r\n    protected material: cc.Material = null;\r\n\r\n    /**\r\n     * 声明周期：节点加载\r\n     */\r\n    protected onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 编辑器回调：重置\r\n     */\r\n    protected resetInEditor() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    protected async init() {\r\n        /**\r\n         * 编辑器环境下自动绑定 Effect 资源\r\n         * 依赖于 EditorAsset 模块，没有该模块请将此代码块以及顶部导入语句去除\r\n         * @see EditorAsset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/misc/EditorAsset.ts\r\n         */\r\n        if (CC_EDITOR && !this._effect) {\r\n            const path = 'eazax-ccc/resources/effects/eazax-radial-blur.effect';\r\n            this._effect = await EditorAsset.load(path, 'effect');\r\n        }\r\n        if (!this._effect) {\r\n            cc.warn(`[${this['__proto__']['__classname__']}]`, '请手动指定组件的 Effect 资源！');\r\n            return;\r\n        }\r\n        // 使用自定义 Effect 需禁用纹理的 packable 属性（因为动态合图之后无法正确获取纹理 UV 坐标）\r\n        // 详情请看：https://docs.cocos.com/creator/manual/zh/asset-workflow/sprite.html#packable\r\n        this.sprite = this.node.getComponent(cc.Sprite);\r\n        if (this.sprite.spriteFrame) {\r\n            this.sprite.spriteFrame.getTexture().packable = false;\r\n        }\r\n        // 生成并应用材质\r\n        this.material = cc.Material.create(this._effect);\r\n        this.sprite.setMaterial(0, this.material);\r\n        // 更新材质属性\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 更新材质属性\r\n     */\r\n    protected updateProperties() {\r\n        this.material.setProperty('center', this._center);\r\n        this.material.setProperty('strength', this._strength);\r\n    }\r\n\r\n    /**\r\n     * 节点尺寸\r\n     */\r\n    protected get nodeSize() {\r\n        return cc.v2(this.node.width, this.node.height);\r\n    }\r\n\r\n}\r\n","/**\r\n * 正则工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20200928\r\n * @see RegexUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/RegexUtil.ts\r\n */\r\nexport default class RegexUtil {\r\n\r\n    /**\r\n     * 判断字符是否为双字节字符（如中文字符）\r\n     * @param string 原字符串\r\n     */\r\n    public static isDWORD(string: string): boolean {\r\n        return /[^\\x00-\\xff]/.test(string);\r\n    }\r\n\r\n}\r\n","const { ccclass, property, executeInEditMode } = cc._decorator;\n\n@ccclass\n@executeInEditMode\nexport default class RemoteAsset extends cc.Component {\n\n    /**\n     * 加载\n     * @param url 资源地址\n     */\n    public async load(url?: string): Promise<LoadResult> {\n        return { url, loaded: false, interrupted: false, component: this };\n    }\n\n    /**\n     * 设置资源\n     * @param asset 资源\n     */\n    public set(asset?: any) {\n\n    }\n\n}\n\ntype LoadResult = {\n    url: string;\n    loaded: boolean;\n    interrupted: boolean;\n    component: any;\n};\n","/**\r\n * 渲染工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20211208\r\n * @see RenderUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/RenderUtil.ts\r\n */\r\nexport default class RenderUtil {\r\n\r\n    /**\r\n     * 获取节点的 RenderTexture\r\n     * @param node 节点\r\n     * @param out 输出\r\n     */\r\n    public static getRenderTexture(node: cc.Node, out?: cc.RenderTexture) {\r\n        // 检查参数\r\n        if (!cc.isValid(node)) {\r\n            return null;\r\n        }\r\n        if (!out || !(out instanceof cc.RenderTexture)) {\r\n            out = new cc.RenderTexture();\r\n        }\r\n        // 获取宽高\r\n        const width = Math.floor(node.width),\r\n            height = Math.floor(node.height);\r\n        // 初始化 RenderTexture\r\n        out.initWithSize(width, height);\r\n        // 创建临时摄像机用于渲染目标节点\r\n        const cameraNode = new cc.Node();\r\n        cameraNode.parent = node;\r\n        const camera = cameraNode.addComponent(cc.Camera);\r\n        camera.clearFlags |= cc.Camera.ClearFlags.COLOR;\r\n        camera.backgroundColor = cc.color(0, 0, 0, 0);\r\n        camera.zoomRatio = cc.winSize.height / height;\r\n        // 将节点渲染到 RenderTexture 中\r\n        camera.targetTexture = out;\r\n        camera.render(node);\r\n        // 销毁临时对象\r\n        cameraNode.destroy();\r\n        // 返回 RenderTexture\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 使用指定材质来将 RenderTexture 渲染到另一个 RenderTexture\r\n     * @param srcRT 来源\r\n     * @param dstRT 目标\r\n     * @param material 材质\r\n     */\r\n    public static renderWithMaterial(srcRT: cc.RenderTexture, dstRT: cc.RenderTexture | cc.Material, material?: cc.Material) {\r\n        // 检查参数\r\n        if (dstRT instanceof cc.Material) {\r\n            material = dstRT;\r\n            dstRT = new cc.RenderTexture();\r\n        }\r\n        // 创建临时节点（用于渲染 RenderTexture）\r\n        const tempNode = new cc.Node();\r\n        tempNode.setParent(cc.Canvas.instance.node);\r\n        const tempSprite = tempNode.addComponent(cc.Sprite);\r\n        tempSprite.sizeMode = cc.Sprite.SizeMode.RAW;\r\n        tempSprite.trim = false;\r\n        tempSprite.spriteFrame = new cc.SpriteFrame(srcRT);\r\n        // 获取图像宽高\r\n        const width = srcRT.width,\r\n            height = srcRT.height;\r\n        // 初始化 RenderTexture\r\n        dstRT.initWithSize(width, height);\r\n        // 更新材质\r\n        if (material instanceof cc.Material) {\r\n            tempSprite.setMaterial(0, material);\r\n        }\r\n        // 创建临时摄像机（用于渲染临时节点）\r\n        const cameraNode = new cc.Node();\r\n        cameraNode.setParent(tempNode);\r\n        const camera = cameraNode.addComponent(cc.Camera);\r\n        camera.clearFlags |= cc.Camera.ClearFlags.COLOR;\r\n        camera.backgroundColor = cc.color(0, 0, 0, 0);\r\n        camera.zoomRatio = cc.winSize.height / height;\r\n        // 将临时节点渲染到 RenderTexture 中\r\n        camera.targetTexture = dstRT;\r\n        camera.render(tempNode);\r\n        // 销毁临时对象\r\n        cameraNode.destroy();\r\n        tempNode.destroy();\r\n        // 返回 RenderTexture\r\n        return dstRT;\r\n    }\r\n\r\n    /**\r\n     * 获取像素数据\r\n     * @param node 节点\r\n     * @param flipY 垂直翻转数据\r\n     */\r\n    public static getPixelsData(node: cc.Node, flipY: boolean = true) {\r\n        if (!cc.isValid(node)) {\r\n            return null;\r\n        }\r\n        // 节点宽高\r\n        const width = Math.floor(node.width),\r\n            height = Math.floor(node.height);\r\n        // 创建临时摄像机用于渲染目标节点\r\n        const cameraNode = new cc.Node();\r\n        cameraNode.parent = node;\r\n        const camera = cameraNode.addComponent(cc.Camera);\r\n        camera.clearFlags |= cc.Camera.ClearFlags.COLOR;\r\n        camera.backgroundColor = cc.color(0, 0, 0, 0);\r\n        camera.zoomRatio = cc.winSize.height / height;\r\n        // 将节点渲染到 RenderTexture 中\r\n        const renderTexture = new cc.RenderTexture();\r\n        renderTexture.initWithSize(width, height, cc.RenderTexture.DepthStencilFormat.RB_FMT_S8);\r\n        camera.targetTexture = renderTexture;\r\n        camera.render(node);\r\n        // 获取像素数据\r\n        const pixelsData = renderTexture.readPixels();\r\n        // 销毁临时对象并返回数据\r\n        renderTexture.destroy();\r\n        cameraNode.destroy();\r\n        // 垂直翻转数据\r\n        if (flipY) {\r\n            const length = pixelsData.length,\r\n                lineWidth = width * 4,\r\n                data = new Uint8Array(length);\r\n            for (let i = 0, j = length - lineWidth; i < length; i += lineWidth, j -= lineWidth) {\r\n                for (let k = 0; k < lineWidth; k++) {\r\n                    data[i + k] = pixelsData[j + k];\r\n                }\r\n            }\r\n            return data;\r\n        }\r\n        return pixelsData;\r\n    }\r\n\r\n    /**\r\n     * 垂直翻转图像数据\r\n     * @param array 数据\r\n     * @param width 行宽\r\n     */\r\n    public static flipY(array: Uint8Array, width: number) {\r\n        // const height = Math.floor(array.length / width),\r\n        //     halfHeight = Math.floor(height / 2),\r\n        //     maxRowIndex = height - 1;\r\n        // for (let i = 0; i < halfHeight; i++) {\r\n        //     const a = i * width,\r\n        //         b = (maxRowIndex - i) * width;\r\n        //     for (let k = 0; k < width; k++) {\r\n        //         [array[a + k], array[b + k]] = [array[b + k], array[a + k]];\r\n        //     }\r\n        //     // const block = array.slice(a, a + width);\r\n        //     // for (let k = 0; k < width; k++) {\r\n        //     //     array[a + k] = array[b + k];\r\n        //     //     array[b + k] = block[k]\r\n        //     // }\r\n        // }\r\n        // return array;\r\n        const length = array.length,\r\n            flipped = new Uint8Array(length);\r\n        for (let i = 0, j = length - width; i < length; i += width, j -= width) {\r\n            for (let k = 0; k < width; k++) {\r\n                flipped[i + k] = array[j + k];\r\n            }\r\n        }\r\n        return flipped;\r\n    }\r\n\r\n}\r\n","/** 轴 */\r\nexport enum Axis {\r\n    /** 正 X 轴 */\r\n    PositiveX,\r\n    /** 正 Y 轴 */\r\n    PositiveY,\r\n    /** 负 X 轴 */\r\n    NegativeX,\r\n    /** 负 Y 轴 */\r\n    NegativeY\r\n}\r\n\r\nconst { ccclass, property, help, menu } = cc._decorator;\r\n\r\n/**\r\n * 围绕旋转组件\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210611\r\n * @see RotateAround.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/RotateAround.ts\r\n */\r\n@ccclass\r\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/RotateAround.ts')\r\n@menu('eazax/其他组件/RotateAround')\r\nexport default class RotateAround extends cc.Component {\r\n\r\n    @property({ type: cc.Node, tooltip: CC_DEV && '围绕旋转的目标' })\r\n    public target: cc.Node = null;\r\n\r\n    @property({ tooltip: CC_DEV && '顺时针旋转' })\r\n    public clockwise: boolean = true;\r\n\r\n    @property({ tooltip: CC_DEV && '旋转一圈花费的时间' })\r\n    public timePerRound: number = 10;\r\n\r\n    @property({ tooltip: CC_DEV && '是否始终面向目标节点' })\r\n    public faceToTarget: boolean = false;\r\n\r\n    @property({ type: cc.Enum(Axis), visible() { return this.faceToTarget }, tooltip: CC_DEV && '面向目标节点的轴：\\n- PositiveX：正 X 轴\\n- PositiveY：正 Y 轴\\n- NegativeX：负 X 轴\\n- NegativeY：负 Y 轴' })\r\n    public faceAxis: Axis = Axis.NegativeY;\r\n\r\n    @property({ tooltip: CC_DEV && '自动开始旋转' })\r\n    public autoStart: boolean = false;\r\n\r\n    /**\r\n     * 相对于目标的角度\r\n     */\r\n    public angle: number = 0;\r\n\r\n    /**\r\n     * 半径\r\n     */\r\n    public radius: number = 0;\r\n\r\n    /** \r\n     * 是否正在旋转\r\n     */\r\n    protected isRotating: boolean = false;\r\n\r\n    /**\r\n     * 生命周期：开始\r\n     */\r\n    protected start() {\r\n        this.autoStart && this.run();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：每帧更新\r\n     */\r\n    protected update(dt: number) {\r\n        if (!this.isRotating || !this.target) {\r\n            return;\r\n        }\r\n        // 将角度转换为弧度\r\n        let angle = this.angle;\r\n        const radian = (Math.PI / 180) * angle;\r\n        // 更新节点的位置\r\n        const node = this.node,\r\n            target = this.target,\r\n            radius = this.radius;\r\n        node.x = target.x + radius * Math.cos(radian);\r\n        node.y = target.y + radius * Math.sin(radian);\r\n        // 更新节点的角度\r\n        if (this.faceToTarget) {\r\n            switch (this.faceAxis) {\r\n                case Axis.PositiveX:\r\n                    node.angle = angle + 180;\r\n                    break;\r\n                case Axis.PositiveY:\r\n                    node.angle = angle + 90;\r\n                    break;\r\n                case Axis.NegativeX:\r\n                    node.angle = angle;\r\n                    break;\r\n                case Axis.NegativeY:\r\n                    node.angle = angle - 90;\r\n                    break;\r\n            }\r\n        }\r\n        // 计算下一帧的角度\r\n        const anglePerFrame = dt * (360 / this.timePerRound);\r\n        angle = this.angle += (this.clockwise ? -anglePerFrame : anglePerFrame);\r\n        // 重置角度，避免数值过大\r\n        if (angle >= 720) {\r\n            this.angle %= 360;\r\n        } else if (angle <= -720) {\r\n            this.angle %= -360;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 开始围绕目标节点旋转\r\n     * @param target 目标节点\r\n     * @param clockwise 是否顺时针旋转\r\n     * @param timePerRound 旋转一圈的时间\r\n     * @param faceToTarget 是否始终面向目标节点\r\n     * @param faceAxis 面向目标节点的轴\r\n     */\r\n    public run(target?: cc.Node, clockwise?: boolean, timePerRound?: number, faceToTarget?: boolean, faceAxis?: Axis) {\r\n        if (target != undefined) this.target = target;\r\n        if (clockwise != undefined) this.clockwise = clockwise;\r\n        if (timePerRound != undefined) this.timePerRound = timePerRound;\r\n        if (faceToTarget != undefined) this.faceToTarget = faceToTarget;\r\n        if (faceAxis != undefined) this.faceAxis = faceAxis;\r\n        if (!this.target) {\r\n            cc.warn('[RotateAround]', 'No target!');\r\n            return;\r\n        }\r\n        // 计算初始角度和半径\r\n        const p1 = this.target.getPosition(),\r\n            p2 = this.node.getPosition();\r\n        this.angle = this.getAngle(p1, p2);\r\n        this.radius = this.getDistance(p1, p2);\r\n        // 开始\r\n        this.isRotating = true;\r\n    }\r\n\r\n    /**\r\n     * 停止旋转\r\n     */\r\n    public stop() {\r\n        this.isRotating = false;\r\n    }\r\n\r\n    /**\r\n     * 获取两点间的角度\r\n     * @param p1 点1\r\n     * @param p2 点2\r\n     * @see MathUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/MathUtil.ts\r\n     */\r\n    protected getAngle(p1: cc.Vec2, p2: cc.Vec2): number {\r\n        return Math.atan((p2.y - p1.y) / (p2.x - p1.x));\r\n    }\r\n\r\n    /**\r\n     * 获取两点间的距离\r\n     * @param p1 点1\r\n     * @param p2 点2\r\n     * @see MathUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/MathUtil.ts\r\n     */\r\n    protected getDistance(p1: cc.Vec2, p2: cc.Vec2): number {\r\n        return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\r\n    }\r\n\r\n}\r\n","const { ccclass, property, executionOrder, help, menu } = cc._decorator;\r\n\r\n/**\r\n * 用于在浏览器后台保持运行\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20220207\r\n * @see RunInBackground.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/RunInBackground.ts\r\n */\r\n@ccclass\r\n@executionOrder(-1)\r\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/RunInBackground.ts')\r\n@menu('eazax/其他组件/RunInBackground')\r\nexport default class RunInBackground extends cc.Component {\r\n\r\n    @property({ displayName: CC_DEV && '脚本地址', tooltip: CC_DEV && 'Worker 脚本地址' })\r\n    private url: string = '/worker.js';\r\n\r\n    /** Worker 实例 */\r\n    private worker: Worker = null;\r\n\r\n    /**\r\n     * 生命周期：加载\r\n     */\r\n    protected onLoad() {\r\n        this.init();\r\n        this.registerEvent();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：销毁\r\n     */\r\n    protected onDestroy() {\r\n        this.unregisterEvent();\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    protected registerEvent() {\r\n        this.onVisibilityChange = this.onVisibilityChange.bind(this);\r\n        document.addEventListener('visibilitychange', this.onVisibilityChange);\r\n    }\r\n\r\n    /**\r\n     * 反注册事件\r\n     */\r\n    protected unregisterEvent() {\r\n        document.removeEventListener('visibilitychange', this.onVisibilityChange);\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    private init() {\r\n        // 网页调试需要在预览模板目录下放一份 worker.js\r\n        // 如果使用编辑器自带的预览模板，还需要修改脚本地址\r\n        // if (CC_DEBUG) {\r\n        //     this.url = '/app/editor/static/preview-templates/worker.js';\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 页面切换回调\r\n     */\r\n    private onVisibilityChange() {\r\n        // 切换到后台\r\n        if (document.visibilityState === 'hidden') {\r\n            // 确保引擎处于运行状态\r\n            if (cc.game.isPaused()) {\r\n                cc.game.resume();\r\n            }\r\n            // 创建工作线程\r\n            this.worker = new Worker(this.url);\r\n            this.worker.onmessage = () => {\r\n                // 调用 Cocos 引擎主循环\r\n                cc.director['mainLoop']();\r\n            }\r\n        }\r\n        // 切换到前台\r\n        else if (document.visibilityState === 'visible') {\r\n            if (this.worker) {\r\n                this.worker.terminate();\r\n                this.worker = null;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/*\r\n\r\n以下为 worker.js 脚本内容：\r\n\r\nfunction call(){\r\n    postMessage(1);\r\n    setTimeout('call()', 1000 / 60);\r\n}\r\ncall();\r\n\r\n*/\r\n","/**\n * 场景导航类\n * @author 陈皮皮 (ifaswind)\n * @version 20210318\n * @see SceneNavigator.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/SceneNavigator.ts\n */\nexport default class SceneNavigator {\n\n    /** 首页场景名称 */\n    public static get home() { return this._home; }\n    private static _home: string = null;\n\n    /** 历史记录（栈） */\n    public static get history() { return this._history; }\n    private static _history: string[] = [];\n\n    /** 当前场景名称 */\n    public static get curScene() { return this._curScene; }\n    private static _curScene: string = null;\n\n    /** 上一个场景留下的参数（ onLaunched 之后可用） */\n    public static get param() { return this._param; }\n    private static _param: any = null;\n\n    /**\n     * 设置首页\n     * @param name 场景名\n     */\n    public static setHome(name: string) {\n        this._home = name;\n        this._history = [name];\n        this._curScene = name;\n    }\n\n    /**\n     * 返回首页\n     * @param param 数据\n     * @param coverHistory 覆盖历史记录\n     * @param onLaunched 场景加载完成回调\n     */\n    public static goHome(param?: any, coverHistory?: boolean, onLaunched?: Function) {\n        this._param = null;\n        const name = this._home;\n        if (this._curScene === name) {\n            return;\n        }\n        cc.director.loadScene(name, () => {\n            if (coverHistory) {\n                this._history.length = 0;\n            }\n            this._history.push(name);\n            this._curScene = name;\n            this._param = param || null;\n            onLaunched && onLaunched();\n        });\n    }\n\n    /**\n     * 前往场景\n     * @param name 场景名\n     * @param param 数据\n     * @param onLaunched 场景加载完成回调\n     */\n    public static go(name: string, param?: any, onLaunched?: Function) {\n        this._param = null;\n        cc.director.loadScene(name, () => {\n            this._history.push(name);\n            this._curScene = name;\n            this._param = param || null;\n            onLaunched && onLaunched();\n        });\n    }\n\n    /**\n     * 返回上一个场景\n     * @param param 数据\n     * @param onLaunched 场景加载完成回调\n     */\n    public static back(param?: any, onLaunched?: Function) {\n        if (this._history.length < 1) {\n            return;\n        }\n        this._param = null;\n        const history = this._history,\n            name = history[history.length - 2];\n        cc.director.loadScene(name, () => {\n            history.pop();\n            this._curScene = name;\n            this._param = param || null;\n            onLaunched && onLaunched();\n        });\n    }\n\n}\n","import EventManager from \"../core/EventManager\";\r\n\r\nconst { ccclass, executionOrder, help, menu } = cc._decorator;\r\n\r\n/**\r\n * 屏幕适配组件\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210504\r\n * @see ScreenAdapter.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/ScreenAdapter.ts\r\n */\r\n@ccclass\r\n@executionOrder(-1)\r\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/ScreenAdapter.ts')\r\n@menu('eazax/其他组件/ScreenAdapter')\r\nexport default class ScreenAdapter extends cc.Component {\r\n\r\n    /**\r\n     * 生命周期：加载\r\n     */\r\n    protected onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：组件启用\r\n     */\r\n    protected onEnable() {\r\n        this.adapt();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    protected init() {\r\n        // 设置游戏窗口变化的回调（仅 Web 平台有效）\r\n        cc.view.setResizeCallback(() => this.onResize());\r\n    }\r\n\r\n    /**\r\n     * 窗口变化回调\r\n     */\r\n    protected onResize() {\r\n        // 由于 setResizeCallback 只能设置一个回调\r\n        // 使用事件系统发送一个特定事件，让其他组件也可以监听到窗口变化\r\n        EventManager.emit('view-resize');\r\n        // 适配\r\n        this.adapt();\r\n    }\r\n\r\n    /**\r\n     * 适配\r\n     */\r\n    protected adapt() {\r\n        // 实际屏幕比例\r\n        const winSize = cc.winSize,\r\n            screenRatio = winSize.width / winSize.height;\r\n        // 设计比例\r\n        const designResolution = cc.Canvas.instance.designResolution,\r\n            designRatio = designResolution.width / designResolution.height;\r\n        // 判断实际屏幕宽高比\r\n        if (screenRatio <= 1) {\r\n            // 此时屏幕高度大于宽度\r\n            if (screenRatio <= designRatio) {\r\n                this.setFitWidth();\r\n            } else {\r\n                // 此时实际屏幕比例大于设计比例\r\n                // 为了保证纵向的游戏内容不受影响，应使用 fitHeight 模式\r\n                this.setFitHeight();\r\n            }\r\n        } else {\r\n            // 此时屏幕高度小于宽度\r\n            this.setFitHeight();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 适配高度模式\r\n     */\r\n    protected setFitHeight() {\r\n        const canvas = cc.Canvas.instance;\r\n        canvas.fitHeight = true;\r\n        canvas.fitWidth = false;\r\n    }\r\n\r\n    /**\r\n     * 适配宽度模式\r\n     */\r\n    protected setFitWidth() {\r\n        const canvas = cc.Canvas.instance;\r\n        canvas.fitHeight = false;\r\n        canvas.fitWidth = true;\r\n    }\r\n\r\n}\r\n","import EditorAsset from \"../../misc/EditorAsset\";\r\n\r\nconst { ccclass, property, requireComponent, executeInEditMode, disallowMultiple, executionOrder } = cc._decorator;\r\n\r\n/** 波浪方向 */\r\nexport enum SineWaveDirection {\r\n    /** 左 */\r\n    Left = 1,\r\n    /** 右 */\r\n    Right\r\n}\r\n\r\n/**\r\n * 正弦波浪 Shader 组件，该组件需要对应的 Effect 才能正常使用！\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210909\r\n * @see SineWave.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/SineWave.ts\r\n * @see eazax-sine-wave.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-sine-wave.effect\r\n */\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\n@executeInEditMode\r\n@disallowMultiple\r\n@executionOrder(-100)\r\nexport default class SineWave extends cc.Component {\r\n\r\n    @property private _effect: cc.EffectAsset = null;\r\n    @property({ type: cc.EffectAsset, tooltip: CC_DEV && 'Effect 资源', readonly: true })\r\n    public get effect() { return this._effect; }\r\n    public set effect(value: cc.EffectAsset) { this._effect = value; this.init(); }\r\n\r\n    @property private _amplitude: number = 0.05;\r\n    @property({ tooltip: CC_DEV && '振幅（节点高度比例）' })\r\n    public get amplitude() { return this._amplitude; }\r\n    public set amplitude(value: number) { this._amplitude = value; this.updateProperties(); }\r\n\r\n    @property private _angularVelocity: number = 10;\r\n    @property({ tooltip: CC_DEV && '角速度' })\r\n    public get angularVelocity() { return this._angularVelocity; }\r\n    public set angularVelocity(value: number) { this._angularVelocity = value; this.updateProperties(); }\r\n\r\n    @property private _frequency: number = 10;\r\n    @property({ tooltip: CC_DEV && '频率' })\r\n    public get frequency() { return this._frequency; }\r\n    public set frequency(value: number) { this._frequency = value; this.updateProperties(); }\r\n\r\n    @property private _height: number = 0.5;\r\n    @property({ tooltip: CC_DEV && '顶端高度（节点高度比例）' })\r\n    public get height() { return this._height; }\r\n    public set height(value: number) { this._height = value; this.updateProperties(); }\r\n\r\n    @property private _direction: SineWaveDirection = SineWaveDirection.Left;\r\n    @property({ type: cc.Enum(SineWaveDirection), tooltip: CC_DEV && '波浪方向' })\r\n    public get direction() { return this._direction; }\r\n    public set direction(value: SineWaveDirection) { this._direction = value; this.updateProperties(); }\r\n\r\n    private sprite: cc.Sprite = null;\r\n\r\n    private material: cc.Material = null;\r\n\r\n    protected onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    protected resetInEditor() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    public async init() {\r\n        /**\r\n         * 编辑器环境下自动绑定 Effect 资源\r\n         * 依赖于 EditorAsset 模块，没有该模块请将此代码块以及顶部导入语句去除\r\n         * @see EditorAsset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/misc/EditorAsset.ts\r\n         */\r\n        if (CC_EDITOR && !this._effect) {\r\n            await new Promise<void>(res => {\r\n                const path = 'eazax-ccc/resources/effects/eazax-sine-wave.effect';\r\n                EditorAsset.load(path, 'effect', (err: Error, result: cc.EffectAsset) => {\r\n                    if (err) cc.warn(`[${this['__proto__']['__classname__']}]`, '请手动指定组件的 Effect 资源！');\r\n                    else this._effect = result;\r\n                    res();\r\n                });\r\n            });\r\n        }\r\n        if (!this._effect) return;\r\n\r\n        // 使用自定义 Effect 需禁用纹理的 packable 属性（因为动态合图之后无法正确获取纹理 UV 坐标）\r\n        // 详情请看：https://docs.cocos.com/creator/manual/zh/asset-workflow/sprite.html#packable\r\n        this.sprite = this.node.getComponent(cc.Sprite);\r\n        if (this.sprite.spriteFrame) this.sprite.spriteFrame.getTexture().packable = false;\r\n        // 生成并应用材质\r\n        this.material = cc.Material.create(this._effect);\r\n        this.sprite.setMaterial(0, this.material);\r\n        // 更新材质属性\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 设置图像\r\n     * @param spriteFrame 精灵\r\n     */\r\n    public setSpriteFrame(spriteFrame: cc.SpriteFrame) {\r\n        this.sprite.spriteFrame = spriteFrame;\r\n        this.sprite.spriteFrame.getTexture().packable = false;\r\n        // 更新材质属性\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 更新材质属性\r\n     */\r\n    public updateProperties() {\r\n        if (!this.effect) return cc.warn('[SineWave]', '请指定 Effect 资源！');\r\n        this.material.setProperty('amplitude', this._amplitude);\r\n        this.material.setProperty('angularVelocity', this._angularVelocity);\r\n        this.material.setProperty('frequency', this._frequency);\r\n        this.material.setProperty('offset', ((1.0 - this._height) + this._amplitude));\r\n        this.material.setProperty('toLeft', (this._direction === SineWaveDirection.Left));\r\n    }\r\n\r\n}\r\n","/**\n * 本地储存工具\n * @author 陈皮皮 (ifaswind)\n * @version 20220122\n * @see StorageUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/StorageUtil.ts\n */\nexport default class StorageUtil {\n\n    /**\n     * 保存数据到本地\n     * @param key 键\n     * @param value 值\n     */\n    public static set(key: string, value: any) {\n        if (typeof value === 'object') {\n            cc.sys.localStorage.setItem(key, JSON.stringify(value));\n        } else {\n            cc.sys.localStorage.setItem(key, value);\n        }\n    }\n\n    /**\n     * 读取本地数据\n     * @param key 键\n     * @param parse 解析\n     */\n    public static get(key: string, parse: boolean = true) {\n        const dataString = cc.sys.localStorage.getItem(key);\n        if (dataString) {\n            if (parse) {\n                try {\n                    return JSON.parse(dataString);\n                } catch {\n                    return dataString;\n                }\n            }\n            return dataString;\n        }\n        return null;\n    }\n\n    /**\n     * 移除本地数据\n     * @param key 键\n     */\n    public static remove(key: string) {\n        cc.sys.localStorage.removeItem(key);\n    }\n\n}\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Subtitle extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    private label: cc.Label = null;\r\n\r\n    private static instance: Subtitle = null;\r\n\r\n    private queen: string[] = [];\r\n\r\n    private curIndex: number = 0;\r\n\r\n    private interval: number = 1.5;\r\n\r\n    protected onLoad() {\r\n        Subtitle.instance = this;\r\n    }\r\n\r\n    /**\r\n     * 打印字幕\r\n     * @param texts 文本\r\n     * @param interval 间隔\r\n     */\r\n    public static print(texts: string[], interval: number = 1.5) {\r\n        this.instance.print(texts, interval);\r\n    }\r\n\r\n    /**\r\n     * 清除字幕\r\n     */\r\n    public static clear() {\r\n        this.instance.clear();\r\n    }\r\n\r\n\r\n    /**\r\n     * 打印字幕\r\n     * @param texts 文本\r\n     * @param interval 间隔\r\n     */\r\n    public print(texts: string[], interval: number = 1.5) {\r\n        if (texts.length === 0) return;\r\n        this.unscheduleAllCallbacks();\r\n        this.queen = texts;\r\n        this.interval = interval;\r\n        this.curIndex = -1;\r\n        this.next();\r\n        // this.schedule(() => this.next(), this.interval, cc.macro.REPEAT_FOREVER, this.interval);\r\n    }\r\n\r\n    /**\r\n     * 下一条字幕\r\n     */\r\n    private next() {\r\n        this.curIndex++;\r\n        if (this.curIndex >= this.queen.length) {\r\n            this.unscheduleAllCallbacks();\r\n            return;\r\n        }\r\n        this.label.string = this.queen[this.curIndex];\r\n        this.scheduleOnce(() => this.next(), this.interval);\r\n    }\r\n\r\n    /**\r\n     * 清除字幕\r\n     */\r\n    public clear() {\r\n        this.unscheduleAllCallbacks();\r\n        this.queen = [];\r\n        this.curIndex = 0;\r\n        this.label.string = '';\r\n    }\r\n\r\n}\r\n","import BaseAssembler from \"../../core/renderer/BaseAssembler\";\n\nconst { ccclass, property, executeInEditMode, disallowMultiple, help, menu } = cc._decorator;\n\n/**\n * 纹理渲染器（包含缩放和偏移属性）\n * @author 陈皮皮 (ifaswind)\n * @version 20220228\n * @see TextureWithTilingOffset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/renderers/TextureWithTilingOffset.ts\n * @see BaseAssembler.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/renderer/BaseAssembler.ts\n * @see eazax-sprite-tiling-offset.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-sprite-tiling-offset.effect\n */\n@ccclass\n@executeInEditMode\n@disallowMultiple\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/renderers/TextureWithTilingOffset.ts')\n@menu('eazax/渲染组件/BaseTextureRenderer')\nexport default class TextureWithTilingOffset extends cc.RenderComponent {\n\n    // 隐藏 RenderComponent 的 materials 属性\n    @property({ override: true, visible: false })\n    protected get materials() {\n        return this._materials;\n    }\n    protected set materials(value) {\n        this._materials = value;\n        this._activateMaterial();\n    }\n\n    @property()\n    protected _material: cc.Material = null;\n    @property({ type: cc.Material, tooltip: CC_DEV && '材质' })\n    public get material() {\n        return this._material;\n    }\n    public set material(value) {\n        this._material = value;\n        this._activateMaterial();\n    }\n\n    @property()\n    protected _texture: cc.Texture2D = null;\n    @property({ type: cc.Texture2D, tooltip: CC_DEV && '纹理' })\n    public get texture() {\n        return this._texture;\n    }\n    public set texture(value) {\n        this._texture = value;\n        this._activateMaterial();\n    }\n\n    @property()\n    protected _tilingOffset: cc.Vec4 = new cc.Vec4(1, 1, 0, 0);\n\n    @property({ type: cc.Vec2, tooltip: CC_DEV && '纹理缩放' })\n    public get tiling() {\n        return new cc.Vec2(this._tilingOffset.x, this._tilingOffset.y);\n    }\n    public set tiling(value) {\n        this._tilingOffset.x = value.x;\n        this._tilingOffset.y = value.y;\n        this._updateMaterial();\n    }\n\n    @property({ type: cc.Vec2, tooltip: CC_DEV && '纹理偏移' })\n    public get offset() {\n        return new cc.Vec2(this._tilingOffset.z, this._tilingOffset.w);\n    }\n    public set offset(value) {\n        this._tilingOffset.z = value.x;\n        this._tilingOffset.w = value.y;\n        this._updateMaterial();\n    }\n\n    /**\n     * 顶点装配器\n     */\n    public _assembler: BaseAssembler = null;\n\n    /**\n     * 生命周期：启用\n     */\n    protected onEnable() {\n        super.onEnable();\n        // 节点\n        this.node.on(cc.Node.EventType.SIZE_CHANGED, this.setVertsDirty, this);\n        this.node.on(cc.Node.EventType.ANCHOR_CHANGED, this.setVertsDirty, this);\n    }\n\n    /**\n     * 生命周期：禁用\n     */\n    protected onDisable() {\n        super.onDisable();\n        // 节点\n        this.node.off(cc.Node.EventType.SIZE_CHANGED, this.setVertsDirty, this);\n        this.node.off(cc.Node.EventType.ANCHOR_CHANGED, this.setVertsDirty, this);\n    }\n\n    /**\n     * 重置顶点装配器\n     */\n    public _resetAssembler() {\n        // 装配器\n        this._assembler = new BaseAssembler();\n        this._assembler.init(this);\n        // 标记更新顶点数据\n        this.setVertsDirty();\n    }\n\n    /**\n     * 激活材质\n     */\n    public _activateMaterial() {\n        if (this._material) {\n            this._materials[0] = cc.MaterialVariant.create(this._material, this);\n        }\n        this._updateMaterial();\n    }\n\n    /**\n     * 更新材质属性\n     */\n    public _updateMaterial() {\n        if (this._texture && this._materials[0]) {\n            const material = this._materials[0];\n            // 启用 USE_TEXTURE 宏\n            if (material.getDefine('USE_TEXTURE') !== undefined) {\n                material.define('USE_TEXTURE', true);\n            }\n            // 填充属性\n            material.setProperty('texture', this._texture);\n            material.setProperty('tilingOffset', this._tilingOffset);\n            // 标记为可渲染状态\n            this.markForRender(true);\n        } else {\n            // 禁用渲染\n            this.disableRender();\n        }\n    }\n\n    /**\n     * 验证渲染状态\n     */\n    public _validateRender() {\n        if (!this._texture || !this._materials[0]) {\n            this.disableRender();\n        }\n    }\n\n}\n","/**\r\n * 时间工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210317\r\n * @see TimeUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/TimeUtil.ts\r\n */\r\nexport default class TimeUtil {\r\n\r\n    /**\r\n     * 获取当前时间戳\r\n     * @example\r\n     * TimeUtil.getTimestamp(); // 1614616955186\r\n     */\r\n    public static getTimestamp(): number {\r\n        return new Date().getTime();\r\n    }\r\n\r\n    /**\r\n     * 获取当前日期（年/月/日）\r\n     * @example\r\n     * TimeUtil.getDate(); // \"2021/3/2\"\r\n     */\r\n    public static getDate(): string {\r\n        return new Date().toLocaleDateString();\r\n    }\r\n\r\n    /**\r\n     * 获取当天指定时间的时间戳\r\n     * @param hour 时\r\n     * @param minute 分\r\n     * @param second 秒\r\n     * @example\r\n     * const time = TimeUtil.getTargetTimestamp(10, 20, 30); // 1601259630000\r\n     * new Date(time).toLocaleString(); // \"上午10:20:30\"\r\n     */\r\n    public static getTargetTimestamp(hour: number = 0, minute: number = 0, second: number = 0): number {\r\n        const start = new Date(new Date().toLocaleDateString()).getTime();\r\n        const target = ((hour * 3600) + (minute * 60) + second) * 1000;\r\n        return new Date(start + target).getTime();\r\n    }\r\n\r\n    /**\r\n     * 将毫秒转为时分秒的格式（最小单位为秒，如：\"00:01:59\"）\r\n     * @param time 毫秒数\r\n     * @param separator 分隔符\r\n     * @param keepHours 当小时数为 0 时依然展示小时数\r\n     * @example \r\n     * TimeUtil.msToHMS(119000); // \"00:01:59\"\r\n     */\r\n    public static msToHMS(time: number, separator: string = ':', keepHours: boolean = true): string {\r\n        const hours = Math.floor(time / 3600000);\r\n        const minutes = Math.floor((time - (hours * 3600000)) / 60000);\r\n        const seconds = Math.floor((time - (hours * 3600000) - (minutes * 60000)) / 1000);\r\n        const hoursString = (hours === 0 && !keepHours) ? '' : `${hours.toString().padStart(2, '0')}:`;\r\n        return `${hoursString}${minutes.toString().padStart(2, '0')}${separator}${seconds.toString().padStart(2, '0')}`;\r\n    }\r\n\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n/**\r\n * 点击屏蔽器组件\r\n * @see TouchBlocker2.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/TouchBlocker2.ts\r\n */\r\n@ccclass\r\nexport default class TouchBlocker2 extends cc.Component {\r\n\r\n    /** 可被点击的节点列表 */\r\n    @property({ type: [cc.Node], tooltip: CC_DEV && '可点击的节点列表' })\r\n    public allowList: cc.Node[] = [];\r\n\r\n    /** 是否屏蔽点击 */\r\n    @property({ tooltip: CC_DEV && '是否屏蔽点击' })\r\n    public blocked: boolean = false;\r\n\r\n    /** 是否设为常驻节点模式 */\r\n    @property({ tooltip: CC_DEV && '是否设为常驻节点模式' })\r\n    private persist: boolean = false;\r\n\r\n    /** 实例 */\r\n    private static instance: TouchBlocker2 = null;\r\n\r\n    /**\r\n     * 生命周期：加载\r\n     */\r\n    protected onLoad() {\r\n        this.init();\r\n        this.registerEvent();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：销毁\r\n     */\r\n    protected onDestroy() {\r\n        this.unregisterEvent();\r\n        TouchBlocker2.instance = null;\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    protected init() {\r\n        if (this.persist) {\r\n            // 设为最外层节点\r\n            this.node.setParent(cc.Canvas.instance.node);\r\n            this.node.setSiblingIndex(cc.macro.MAX_ZINDEX);\r\n            // 设为常驻节点\r\n            cc.game.addPersistRootNode(this.node);\r\n        }\r\n        TouchBlocker2.instance = this;\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    protected registerEvent() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onEvent, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onEvent, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onEvent, this);\r\n        // 取消吞噬事件\r\n        this.setSwallowTouches(false);\r\n    }\r\n\r\n    /**\r\n     * 反注册事件\r\n     */\r\n    protected unregisterEvent() {\r\n        this.node.targetOff(this);\r\n    }\r\n\r\n    /**\r\n     * 事件回调\r\n     * @param event 事件\r\n     */\r\n    protected onEvent(event: cc.Event.EventTouch) {\r\n        if (this.blocked && !this.clickOnAnyTarget(event.getLocation())) {\r\n            event.stopPropagationImmediate();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否点击到任意目标上\r\n     * @param pos 点击位置（世界坐标系）\r\n     */\r\n    protected clickOnAnyTarget(pos: cc.Vec2) {\r\n        for (let i = 0; i < this.allowList.length; i++) {\r\n            const rect = this.allowList[i].getBoundingBoxToWorld();\r\n            if (rect.contains(pos)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 设置节点是否吞噬点击事件\r\n     * @param swallow 状态\r\n     */\r\n    public setSwallowTouches(swallow: boolean) {\r\n        this.node._touchListener.setSwallowTouches(swallow);\r\n    }\r\n\r\n    /**\r\n     * 增加可点击的节点\r\n     * @param nodes 节点\r\n     */\r\n    public static addTargets(nodes: cc.Node | cc.Node[]) {\r\n        if (Array.isArray(nodes)) {\r\n            this.instance.allowList.push(...nodes);\r\n        } else {\r\n            this.instance.allowList.push(nodes);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置唯一可点击的目标（此行为会清空原有的可点击节点列表）\r\n     * @param node 节点\r\n     */\r\n    public static setTarget(node: cc.Node) {\r\n        this.clearTargets();\r\n        this.instance.allowList.push(node);\r\n    }\r\n\r\n    /**\r\n     * 清空可点击节点列表\r\n     */\r\n    public static clearTargets() {\r\n        this.instance.allowList.length = 0;\r\n    }\r\n\r\n    /** 启用屏蔽 */\r\n    public static on() {\r\n        this.instance.blocked = true;\r\n    }\r\n\r\n    /** 禁用屏蔽 */\r\n    public static off() {\r\n        this.instance.blocked = false;\r\n    }\r\n\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n/**\r\n * 点击屏蔽器组件\r\n * @see TouchBlocker.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/TouchBlocker.ts\r\n * @version 20210421\r\n */\r\n@ccclass\r\nexport default class TouchBlocker extends cc.Component {\r\n\r\n    @property({ type: cc.Node, tooltip: CC_DEV && '可被点击的节点' })\r\n    public target: cc.Node = null;\r\n\r\n    /**\r\n     * 拦截状态\r\n     */\r\n    protected isBlockAll: boolean = false;\r\n\r\n    /**\r\n     * 放行状态\r\n     */\r\n    protected isPassAll: boolean = false;\r\n\r\n    /**\r\n     * 生命周期：加载\r\n     */\r\n    protected onLoad() {\r\n        this.registerEvent();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：节点开始\r\n     */\r\n    protected start() {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：销毁\r\n     */\r\n    protected onDestroy() {\r\n        this.unregisterEvent();\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    protected registerEvent() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchEvent, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchEvent, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEvent, this);\r\n    }\r\n\r\n    /**\r\n     * 反注册事件\r\n     */\r\n    protected unregisterEvent() {\r\n        this.node.targetOff(this);\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    protected reset() {\r\n        // 取消吞噬事件\r\n        this.setSwallowTouches(false);\r\n    }\r\n\r\n    /**\r\n     * 事件回调\r\n     * @param event 事件\r\n     */\r\n    protected onTouchEvent(event: cc.Event.EventTouch) {\r\n        // 全部放行状态\r\n        if (this.isPassAll) {\r\n            return;\r\n        }\r\n        // 拦截状态并且无目标\r\n        if (this.isBlockAll || !this.target) {\r\n            event.stopPropagationImmediate();\r\n            return;\r\n        }\r\n        // 点击是否命中目标节点\r\n        const targetRect = this.target.getBoundingBoxToWorld(),\r\n            isContains = targetRect.contains(event.getLocation());\r\n        if (!isContains) {\r\n            event.stopPropagationImmediate();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 屏蔽所有点击\r\n     */\r\n    public blockAll() {\r\n        this.isBlockAll = true;\r\n        this.isPassAll = false;\r\n    }\r\n\r\n    /**\r\n     * 放行所有点击\r\n     */\r\n    public passAll() {\r\n        this.isPassAll = true;\r\n        this.isBlockAll = false;\r\n    }\r\n\r\n    /**\r\n     * 设置可点击的节点\r\n     * @param node 节点\r\n     */\r\n    public setTarget(node: cc.Node) {\r\n        this.target = node;\r\n        this.isBlockAll = false;\r\n        this.isPassAll = false;\r\n    }\r\n\r\n    /**\r\n     * 设置节点是否吞噬点击事件\r\n     * @param swallow 状态\r\n     */\r\n    public setSwallowTouches(swallow: boolean) {\r\n        this.node._touchListener && this.node._touchListener.setSwallowTouches(swallow);\r\n    }\r\n\r\n}\r\n","const { ccclass, property } = cc._decorator;\n\n/**\n * 点击效果\n * @author 陈皮皮 (ifaswind)\n * @version 20220213\n * @see TouchEffect.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/TouchEffect.ts\n */\n@ccclass\nexport default class TouchEffect extends cc.Component {\n\n    @property({ type: cc.Prefab, displayName: CC_DEV && '效果节点预制体' })\n    protected effectPrefab: cc.Prefab = null;\n\n    @property({ type: cc.Node, displayName: CC_DEV && '效果节点容器' })\n    protected effectContainer: cc.Node = null;\n\n    @property({ displayName: CC_DEV && '持续时间' })\n    protected duration: number = 0.5;\n\n    @property({ displayName: CC_DEV && '触发间隔' })\n    protected interval: number = 0.5;\n\n    @property({ displayName: CC_DEV && '同时存在最大数量' })\n    protected maxQuantity: number = 20;\n\n    @property({ displayName: CC_DEV && '允许滑动触发', tooltip: CC_DEV && '希望你知道你在做什么，试着调整触发时间和同时存在最大数量' })\n    protected triggerByMoving: boolean = false;\n\n    @property({ displayName: CC_DEV && '使用节点池缓存', tooltip: CC_DEV && '提高播放大量效果时的性能' })\n    protected useNodePool: boolean = false;\n\n    @property({ visible() { return this.useNodePool; }, displayName: CC_DEV && '使用节点池缓存', tooltip: CC_DEV && '提高播放大量效果时的性能' })\n    protected nodePoolLimit: number = 20;\n\n    /**\n     * 当前存在效果数量\n     */\n    protected curCount: number = 0;\n\n    /**\n     * 上一个效果触发时间\n     */\n    protected lastTriggerTime: number = 0;\n\n    /**\n     * 节点池\n     */\n    protected nodePool: cc.NodePool = new cc.NodePool();\n\n    /**\n     * 生命周期：加载\n     */\n    protected onLoad() {\n        this.registerEvent();\n    }\n\n    /**\n     * 生命周期：销毁\n     */\n    protected onDestroy() {\n        this.unregisterEvent();\n    }\n\n    /**\n     * 注册事件\n     */\n    protected registerEvent() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        // 取消事件吞噬\n        this.setSwallowTouches(false);\n    }\n\n    /**\n     * 反注册事件\n     */\n    protected unregisterEvent() {\n        this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n    }\n\n    /**\n     * 点击开始回调\n     * @param event \n     */\n    protected onTouchStart(event: cc.Event.EventTouch) {\n        this.playEffect(event.getLocation());\n    }\n\n    /**\n     * 点击移动回调\n     * @param event \n     */\n    protected onTouchMove(event: cc.Event.EventTouch) {\n        if (!this.triggerByMoving) {\n            return;\n        }\n        this.playEffect(event.getLocation());\n    }\n\n    /**\n     * 播放效果\n     * @param pos \n     */\n    protected playEffect(pos: cc.Vec2) {\n        const now = Date.now();\n        if (this.curCount >= this.maxQuantity ||\n            this.lastTriggerTime > (now - this.interval * 1000)) {\n            return;\n        }\n        this.lastTriggerTime = now;\n        this.curCount++;\n        // 创建节点\n        let node: cc.Node = null;\n        if (this.nodePool.size() > 0) {\n            node = this.nodePool.get();\n        } else {\n            node = cc.instantiate(this.effectPrefab);\n        }\n        // 设置节点\n        const container = this.effectContainer || this.node;\n        node.setParent(container);\n        node.setPosition(container.convertToNodeSpaceAR(pos));\n        // 播放动画\n        node.opacity = 255;\n        cc.tween(node)\n            .to(this.duration, { opacity: 0 })\n            .call(() => this.recycleEffect(node))\n            .start();\n    }\n\n    /**\n     * 回收效果\n     * @param node \n     */\n    protected recycleEffect(node: cc.Node) {\n        this.curCount--;\n        // 回收或者销毁\n        if (this.useNodePool && this.nodePool.size() < this.nodePoolLimit) {\n            this.nodePool.put(node);\n        } else {\n            node.destroy();\n        }\n    }\n\n    /**\n     * 设置节点是否吞噬点击事件\n     * @param swallow 状态\n     */\n    protected setSwallowTouches(swallow: boolean) {\n        this.node._touchListener && this.node._touchListener.setSwallowTouches(swallow);\n    }\n\n}\n","/**\r\n * Tween 工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210320\r\n * @see TweenUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/TweenUtil.ts\r\n */\r\nexport default class TweenUtil {\r\n\r\n    /**\r\n     * 水平翻转（卡片翻转）\r\n     * @param node 节点\r\n     * @param duration 总时长\r\n     * @param onMiddle 中间状态回调\r\n     * @param onComplete 完成回调\r\n     */\r\n    public static flip(node: cc.Node, duration: number, onMiddle?: Function, onComplete?: Function): Promise<void> {\r\n        return new Promise<void>(res => {\r\n            const tween = cc.tween,\r\n                time = duration / 2,\r\n                scaleX = node.scale,\r\n                skewY = scaleX > 0 ? 20 : -20;\r\n            tween(node)\r\n                .parallel(\r\n                    tween().to(time, { scaleX: 0 }, { easing: 'quadIn' }),\r\n                    tween().to(time, { skewY: -skewY }, { easing: 'quadOut' }),\r\n                )\r\n                .call(() => {\r\n                    onMiddle && onMiddle();\r\n                })\r\n                .parallel(\r\n                    tween().to(time, { scaleX: -scaleX }, { easing: 'quadOut' }),\r\n                    tween().to(time, { skewY: 0 }, { easing: 'quadIn' }),\r\n                )\r\n                .call(() => {\r\n                    onComplete && onComplete();\r\n                    res();\r\n                })\r\n                .start();\r\n        });\r\n    }\r\n\r\n}\r\n","/**\r\n * Eazax 全局命名空间\r\n * @see eazax.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/extensions/eazax.ts\r\n */\r\nnamespace eazax {\r\n\r\n    /**\r\n     * 打出光彩夺目的日志（黑蓝白配色）\r\n     * @param title 标题\r\n     * @param msg 信息\r\n     */\r\n    export function log(title: any, msg?: any): void {\r\n        if (msg) {\r\n            console.log(\r\n                `%c ${title} %c ${msg} `,\r\n                'background: #35495E;padding: 1px;border-radius: 2px 0 0 2px;color: #fff;',\r\n                'background: #409EFF;padding: 1px;border-radius: 0 2px 2px 0;color: #fff;'\r\n            );\r\n        } else {\r\n            console.log(\r\n                `%c ${title} `,\r\n                'background: #409EFF;padding: 1px;border-radius: 0 2px 2px 0;color: #fff;',\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nwindow['eazax'] = eazax;\r\nwindow['ez'] = window['eazax'];\r\n","// 类型扩展\r\n// @see extension.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/extensions/extension.ts\r\n\r\nString.prototype.clamp = function (start, threshold, suffix = '...') {\r\n    if (this.replace(/[^\\x00-\\xff]/g, 'xx').length <= threshold) return this;\r\n    let charCount = 0;\r\n    let result = '';\r\n    for (let i = start; i < this.length; i++) {\r\n        charCount += /[^\\x00-\\xff]/.test(this[i]) ? 2 : 1;\r\n        if (charCount > threshold) return result += suffix;\r\n        result += this[i];\r\n    }\r\n    return result;\r\n};\r\n\r\n// String.prototype.translate = function () {\r\n//     // TODO\r\n//     return this;\r\n// };\r\n","let httpDef = require('httpDef').httpDef;\n\nlet {Http, IHttpMethod } = require('Http');\n\nlet EventManager = require('EventManager');\n\nlet Language = [\"brasil\",\"columbia\"]\n\nlet ConfirmPopup = require('ConfirmPopup');\n\n\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n          \n        gamebtn: {\n            default: [],\n            type: [cc.Button] \n        }, \n        btn_rule:  {\n            default: null,\n            type: cc.Button\n        },\n        odds_Node:  {\n            default: null,\n            type: cc.Node\n        }, \n        btn_patternSelect:{\n            default: null,\n            type: cc.Button\n        },\n        panel_patternSelect:{\n            default: null,\n            type: cc.Node\n        },\n        node_close_panel_patternSelect:{\n            default: null,\n            type: cc.Node\n        },\n        btn_Baixo:{\n            default: null,\n            type: cc.Button\n        },\n        btn_Médio:{\n            default: null,\n            type: cc.Button\n        },\n        btn_Alto:{\n            default: null,\n            type: cc.Button\n        },\n        txt_patternSelect:{\n            default: null,\n            type: cc.Label\n        },\n        txt_score:{\n            default: null,\n            type: cc.Label\n        },\n        btn_play:{\n            default: null,\n            type: cc.Button\n        },\n        txt_count: {\n            type: cc.Label,\n            default: null,\n        }, \n        jiesuanLayer: {\n            type: cc.Node,\n            default: null,\n        },\n\n        txt_bet: {\n            type: cc.Label,\n            default: null,\n        },  \n\n        btn_min:{\n            default: null,\n            type: cc.Button\n        },\n\n        btn_max:{\n            default: null,\n            type: cc.Button\n        },\n\n        btn_half:{\n            default: null,\n            type: cc.Button\n        },\n\n        btn_double:{\n            default: null,\n            type: cc.Button\n        },\n\n        btn_Escolha:{\n            default: null,\n            type: cc.Button\n        },\n\n        btn_LimparTabela:{\n            default: null,\n            type: cc.Button\n        },\n\n        manual_btn: {\n            type: cc.Button,\n            default: null,\n        },\n        auto_btn: {\n            type: cc.Button,\n            default: null,\n        },\n        autoOk_btn: {\n            type: cc.Button,\n            default: null,\n        },\n         \n        auto_bg2: {\n            type: cc.Node,\n            default: null,\n        },\n\n        mask: {\n            type: cc.Node,\n            default: null,\n        },\n\n        editbox_number_of_bets: {\n            type: cc.EditBox,\n            default: null,\n        },\n        editbox_stop_on_profit: {\n            type: cc.EditBox,\n            default: null,\n        },\n        editbox_stop_on_loss: {\n            type: cc.EditBox,\n            default: null,\n        },\n        editbox_max_bet_amount: {\n            type: cc.EditBox,\n            default: null,\n        },\n        editbox_on_win: {\n            type: cc.EditBox,\n            default: null,\n        },\n        editbox_on_loss: {\n            type: cc.EditBox,\n            default: null,\n        },\n\n        toggle_on_win: {\n            type: cc.Toggle,\n            default: null,\n        },\n        toggle_on_loss: {\n            type: cc.Toggle,\n            default: null,\n        },\n\n        popupNode : {\n            type: cc.Node,\n            default: null,\n        },\n\n        ruleLayer: {\n            type: cc.Node,\n            default: null,\n        },\n\n        \n        btn_music: {\n            type: cc.Toggle,\n            default: null,\n        },\n\n        audioSource: cc.AudioSource,\n\n        language: {\n            type: cc.Enum({\n                Brasil: 0,\n                Columbia: 1,\n            }),\n            default: 0\n        },\n\n    },\n\n\n    onLoad () {\n\n        this.min_bet = 1\n        this.max_bet = 128\n\n        this.initData()\n        \n\n        //取Url参数\n        let account = \"\";\n        let token = \"\";\n        var parmStr = window.location.href.split('?')[1];\n        if (parmStr) {\n            var parms = parmStr.split('&');\n            parms.forEach(element => {\n                var parm = element.split('=');\n                if (parm[0] == \"member_account\") {\n                    account = parm[1];\n                }\n                else if (parm[0] == \"token\") {\n                    token = parm[1];\n                }\n            });\n        }\n\n        httpDef.ReqStartDefault.token = token\n        httpDef.ReqStartDefault.language = \"en\"\n\n        Http.request(\"https://game.yotuwin.com/kenogame/startDefault?token=\"+token,httpDef.ReqStartDefault,(data) => {\n            cc.log(data);\n            try {\n                const parsedData = JSON.parse(data);\n                this.gold = parsedData.data.gold\n\n            } catch (error) {\n                console.error('解析 JSON 出错:', error);\n            }\n            \n            \n        },IHttpMethod.POST,false)\n\n        cc.resources.preloadDir(\"game\",function(){\n            var infos = cc.resources.getDirWithPath('game', cc.SpriteFrame);\n            let paths = infos.map(function (info) {\n                return info.path;\n            });\n        }.bind(this));\n\n        this.resList\n        cc.resources.loadDir(\"game\", function(err, assets){\n \n            let list = cc.resources.getDirWithPath(\"game\")\n            let uuidDict = {}\n         \n            for(let item of list) {\n                uuidDict[item.uuid] = item\n            }\n         \n            let resList = {}\n            \n            for(let asset of assets) {\n                let path = uuidDict[asset[\"_uuid\"]].path\n                if(!resList[path]) {\n                    resList[path] = []\n                }\n                resList[path].push(asset)\n            }\n            this.resList = resList\n         \n        }.bind(this))\n\n        this.prefebList\n        cc.resources.loadDir(\"prefebs\", function(err, assets){\n \n            let list = cc.resources.getDirWithPath(\"prefebs\")\n            let uuidDict = {}\n         \n            for(let item of list) {\n                uuidDict[item.uuid] = item\n            }\n         \n            let resList = {}\n            \n            for(let asset of assets) {\n                let path = uuidDict[asset[\"_uuid\"]].path\n                if(!resList[path]) {\n                    resList[path] = []\n                }\n                resList[path].push(asset)\n            }\n            this.prefebList = resList\n         \n        }.bind(this))\n\n        \n\n        for(var i = 0; i < 40; i++){\n            \n            this.gamebtn[i].target.children[0].color = cc.Color.WHITE\n            this.gamebtn[i].target.children[0].getComponent(cc.Label).fontSize = 50\n            this.gamebtn[i].target.children[0].getComponent(cc.Label).string = i + 1\n            this.gamebtn[i].node.num = i + 1\n            this.gamebtn[i].node.on('click', this.gameButtonClickEvent, this)\n        }\n\n        this.btn_rule.node.on('click', this.ruleButtonClickEvent, this)\n        this.btn_patternSelect.node.on('click', this.openPatternSelectButtonClickEvent, this)\n        this.panel_patternSelect.active = false\n        this.node_close_panel_patternSelect.active = false\n        this.node_close_panel_patternSelect.on(cc.Node.EventType.TOUCH_START, this.closePatternSelectButtonClickEvent, this);\n        \n        this.btn_Baixo.node.on('click', this.patternSelectButtonClickEvent, this)\n        this.btn_Médio.node.on('click', this.patternSelectButtonClickEvent, this)\n        this.btn_Alto.node.on('click', this.patternSelectButtonClickEvent, this)\n\n        this.btn_play.node.on('click', this.playButtonClickEvent, this)\n\n        this.btn_min.node.on('click', this.betButtonClickEvent, this)\n        this.btn_max.node.on('click', this.betButtonClickEvent, this)\n        this.btn_half.node.on('click', this.betButtonClickEvent, this)\n        this.btn_double.node.on('click', this.betButtonClickEvent, this)\n\n        this.editbox_number_of_bets.node.on('editing-did-ended', this.EditboxEvent, this);\n        this.editbox_stop_on_profit.node.on('editing-did-ended', this.EditboxEvent, this);\n        this.editbox_stop_on_loss.node.on('editing-did-ended', this.EditboxEvent, this);\n        this.editbox_max_bet_amount.node.on('editing-did-ended', this.EditboxEvent, this);\n        this.editbox_on_win.node.on('editing-did-ended', this.EditboxEvent, this);\n        this.editbox_on_loss.node.on('editing-did-ended', this.EditboxEvent, this);\n        \n        this.toggle_on_win.node.on('click', this.resetIncreaseEvent, this);\n        this.toggle_on_loss.node.on('click', this.resetIncreaseEvent, this);\n\n        this.btn_Escolha.node.on('click', this.randomButtonClickEvent, this)\n        this.btn_LimparTabela.node.on('click', this.clearSelectButton, this)\n        \n        this.ConfirmPopup = this.popupNode.getComponent(\"ConfirmPopup\")\n\n        this.manual_btn.node.on('click', this.switchAutoButtonClickEvent, this)\n        this.auto_btn.node.on('click', this.switchAutoButtonClickEvent, this)\n        this.autoOk_btn.node.on('click', this.switchAutoButtonClickEvent, this)\n\n        this.btn_music.node.on('click', this.musicButtonClickEvent, this)\n\n    \n        this.Multiplicador = [[[0.7,1.8],[0,2,3.6],[0,1.1,1.3,25],[0,0,2.2,7.5,85],[0,0,1.5,4,12.5,290],[0,0,1.1,2,5.8,95,680],[0,0,1.1,1.55,3.4,15,210,680],[0,0,1.1,1.45,2,5.2,37.5,95,800],[0,0,1.1,1.3,1.6,2.5,7,50,235,900],[0,0,1.1,1.2,1.3,1.7,3.5,12,50,235,1000]],\n                              [[0.4,2.65],[0,1.7,5.1],[0,0,2.7,48],[0,0,1.7,10,85],[0,0,1.4,4,13.5,350],[0,0,0,3,9,170,690],[0,0,0,2,6.5,30,350,750],[0,0,0,2,4,10,60,370,850],[0,0,0,2,2.5,4.5,14.5,90,450,900],[0,0,0,1.55,2,4,6,24,95,480,1000]],\n                              [[0,3.8],[0,0,16.5],[0,0,0,77.7],[0,0,0,9.5,245],[0,0,0,4.3,46,435],[0,0,0,0,10.5,335,690],[0,0,0,0,6.7,86,385,770],[0,0,0,0,4.8,20,250,580,850],[0,0,0,0,4,10,54,480,770,950],[0,0,0,0,3.5,7.5,12.5,60,480,770,1000]]]\n                              \n\n        this.MultiplicadorArr = this.Multiplicador[1]//[[0.4,2.65],[0,1.7,5.1],[0,0,2.7,48],[0,0,1.7,10,85],[0,0,1.4,4,13.5,350],[0,0,0,3,9,170,690],[0,0,0,2,6.5,30,350,750],[0,0,0,2,4,10,60,370,850],[0,0,0,2,2.5,4.5,14.5,90,450,900],[0,0,0,1.55,2,4,6,24,95,480,1000]]\n    },\n\n\n\n    initData(){\n\n        this.bet = this.min_bet\n\n        this.token = \"\"\n\n        this.gold = 0       //分数\n\n        this.SelectedBtnArr = []    //选择的数字\n        this.winBtnArr = []         //赢的数字\n        this.rewardcount = 0        //中奖数量\n        this.totalwin = 0\n        this.balancegold = 0//输赢分数\n\n        //b,m,a\n        this.cnfchoose = \"m\"\n\n        this.isAuto = false\n        this.numberofbet = 0\n        this.stoponprofit = 0\n        this.stoponloss = 0\n        this.maxbetamount = 1111111111\n        this.onwinincrease = 0\n        this.onlossincrease = 0\n        this.iswinresetIncrease = false\n        this.islossresetIncrease = false\n        \n        this.istop = true\n        this.play_btn_state = false\n    },\n\n    resetData(){\n\n        this.winBtnArr = []         //赢的数字\n        this.rewardcount = 0        //中奖数量\n        this.totalwin = 0\n\n        this.isAuto = false\n\n        this.numberofbet = 0\n        this.stoponprofit = 0\n        this.stoponloss = 0\n        this.maxbetamount = 1111111111\n        this.onwinincrease = 0\n        this.onlossincrease = 0\n        this.iswinresetIncrease = false\n        this.islossresetIncrease = false\n        \n        // this.toggle_on_win.isChecked = this.iswinresetIncrease \n        // this.toggle_on_loss.isChecked = this.islossresetIncrease \n        \n        this.istop = true\n    },\n\n    start () {\n        this.toggle_on_win.isChecked = this.iswinresetIncrease \n        this.toggle_on_loss.isChecked = this.islossresetIncrease\n\n        //本地化\n        EventManager.default.emit('lang-change', Language[this.language]);\n    },\n\n    update (dt) {\n\n        //本地化\n        EventManager.default.emit('lang-change', Language[this.language]);\n\n        this.txt_score.string =  \"R$   \" + this.gold\n\n        this.btn_play.interactable = this.play_btn_state\n\n        this.txt_bet.string = \"R$   \" + this.bet\n\n        this.iswinresetIncrease = this.toggle_on_win.isChecked\n        this.islossresetIncrease = this.toggle_on_loss.isChecked\n\n        if (this.numberofbet > 0) {\n            this.txt_count.string = this.numberofbet\n            this.txt_count.node.active = true\n        }else{\n            this.txt_count.string = \"\"\n            this.txt_count.node.active = false\n        }\n        \n    },\n\n    gameButtonClickEvent(e){\n\n        this.audioSource.play()\n        this.selectButtonLogic(e)\n\n        this.play_btn_state = this.SelectedBtnArr.length <= 0 ? false : true\n    },\n\n    selectButtonLogic(e){\n        if (this.SelectedBtnArr.includes(e.node.num)) {\n            this.SelectedBtnArr = this.SelectedBtnArr.filter(item => item !== e.node.num)\n            e.target.getComponent(cc.Sprite).spriteFrame = this.getRes(\"game/k01\",cc.SpriteFrame)\n        }else{\n\n            if(this.SelectedBtnArr.length < 10){\n                this.SelectedBtnArr.push(e.node.num)\n                e.target.getComponent(cc.Sprite).spriteFrame = this.getRes(\"game/k03\",cc.SpriteFrame)\n            }\n            \n        }\n\n        this.checkBtnState()\n        this.updateOdd()\n    },\n\n    openPatternSelectButtonClickEvent(){\n        this.panel_patternSelect.active = true\n        this.node_close_panel_patternSelect.active = true\n    },\n\n    closePatternSelectButtonClickEvent(event){\n        this.panel_patternSelect.active = false\n        this.node_close_panel_patternSelect.active = false\n    },\n\n    patternSelectButtonClickEvent(event){\n\n        if(event.node.name === \"btn_Baixo\"){\n            this.txt_patternSelect.string = \"Baixo\"\n            event.isChecked = true\n            this.MultiplicadorArr = this.Multiplicador[0]\n            this.cnfchoose = \"b\"\n        }else if(event.node.name === \"btn_Médio\"){\n            this.txt_patternSelect.string = \"Médio\"\n            event.isChecked = true\n            this.MultiplicadorArr = this.Multiplicador[1]\n            this.cnfchoose = \"m\"\n        }else if(event.node.name === \"btn_Alto\"){\n            this.txt_patternSelect.string = \"Alto\"\n            event.isChecked = true\n            this.MultiplicadorArr = this.Multiplicador[2]\n            this.cnfchoose = \"a\"\n        }\n\n        this.panel_patternSelect.active = false\n        this.node_close_panel_patternSelect.active = false  \n        this.updateOdd()\n    },\n\n    //检测按钮状态\n    checkBtnState(){\n\n        if(this.SelectedBtnArr.length >= 10){\n\n            this.gamebtn.forEach((v,k)=>{\n\n                if(!this.SelectedBtnArr.includes(v.node.num)){\n                    v.target.getComponent(cc.Sprite).spriteFrame = this.getRes(\"game/k02\",cc.SpriteFrame)\n                }\n                \n            })\n\n        }else{\n\n            this.gamebtn.forEach((v,k)=>{\n\n                if(!this.SelectedBtnArr.includes(v.node.num)){\n                    v.target.getComponent(cc.Sprite).spriteFrame = this.getRes(\"game/k01\",cc.SpriteFrame)\n                }\n                \n            })\n\n        }\n\n    },\n\n    \n\n    updateOdd(){\n\n        this.odds_Node.removeAllChildren()   \n\n        if(this.SelectedBtnArr.length > 0){\n\n            let heng = cc.instantiate(this.getPrefeb(\"prefebs/heng\"));\n            this.odds_Node.addChild(heng);\n\n            \n            let newNode = cc.instantiate(this.getPrefeb(\"prefebs/odds_1\"));\n            this.odds_Node.addChild(newNode);\n            newNode.x = -340\n\n            if(this.SelectedBtnArr.length >= 4){\n                newNode.width = 683/(this.SelectedBtnArr.length + 1) - 5\n            }\n\n        }else{\n\n            return\n        }\n\n        for(var i = 0; i < this.SelectedBtnArr.length; i++) {\n            let newNode\n             newNode = cc.instantiate(this.getPrefeb(\"prefebs/odds_2\"));\n            this.odds_Node.addChild(newNode);\n            \n            if(this.SelectedBtnArr.length >= 4){\n                newNode.width = 683/(this.SelectedBtnArr.length + 1)  - 5\n                newNode.x = -340 + (newNode.width + 5) * (i+1)\n            }else{\n                newNode.x = -340 + (524/this.SelectedBtnArr.length) * (i+1)\n            }\n            \n            \n        }\n        \n        for(var i = 0; i < this.odds_Node.childrenCount; i++){\n            if(i != 0){\n                this.odds_Node.children[i].getChildByName(\"wincount\").getComponent(cc.Label).string = i - 1\n                this.odds_Node.children[i].getChildByName(\"multiplier\").getComponent(cc.Label).string = this.MultiplicadorArr[this.SelectedBtnArr.length-1][i-1] + \"x\"\n            }\n        }\n        \n    },\n\n    //开始按钮\n    playButtonClickEvent(){\n\n        // this.playAni()\n        this.startGame()\n\n    },   \n\n    startGame(){\n\n        httpDef.ReqKenoGameBet.token = httpDef.ReqStartDefault.token\n        httpDef.ReqKenoGameBet.language = \"en\"\n\n        //上局赢了\n        if (this.balancegold>0){\n            this.bet = this.bet + (this.bet * ((this.iswinresetIncrease === true) ? this.onwinincrease : 0)/100)\n        }else{\n            this.bet = this.bet + (this.bet * ((this.islossresetIncrease === true) ? this.onlossincrease : 0)/100)\n        }\n\n        this.bet = (this.bet >= this.maxbetamount) ? this.maxbetamount : this.bet\n\n        \n        httpDef.ReqKenoGameBet.bet = this.bet\n        httpDef.ReqKenoGameBet.isauto = this.isAuto\n\n        let str = \"\"\n        for (let i = 0; i < this.SelectedBtnArr.length; i++) {\n            if(i == 0){\n                str = str + encodeURIComponent(this.SelectedBtnArr[i])+ \"&\"\n            }\n            else if(i == this.SelectedBtnArr.length - 1){\n                str = str + \"choosenum=\" + encodeURIComponent(this.SelectedBtnArr[i])\n            }else{\n                str = str + \"choosenum=\" + encodeURIComponent(this.SelectedBtnArr[i]) + \"&\"\n            }\n        }\n\n        httpDef.ReqKenoGameBet.choosenum = str\n\n        //模式\n        httpDef.ReqKenoGameBet.cnfchoose = this.cnfchoose\n\n        httpDef.ReqKenoGameBet.numberofbet = this.numberofbet\n        httpDef.ReqKenoGameBet.stoponprofit = this.stoponprofit\n        httpDef.ReqKenoGameBet.stoponloss = this.stoponloss\n        httpDef.ReqKenoGameBet.maxbetamount = (this.iswinresetIncrease === true || this.islossresetIncrease === true) ? this.maxbetamount : 99999999\n        httpDef.ReqKenoGameBet.onwinincrease = (this.iswinresetIncrease === true) ? this.onwinincrease : 0\n        httpDef.ReqKenoGameBet.onlossincrease = (this.islossresetIncrease === true) ? this.onlossincrease : 0\n        httpDef.ReqKenoGameBet.totalwin = this.totalwin\n\n        this.play_btn_state = false\n\n        Http.request(\"https://game.yotuwin.com/kenogame/bet\",httpDef.ReqKenoGameBet,function(data) {\n            cc.log(data);\n            try {\n\n                setTimeout(function(){\n\n                    const parsedData = JSON.parse(data);\n                    if(parsedData.code === -1){\n                        // this.dialog(\"\",parsedData.msg)\n                        this.dialog(\"\",\"Por favor, saia da sala e entre novamente no jogo\")\n                        \n                        return\n                    }\n\n                    this.gold = parsedData.data.gold\n                    this.winBtnArr = parsedData.data.goldnumber\n                    this.rewardcount = parsedData.data.rewardcount\n\n                    this.balancegold = parsedData.data.balancegold\n                    this.totalwin = parsedData.data.totalwin\n                    this.numberofbet = parsedData.data.numberofbet\n\n                    this.istop = parsedData.data.istop\n\n                    this.playDrawAni()\n\n                    setTimeout(function(){\n                        if (this.istop === true){\n                            this.play_btn_state = true\n                            this.manual_btn.isChecked = true\n                            this.manual_btn.auto_btn = false\n                            this.resetData()\n                            this.editbox_number_of_bets.string = (this.numberofbet === 0) ? \"\" : this.numberofbet\n                            this.editbox_stop_on_profit.string = (this.stoponprofit === 0) ? \"\" : this.stoponprofit\n                            this.editbox_stop_on_loss.string = (this.stoponloss === 0) ? \"\" : this.stoponloss\n                            this.editbox_max_bet_amount.string = (this.maxbetamount === 0) ? \"\" : this.maxbetamount\n                            this.editbox_on_win.string = (this.onwinincrease === 0) ? \"\" : this.onwinincrease\n                            this.editbox_on_loss.string = (this.onlossincrease === 0) ? \"\" : this.onlossincrease\n                        }\n    \n                        \n    \n                        let jiesuanLayerOptions = {\n                            num :this.balancegold,\n                            parent:this\n                        }\n                        this.jiesuanLayer.getComponent(\"jiesuanLayer\").show(jiesuanLayerOptions)  \n    \n                        if(this.isAuto === true){\n                            this.numberofbet = parsedData.data.numberofbet\n    \n                            setTimeout(function(){\n                                this.jiesuanLayer.getComponent(\"jiesuanLayer\").hide()\n                            }.bind(this),700)\n    \n                            setTimeout(function(){\n                                this.playButtonClickEvent()\n                            }.bind(this),1000)\n                            \n                        }else{\n                            this.play_btn_state = true\n    \n                            setTimeout(function(){\n                                this.jiesuanLayer.getComponent(\"jiesuanLayer\").hide()\n                                this.resetData()\n                                this.playDrawAni()\n                            }.bind(this),2000)\n                        }\n                    }.bind(this), 1000)\n\n                    \n                    \n\n                    \n                }.bind(this), 500)\n                \n\n            } catch (error) {\n                console.error('解析 JSON 出错:', error);\n            }\n        }.bind(this),IHttpMethod.POST,false)\n    },\n\n    //开奖动画\n    playDrawAni(){\n\n        this.gamebtn.forEach(function(v,k){\n\n            //中奖的按钮\n            if(this.SelectedBtnArr.includes(v.node.num) && this.winBtnArr.includes(v.node.num)){\n                \n                v.target.getComponent(cc.Sprite).spriteFrame = this.getRes(\"game/k04\",cc.SpriteFrame)\n                v.target.children[0].color = cc.Color.BLACK\n\n            }else if(this.SelectedBtnArr.includes(v.node.num)){//选中的按钮\n\n                v.target.getComponent(cc.Sprite).spriteFrame = this.getRes(\"game/k03\",cc.SpriteFrame)\n                v.target.children[0].color = cc.Color.WHITE\n\n            }else if(this.winBtnArr.includes(v.node.num)){//开奖的按钮\n\n                v.target.getComponent(cc.Sprite).spriteFrame = this.getRes(\"game/k02\",cc.SpriteFrame)\n                v.target.children[0].color = cc.Color.WHITE\n\n            }else{//没关系的按钮\n\n                v.target.getComponent(cc.Sprite).spriteFrame = this.getRes(\"game/k01\",cc.SpriteFrame)\n                v.target.children[0].color = cc.Color.WHITE\n            }\n            \n        }.bind(this))\n\n\n    },\n\n\n    //规则按钮\n    ruleButtonClickEvent(){\n        this.ruleLayer.getComponent(\"ruleLayer\").show({parent:this})  \n    },\n\n    //music按钮\n    musicButtonClickEvent(event){\n        \n        this.audioSource.volume = event.isChecked\n\n    },\n\n    //选择模式按钮\n    switchAutoButtonClickEvent(event){\n        if(event.node.name === \"manual_btn\"){\n            this.resetData()\n\n            this.editbox_number_of_bets.string = \"\"\n            this.editbox_stop_on_profit.string = \"\"\n            this.editbox_stop_on_loss.string = \"\"\n            this.editbox_max_bet_amount.string = \"\"\n            this.editbox_on_win.string = \"\"\n            this.editbox_on_loss.string = \"\"\n            this.isAuto = false\n            this.auto_bg2.active = false\n            this.mask.active = false\n        }else if (event.node.name === \"auto_btn\"){\n            this.isAuto = false\n            this.auto_bg2.active = true\n            this.mask.active = true\n        }else if (event.node.name === \"autoOk_btn\"){\n\n            if(this.numberofbet === 0){\n                this.dialog(\"\",\"número de apostas não pode estar vazio!\")\n                return\n            }\n\n            // if(this.stoponprofit === 0 || this.stoponloss === 0){\n            //     this.dialog(\"\",\"stop on profit or stoponloss cannot be empty!\")\n            //     return\n            // }\n\n            if(this.iswinresetIncrease === true || this.islossresetIncrease === true){\n                if(Number(this.editbox_max_bet_amount.string) === 0 || this.editbox_max_bet_amount.string === \"\"){\n                    this.dialog(\"\",\"Quando o aumento na ganha ou o aumentar a perda está ativado, o valor máx de aposta não pode servazio!\")\n                    return\n                }\n                // if(this.maxbetamount === 0){\n                //     this.dialog(\"\",\"Quando o aumento na ganha ou o aumentar a perda está ativado, o valor máx de aposta não pode servazio!\")\n                //     return\n                // }\n            }\n\n            this.balancegold = 0\n            this.isAuto = true\n            this.auto_bg2.active = false\n            this.mask.active = false\n\n            this.myUpdate = function () {\n                \n                this.playButtonClickEvent()\n\n            };\n\n            this.scheduleOnce(this.myUpdate,1);\n    \n\n\n        }\n    },\n\n    //输入框\n    EditboxEvent(event){\n        \n        if(event.node.name === \"editbox_number_of_bets\"){\n            this.numberofbet = Number(event.string)\n        }else if (event.node.name === \"editbox_stop_on_profit\"){\n            this.stoponprofit = Number(event.string)\n        }else if (event.node.name === \"editbox_stop_on_loss\"){\n            this.stoponloss = Number(event.string)\n        }else if (event.node.name === \"editbox_max_bet_amount\"){  \n            this.maxbetamount = Number(event.string)\n        }else if (event.node.name === \"editbox_on_win\"){  \n            this.onwinincrease = Number(event.string)\n        }else if (event.node.name === \"editbox_on_loss\"){  \n            this.onlossincrease = Number(event.string)\n        }\n\n    },\n\n    resetIncreaseEvent(event){\n\n        //todo\n       //onwin onloss按钮相关没做\n\n\n\n        // if(event.node.name === \"toggle_on_win\"){\n        //     this.iswinresetIncrease = event.isChecked\n        // }else if (event.node.name === \"toggle_on_loss\"){\n        //     this.islossresetIncrease = event.isChecked\n        // }\n        \n    },\n\n    //下注按钮\n    betButtonClickEvent(event){\n\n        if(event.node.name === \"btn_min\"){\n            this.bet = this.min_bet\n        }else if (event.node.name === \"btn_max\"){\n            this.bet = this.max_bet\n        }else if (event.node.name === \"btn_half\"){\n            this.bet = (this.bet/2 < this.min_bet) ? this.min_bet : this.bet/2\n        }else if (event.node.name === \"btn_double\"){  \n            this.bet = (this.bet*2 > this.max_bet) ? this.max_bet : this.bet*2\n        }\n\n    },\n\n\n    randomButtonClickEvent(event){\n\n        this.clearSelectButton()\n\n        let RandomNumbers = this.getRandomNumbers()\n\n        var count = 0;\n        var maxCount = 10; // 假设你想要运行10次\n\n        this.btn_play.interactable = false\n        this.btn_Escolha .interactable = false\n        this.btn_LimparTabela.interactable = false\n        \n        this.doSomething = function() {\n            \n            count++;\n            if (count <= maxCount) {\n                \n                this.selectButtonLogic(this.gamebtn[RandomNumbers[count - 1]-1])\n\n                setTimeout(this.doSomething, 100);\n            }else{\n                this.play_btn_state = true\n                this.btn_Escolha .interactable = true\n                this.btn_LimparTabela.interactable = true\n            }\n\n        }.bind(this)\n\n        this.doSomething()\n        \n    },\n\n    clearSelectButton(){\n        this.SelectedBtnArr = []    //选择的数字\n        this.odds_Node.removeAllChildren()   \n        this.playDrawAni()\n        this.play_btn_state = this.SelectedBtnArr.length <= 0 ? false : true\n    },\n\n    \n    getRes(path, type) {\n        let list = this.resList[path]\n     \n        if(!list) {\n            return null\n        }\n     \n        for(let item of list) {\n            if(item instanceof(type)) {\n                return item\n            }\n        }\n     \n        return null\n    },\n\n    getPrefeb(path) {\n        let list = this.prefebList[path]\n     \n        if(!list) {\n            return null\n        }\n     \n        return list[0]\n\n    },\n\n    getRandomNumbers() {\n        // 创建一个包含1到40的数组\n        const numbers = Array.from({length: 40}, (_, i) => i + 1);\n    \n        // 随机打乱数组顺序\n        for (let i = numbers.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [numbers[i], numbers[j]] = [numbers[j], numbers[i]];\n        }\n    \n        // 返回前十个随机数\n        return numbers.slice(0, 10);\n    },\n\n    dialog(title,content,confirmCallback){\n        const confirmOptions = {\n            title: title,\n            content: content,\n            confirmCallback: confirmCallback\n        };\n        \n        this.ConfirmPopup.show(confirmOptions)\n    },\n});\n","let httpDef = {}\r\n\r\nhttpDef.ReqStartDefault = {\r\n    token : null,\r\n    language : null,\r\n}\r\n\r\nhttpDef.ReqKenoGameBet = {\r\n    token : null,\r\n    language : null,\r\n    bet  : null,\r\n    choosenum:null,\r\n    cnfchoose:null,\r\n\r\n    isauto  : null,//auto模式为true\r\n    numberofbet  : null,\r\n    stoponprofit  : null,\r\n    stoponloss  : null,\r\n    maxbetamount   : null,\r\n    onwinincrease  : null,\r\n    onlossincrease : null,\r\n    totalwin : null\r\n}\r\n\r\n\r\n\r\n \r\n\r\nmodule.exports = {\r\n\t'httpDef': httpDef\r\n};","import PopupBase from \"../cocos-eazax-kit-master/components/popups/PopupBase\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class jiesuanLayer extends PopupBase<jiesuanLayerOptions> {\n\n    @property(cc.Sprite)\n    private title: cc.Sprite = null;\n\n    @property(cc.Label)\n    private winnumLabel: cc.Label = null;\n    @property(cc.Label)\n    private lossnumLabel: cc.Label = null;\n\n    // @property(cc.Node)\n    // private confirmBtn: cc.Node = null;\n\n    protected onLoad() {\n        this.registerEvent();\n    }\n\n    protected onDestroy() {\n        this.unregisterEvent();\n    }\n\n    private registerEvent() {\n        //this.confirmBtn.on(cc.Node.EventType.TOUCH_END, this.onConfirmBtnClick, this);\n    }\n\n    private unregisterEvent() {\n        //this.confirmBtn.targetOff(this);\n    }\n\n    protected init() {\n\n    }\n\n    protected updateDisplay(options: jiesuanLayerOptions): void {\n        if(Number(options.num) > 0){\n            this.title.spriteFrame = options.parent.getRes(\"game/WIN\",cc.SpriteFrame)\n            this.winnumLabel.string = (options.num.toString()).replace(/[\\+\\-]/g, '')\n            this.winnumLabel.node.active = true\n            this.lossnumLabel.node.active = false\n        }else{\n            this.title.spriteFrame = options.parent.getRes(\"game/LOSE\",cc.SpriteFrame)\n            this.lossnumLabel.string = (options.num.toString()).replace(/[\\+\\-]/g, '')\n            this.winnumLabel.node.active = false\n            this.lossnumLabel.node.active = true\n        }\n\n    }\n\n    // protected onConfirmBtnClick() {\n    //     this.options.confirmCallback && this.options.confirmCallback();\n    //     this.hide();\n    // }\n\n}\n\n/** 结算选项 */\nexport interface jiesuanLayerOptions {\n    num: string;\n    parent: any;\n    //confirmCallback: Function;\n}\n","import PopupBase from \"../cocos-eazax-kit-master/components/popups/PopupBase\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ruleLayer extends PopupBase<ruleOptions> {\n\n\n    @property(cc.Sprite)\n    private rule_sprite: cc.Sprite = null;\n    @property(cc.Label)\n    private rule_txt: cc.Label = null;\n    @property(cc.Sprite)\n    private hongdian: cc.Sprite = null;\n    @property(cc.Sprite)\n    private huidian: cc.Sprite = null;\n    @property(cc.Node)\n    private nextBtn: cc.Node = null;\n    @property(cc.Node)\n    private confirmBtn: cc.Node = null;\n\n    protected onLoad() {\n        this.registerEvent();\n    }\n\n    protected onDestroy() {\n        this.unregisterEvent();\n    }\n\n    private registerEvent() {\n        this.nextBtn.on(cc.Node.EventType.TOUCH_END, this.onNextBtnClick, this);\n        this.confirmBtn.on(cc.Node.EventType.TOUCH_END, this.onConfirmBtnClick, this);\n    }\n\n    private unregisterEvent() {\n        this.confirmBtn.targetOff(this);\n    }\n\n    protected init() {\n        this.rule_sprite.spriteFrame = this.options.parent.getRes(\"game/rule01\",cc.SpriteFrame)\n        this.hongdian.spriteFrame = this.options.parent.getRes(\"game/hongdian\",cc.SpriteFrame)\n        this.huidian.spriteFrame = this.options.parent.getRes(\"game/huidian\",cc.SpriteFrame)\n        this.rule_txt.string = \"Seleccione de 1 a 10 células com números, facaumaaposta e clique em 'Aposta’.\" \n        this.nextBtn.active = true\n        this.confirmBtn.active = false\n    }\n\n    protected updateDisplay(options: ruleOptions): void {\n\n\n    }\n\n    protected onNextBtnClick() {\n        this.rule_sprite.spriteFrame = this.options.parent.getRes(\"game/rule02\",cc.SpriteFrame)\n        this.hongdian.spriteFrame = this.options.parent.getRes(\"game/huidian\",cc.SpriteFrame)\n        this.huidian.spriteFrame = this.options.parent.getRes(\"game/hongdian\",cc.SpriteFrame)\n        this.rule_txt.string = \"Em seguida, o sistema selecciona aleatoriamente10 números.Quanto mais acertos forem nos seusnúmeros,maior será o ganho!\" \n        this.nextBtn.active = false\n        this.confirmBtn.active = true\n    }\n\n    protected onConfirmBtnClick() {\n        this.hide();\n    }\n\n}\n\n/** 结算选项 */\nexport interface ruleOptions {\n    parent:any\n}\n"],"file":"index.js"}